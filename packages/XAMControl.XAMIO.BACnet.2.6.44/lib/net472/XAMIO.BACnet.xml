<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XAMIO.BACnet</name>
    </assembly>
    <members>
        <member name="T:XAMIO.BACnet.BACnetAppContext">
            <summary>
            BACnet Application Layer Context for processing requests
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppContext.Request">
            <summary>
            Gets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAppContext.#ctor(XAMIO.BACnet.BACnetAppRequest,XAMIO.BACnet.BACnetAppResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetAppContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="response">The response.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetAppRequest">
            <summary>
            BACnet application layer request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppRequest.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppRequest.PDU">
            <summary>
            Gets the pdu.
            </summary>
            <value>
            The pdu.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAppRequest.#ctor(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetAppRequest"/> class.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="address">The address.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetAppResponse">
            <summary>
            Device Result
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppResponse.None">
            <summary>
            Gets the none.
            </summary>
            <value>
            The none.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppResponse.PDU">
            <summary>
            Gets or sets the pdu.
            </summary>
            <value>
            The pdu.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetAppResponse.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAppResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetAppResponse"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAppResponse.#ctor(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetAppResponse"/> class.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAppResponse.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAppResponse.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetClientBase">
            <summary>
            BACnet Application Layer Base
            Base Class for a BACnetClient e.g. a remote client in the BACnet device or the proxy client in the workstadion
            </summary>
            <remarks>
            Feature:
                + Receive / Decode
                    - decodes Packets from the DecodeQueue, restore Segmented Messages
                    - executes ConfirmedRequestReceived or UnconfirmedRequestReceived for received requests
                + Send / Encode
                    - send packets
                    - provides a mechanis to sync send packets and wait for them with retry
                + Generate the next InvokeId for Requests
                + Generate a Connection State     
            </remarks>
        </member>
        <member name="F:XAMIO.BACnet.BACnetClientBase.trace">
            <summary>
            The trace
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.ReceiveQueueEnable">
            <summary>
            Gets or sets a value indicating whether [receive queue enable].
            </summary>
            <value>
              <c>true</c> if [receive queue enable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.SegmentationTimeout">
            <summary>
            Gets or sets the segmentation timeout.
            </summary>
            <value>
            The segmentation timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.MaxSegmentsAccepted">
            <summary>
            Gets or sets the maximum segments accepted.
            </summary>
            <value>
            The maximum segments accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.MaxAPDULengthAccepted">
            <summary>
            Gets or sets the maximum apdu length accepted.
            </summary>
            <value>
            The maximum apdu length accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.SegmentationSupport">
            <summary>
            Gets or sets the segmentation support.
            </summary>
            <value>
            The segmentation support.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.MaxAPDURetryCount">
            <summary>
            Gets or sets the maximum apdu retry count.
            </summary>
            <value>
            The maximum apdu retry count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.IsServer">
            <summary>
            Gets a value indicating whether [is server].
            </summary>
            <value>
              <c>true</c> if [is server]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.LastMessage">
            <summary>
            Gets the last message.
            </summary>
            <value>
            The last message.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.InvokeId">
            <summary>
            Gets the invoke identifier.
            </summary>
            <value>
            The invoke identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.ConnectionOk">
            <summary>
            Gets a value indicating whether [connection ok].
            </summary>
            <value>
              <c>true</c> if [connection ok]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetClientBase.ConnectionTimeout">
            <summary>
            Gets or sets the connection timeout.
            </summary>
            <value>
            The connection timeout.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMCommon.Trace.TraceDelegate,XAMIO.BACnet.IBACnetSendProvider,System.Boolean,XAMIO.BACnet.Device.IBACnetDevice)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetClientBase"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="trace">The trace.</param>
            <param name="sendProvider">The Send Provider</param>
            <param name="isServer">if set to <c>true</c> [is remote client].</param>
            <param name="device"></param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.WaitForPackages``1(System.Collections.Generic.Dictionary{System.Int32,``0},System.Action{XAMIO.BACnet.Standard.BACnetPDU,``0},System.Action{XAMIO.BACnet.Standard.BACnetPDU,``0},System.Action{System.Exception,``0},System.Action{``0})">
            <summary>
            Waits for packages.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sended">The sended. </param>
            <param name="simpleAck">The simple ack.</param>
            <param name="complexAck">The complex ack.</param>
            <param name="errorReceived">The error received.</param>
            <param name="timeOut">The time out.</param>
            <exception cref="T:System.InvalidOperationException">Unexpected PDU Type  + pdu.PDUType</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.SendBegin(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Sends the begin.
            </summary>
            <param name="request">The request.</param>
            <param name="destination">The destination.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.SendBroadcast(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Sens the broadcast.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.SendUnconfirmedRequest(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Sends the unconfirmed request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.SendConfirmedRequest(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Sends the confirmed request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.GetResponse(System.Int32)">
            <summary>
            Gets the response.
            </summary>
            <param name="invokeId">The invoke identifier.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.AddResponseTelegram(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Adds the response telegram.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="destination"></param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.ConfirmedRequestReceived(XAMIO.BACnet.IBACnetContext)">
            <summary>
            Confirmeds the request received.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.UnconfirmedRequestReceived(XAMIO.BACnet.IBACnetContext)">
            <summary>
            Unconfirmeds the request received.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.GetPassword">
            <summary>
            Gets the password.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetClientBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetHelpers">
            <summary>
            BACnet Helpers
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetHelpers.IsAutoGenerated(XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Determines whether [is automatic generated] [the specified property ident].
            </summary>
            <param name="propIdent">The property ident.</param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetHelpers.GetEventType(XAMIO.BACnet.IBACnetEventInitiatingObjects)">
            <summary>
            Gets the type of the event. 
            </summary>
            <param name="bacObj"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetHelpers.GetEventType(XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Gets the type of the event.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetHelpers.GetFaultType(XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Gets the type of the fault.
            </summary>
            <param name="type">Type of the b a cnet object.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.BACnetObjectBase">
            <summary>
            BACnet Object Base
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectBase.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectBase.ObjectIdentifier">
            <summary>
            Gets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectBase.ObjectName">
            <summary>
            Gets the name of the object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectBase.ObjectType">
            <summary>
            Gets the type of the object.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectBase.PLCEngine">
            <summary>
            the PLC Engine where the object is installed in
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectBase.#ctor(XAMIO.BACnet.Standard.BACnetObjectType,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetObjectBase"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="isProprietary">if set to <c>true</c> [is proprietary].</param>
            <param name="PLCEngine">the PLC Engine where the object is installed in</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectBase.#ctor(XAMIO.BACnet.Standard.BACnetObjectType,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetObjectBase"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="isProprietary">if set to <c>true</c> [is proprietary].</param>
            <param name="PLCEngine">the PLC Engine where the object is installed in</param>
            <param name="isDynamic">Is the object dynamic</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectBase.Exec(XAMIO.BACnet.BACnetObjectContext,System.DateTime)">
            <summary>
            Executes this instance.
            </summary>
            <param name="context"></param>
            <param name="now"></param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetObjectContext">
            <summary>
            BACnet Exec Function Object Context
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectContext.Objects">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>
            The objects.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectContext.NotificationServer">
            <summary>
            Gets the notification server.
            </summary>
            <value>
            The notification server.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectContext.ObjectAccessService">
            <summary>
            get the device object access service (for read, write etc)
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetObjectContext.DeviceManagementService">
            <summary>
            get the device object access service (for read, write etc)
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectContext.#ctor(System.Collections.Generic.Dictionary{XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject},XAMIO.BACnet.IBACnetNotificationServer,XAMIO.BACnet.Device.BACnetClientCollection,XAMIO.BACnet.Device.DeviceObjectAccessService)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetObjectContext"/> class.
            </summary>
            <param name="objects">The objects.</param>
            <param name="notificationServer">The notification server.</param>
            <param name="clientCollection"></param>
            <param name="objectAccessService"></param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectContext.FindClient(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Finds the client.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectContext.FindClient(XAMIO.BACnet.Standard.BACnetAddress)">
            <summary>
            Finds the client.
            </summary>
            <param name="addr">The addr.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectContext.FindClient(XAMIO.BACnet.Standard.BACnetRecipient)">
            <summary>
            Finds the client.
            </summary>
            <param name="rec">The record.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetResponseNotHandeledException.#ctor(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetTimeoutException"/> class.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.BACnetTimeoutException">
            <summary>
            BACnet Timeout Exception
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetTimeoutException.#ctor(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetTimeoutException"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetTimeoutException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetTimeSyncArgs">
            <summary>
            BACnet Time Sync Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetTimeSyncArgs.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetTimeSyncArgs.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetTimeSyncArgs.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.BACnetTimeSyncType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetTimeSyncArgs"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="type">The type.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetTimeSyncType">
            <summary>
            BACnet Time Sync Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.BACnetTimeSyncType.UTC">
            <summary>
            The UTC
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.BACnetTimeSyncType.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetApplicationLayer">
            <summary>
            BACnet Application Layer Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetApplicationLayer.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetApplicationLayer.Manager">
            <summary>
            Gets or sets the manager.
            </summary>
            <value>
            The manager.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetApplicationLayer.IsDevice">
            <summary>
            Gets a value indicating whether [is device].
            </summary>
            <value>
              <c>true</c> if [is device]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetApplicationLayer.IsRegistered">
            <summary>
            Gets a value indicating whether [is registered].
            </summary>
            <value>
              <c>true</c> if [is registered]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetApplicationLayer.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetApplicationLayer.TelegramReceived(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Telegrams the received.
            </summary>
            <param name="pdu">The pdu.</param>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetApplicationLayer.RegisterTimeSync(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.BACnetTimeSyncType)">
            <summary>
            Registers the time synchronize.
            </summary>
            <param name="address">The address.</param>
            <param name="timeSyncType">Type of the time synchronize.</param>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetApplicationLayer.UnregisterTimeSync(XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Unregisters the time synchronize.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetContext">
            <summary>
            BACnet application layer context interface for processing requests
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetContext.Request">
            <summary>
            Gets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetNotificationQueue">
            <summary>
            BACnet Notification Queue
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetNotificationQueue.EnqueueEvent(XAMIO.BACnet.BACnetNotificationEventArgs)">
            <summary>
            Enqueues the event.
            </summary>
            <param name="eventArgs">The <see cref="T:XAMIO.BACnet.BACnetNotificationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetNotificationServer">
            <summary>
            BACnet Notification Server Interface
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetNotificationServer.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetNotificationServer.GetUnacknowledgedEvent(XAMIO.BACnet.Standard.BACnetTimeStamp,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            get a not acknowledged event
            </summary>
            <param name="time"></param>
            <param name="bobj"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetNotificationServer.ClearUnacknowledgedEvent(XAMIO.BACnet.Standard.BACnetTimeStamp,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            clear a not acknowledged event
            </summary>
            <param name="time"></param>
            <param name="bobj"></param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetNotificationEventArgs">
            <summary>
            BACnet Notification Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.ObjectIdentifier">
            <summary>
            Gets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.FromState">
            <summary>
            Gets from state.
            </summary>
            <value>
            From state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.ToState">
            <summary>
            Gets to state.
            </summary>
            <value>
            To state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.Transition">
            <summary>
            Gets the transition.
            </summary>
            <value>
            The transition.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.IsAck">
            <summary>
            Gets a value indicating whether [is ack].
            </summary>
            <value>
              <c>true</c> if [is ack]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetNotificationEventArgs.Parameters">
            <summary>
            the notification parameters
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetNotificationEventArgs.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Nullable{XAMIO.BACnet.Standard.BACnetEventState},XAMIO.BACnet.Standard.BACnetEventState,System.Nullable{XAMIO.BACnet.Standard.BACnetEventTransition},XAMIO.BACnet.Standard.BACnetTimeStamp,System.Boolean,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetNotificationEventArgs"/> class.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="fromState">From state.</param>
            <param name="toState">To state.</param>
            <param name="transition">The transition.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="isAck">if set to <c>true</c> [is ack].</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetNotificationEventArgs.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventTransition,XAMIO.BACnet.Standard.BACnetTimeStamp,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetNotificationEventArgs"/> class.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="fromState">From state.</param>
            <param name="toState">To state.</param>
            <param name="transition">The transition.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetAckNotificationEventArgs">
            <summary>
            BACnet Ack Notification Event Args
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetAckNotificationEventArgs.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Nullable{XAMIO.BACnet.Standard.BACnetEventState},XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetTimeStamp)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetAckNotificationEventArgs"/> class.
            </summary>
            <param name="objectIdentifier">The object identifier.</param>
            <param name="fromState">The old state.</param>
            <param name="toState">To state.</param>
            <param name="timeStamp">The time stamp.</param>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetObject">
            <summary>
            BACnet Object Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetObject.ObjectIdentifier">
            <summary>
            Gets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetObject.ObjectType">
            <summary>
            Gets the type of the object.
            </summary>
            <value>
            The type of the object.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetObject.ObjectName">
            <summary>
            Gets the name of the object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetObject.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetObject.Exec(XAMIO.BACnet.BACnetObjectContext,System.DateTime)">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetObject.PLCEngine">
            <summary>
            the plc engine where the object is installed in
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetCommandable">
            <summary>
            BACnet Commandable Object Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetCommandable.CommandPrioritization">
            <summary>
            Gets the command prioritization.
            </summary>
            <value>
            The command prioritization.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetEventInitiatingObjects">
            <summary>
            BACnet Event Initiating Object Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetEventInitiatingObjects.StatusFlags">
            <summary>
            Gets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetEventInitiatingObjects.EventState">
            <summary>
            Gets the state of the event.
            </summary>
            <value>
            The state of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetEventInitiatingObjects.NotificationClass">
            <summary>
            Gets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.IBACnetEventInitiatingObjects.AckedTransitions">
            <summary>
            Gets the acked transitions.
            </summary>
            <value>
            The acked transitions.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.BACnetObjectExtensions">
            <summary>
            BACnet Object Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.GetValue``1(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <returns></returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Property not found</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.TryGetValue``1(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,``0@)">
            <summary>
            Tries the get value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.GetValue(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Gets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <returns></returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Property not found</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.TryGetValue(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.GetEnum``1(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,``0)">
            <summary>
            Gets the enum.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.GetValueOrDefault``1(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,``0)">
            <summary>
            Gets the value or default.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.SetValue(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Sets the value.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Property not found</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetObjectExtensions.TrySetValue``1(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,``0)">
            <summary>
            Tries the get value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetEventObjectExtensions">
            <summary>
            BACnet Event Object Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetEventObjectExtensions.IsEventEnabled(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetEventTransition)">
            <summary>
            Determines whether [is event enabled] [the specified object].
            </summary>
            <param name="obj">The object.</param>
            <param name="transition">The transition.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetEventObjectExtensions.UpdateAckedTransitions(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetEventTransition,System.Boolean)">
            <summary>
            Updates the acked transitions.
            </summary>
            <param name="obj">The object.</param>
            <param name="transition">The transition.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetEventObjectExtensions.IsAckRequired(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetEventTransition)">
            <summary>
            Determines whether [is ack required] [the specified object].
            </summary>
            <param name="obj">The object.</param>
            <param name="transition">The transition.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetProxyClient">
            <summary>
            BACnet Remote Client Interface
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.IBACnetProxyClient.TelegramReceivedEvent">
            <summary>
            Occurs when [telegram received event].
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.IBACnetProxyClient.UnregisterTimeSyncEvent">
            <summary>
            Occurs when [unregister time synchronize event].
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.IBACnetProxyClient.RegisterTimeSyncEvent">
            <summary>
            Occurs when [register time synchronize event].
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetProxyClient.RegisterClient(XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Registers the client.
            </summary>
            <param name="clientAddress">The client address.</param>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetProxyClient.RegisterDevice(XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Registers the device.
            </summary>
            <param name="deviceAddress">The device address.</param>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetProxyClient.ChangeClientAddress(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Changes the client address.
            </summary>
            <param name="newAddress">The new address.</param>
            <param name="oldAddress">The old address.</param>
        </member>
        <member name="T:XAMIO.BACnet.SendToClientResponseEventArgs">
            <summary>
            Telegram Received Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.SendToClientResponseEventArgs.Pdu">
            <summary>
            Gets the pdu.
            </summary>
            <value>
            The pdu.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.SendToClientResponseEventArgs.#ctor(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.TelegramReceivedEventArgs"/> class.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="destination"></param>
        </member>
        <member name="T:XAMIO.BACnet.TelegramReceivedEventArgs">
            <summary>
            Telegram Received Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.TelegramReceivedEventArgs.Pdu">
            <summary>
            Gets the pdu.
            </summary>
            <value>
            The pdu.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.TelegramReceivedEventArgs.#ctor(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.TelegramReceivedEventArgs"/> class.
            </summary>
            <param name="pdu">The pdu.</param>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetSendProvider">
            <summary>
            BACnet Send Provider Interface
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetSendProvider.SendBroadcast(System.Byte[])">
            <summary>
            Sends the broadcast.
            </summary>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetSendProvider.SendData(System.Byte[],XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Sends the data.
            </summary>
            <param name="data">The data.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.SegmentationReceiveContainer">
            <summary>
            BACnet segmentation receive container for processing received segments
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.SegmentationReceiveContainer.NeedAck">
            <summary>
            Gets a value indicating whether [need ack].
            </summary>
            <value>
              <c>true</c> if [need ack]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.SegmentationReceiveContainer.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.SegmentationReceiveContainer.InvokeId">
            <summary>
            Gets the invoke identifier.
            </summary>
            <value>
            The invoke identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.SegmentationReceiveContainer.WindowSize">
            <summary>
            Gets or sets the size of the window.
            </summary>
            <value>
            The size of the window.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationReceiveContainer.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.SegmentationReceiveContainer"/> class.
            </summary>
            <param name="invokeId">The invoke identifier.</param>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationReceiveContainer.Add(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Adds the specified pdu.
            </summary>
            <param name="pdu">The pdu.</param>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationReceiveContainer.Combine">
            <summary>
            Combines this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Segment nr:  + i +  not found</exception>
        </member>
        <member name="T:XAMIO.BACnet.SegmentationSendContainer">
            <summary>
            BACnet segmentation send container
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationSendContainer.#ctor(XAMIO.BACnet.Standard.BACnetPDU,System.Byte[],XAMIO.BACnet.Standard.BACnetSegmentation,System.Boolean,System.UInt32,System.Int32,XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.SegmentationSendContainer"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="data">The data.</param>
            <param name="segmentation">The segmentation.</param>
            <param name="isServer">if set to <c>true</c> [is server].</param>
            <param name="maxLength">The maximum length.</param>
            <param name="proposedWindowsSize">Size of the proposed windows.</param>
            <param name="maxSegmentsAccepted">The maximum segments accepted.</param>
            <param name="remoteHost"></param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetAbortException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationSendContainer.GetNext(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Gets the next.
            </summary>
            <param name="originalPDU">The original pdu.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.BACnetTimeoutException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationSendContainer.Abort">
            <summary>
            Aborts this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationSendContainer.AddAck(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Adds the ack.
            </summary>
            <param name="pdu">The pdu.</param>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationSendContainer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.SegmentationSendContainer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:XAMIO.BACnet.DeviceManagementServiceBase">
            <summary>
            BACnet device management service base class for device and workstation service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.DeviceManagementServiceBase.TimeSynchronization(XAMIO.BACnet.BACnetClientBase,System.DateTime)">
            <summary>
            Times the synchronization.
            </summary>
            <param name="client">The client.</param>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:XAMIO.BACnet.DeviceManagementServiceBase.UtcTimeSynchronization(XAMIO.BACnet.BACnetClientBase,System.DateTime)">
            <summary>
            UTCs the time synchronization.
            </summary>
            <param name="client">The client.</param>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="T:XAMIO.BACnet.StateChangeDelay`1">
            <summary>
            State Change Delay
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
        </member>
        <member name="P:XAMIO.BACnet.StateChangeDelay`1.OldState">
            <summary>
            Gets the old state.
            </summary>
            <value>
            The old state.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.StateChangeDelay`1.Execute(`0,System.UInt32)">
            <summary>
            Executes the specified new state.
            </summary>
            <param name="newState">The new state.</param>
            <param name="delaysec">The delaysec.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.ASHRAEToDataTypeConverter">
            <summary>
            ASHRAE To DataType Converter
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.CreateNewStatement(System.String,System.String)">
            <summary>
            Creates the new statement.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.GetDeclaration(System.String)">
            <summary>
            Gets the declaration.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.Convert(System.String)">
            <summary>
            Converts the specified ashrae value.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Invalid BACnet DataType  + ashraeValue</exception>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.IsBaseType(System.String)">
            <summary>
            Determines whether [is base type] [the specified ashrae value].
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.IsEnum(System.String)">
            <summary>
            Determines whether the specified ashrae value is enum.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.IsType(System.String)">
            <summary>
            Determines whether the specified ashrae value is type.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.IsEnumeration(System.String)">
            <summary>
            Determines whether the specified ashrae value is enumeration.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.GetEnumeration(System.String)">
            <summary>
            Gets the enumeration.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.GetEnumerationString(System.String)">
            <summary>
            Gets the enumeration string.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.GetEnumerationStringEnum(System.String)">
            <summary>
            Gets the enumeration string enum.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.ASHRAEToDataTypeConverter.GetUnterlyingType(System.String)">
            <summary>
            Gets the type of the unterlying.
            </summary>
            <param name="ashraeValue">The ashrae value.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationContainer">
            <summary>
            Enumeration Container
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationContainer.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationContainer.InnerType">
            <summary>
            Gets or sets the type of the inner.
            </summary>
            <value>
            The type of the inner.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationContainer.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationType">
            <summary>
            Enumeration Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationType.ASN1Array">
            <summary>
            As n1 array
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.ASHRAEToDataTypeConverter.EnumerationType.ASN1List">
            <summary>
            As n1 list
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetSerializeConverter">
            <summary>
            BACnet serialize converter interface
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.IBACnetSerializeConverter`2">
            <summary>
            BACnet typed serialize converter
            </summary>
            <typeparam name="TBAC">The BACnet type.</typeparam>
            <typeparam name="TContainer">The container type.</typeparam>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetSerializeConverter`2.Convert(`1,System.Collections.Generic.Dictionary{XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject})">
            <summary>
            Converts the specified container.
            </summary>
            <param name="container">The container.</param>
            <param name="objects">The objects.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.IBACnetSerializeConverter`2.ConvertBack(`0,System.Collections.Generic.Dictionary{XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject})">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="objects">The objects.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetSerializeConverter">
            <summary>
            BACnet serialize converter management class
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetSerializeConverter.Register``2(XAMIO.BACnet.IBACnetSerializeConverter{``0,``1})">
            <summary>
            Registers the specified converter.
            </summary>
            <typeparam name="TBAC">The type of the bac.</typeparam>
            <typeparam name="TContainer">The type of the container.</typeparam>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetSerializeConverter.Convert``2(``1,System.Collections.Generic.Dictionary{XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject})">
            <summary>
            Converts the specified value.
            </summary>
            <typeparam name="TBAC">The type of the bac.</typeparam>
            <typeparam name="TContainer">The type of the container.</typeparam>
            <param name="value">The value.</param>
            <param name="objects">The objects.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetSerializeConverter.ConvertBack``2(``0,System.Collections.Generic.Dictionary{XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject})">
            <summary>
            Converts the back.
            </summary>
            <typeparam name="TBAC">The type of the bac.</typeparam>
            <typeparam name="TContainer">The type of the container.</typeparam>
            <param name="value">The value.</param>
            <param name="objects">The objects.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetUnitsConverter">
            <summary>
            BACnet Units
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetUnitsConverter.GetUnit(System.String)">
            <summary>
            Gets the unit.
            </summary>
            <param name="txt">The text.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetUnitsConverter.GetText(XAMIO.BACnet.Standard.BACnetEngineeringUnits)">
            <summary>
            Gets the text.
            </summary>
            <param name="unit">The unit.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetValueConverter">
            <summary>
            BACnet Value Converter
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.Convert``1(System.Object,System.String)">
            <summary>
            Converts a .Net vlaue to a BACnet Value base
            </summary>
            <typeparam name="T">.Net Base Type</typeparam>
            <param name="value">.net Base Value</param>
            <param name="bacnetDataType">BACnet DataType</param>
            <returns>BACnet Base Value</returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.Convert(System.Object,XAMIO.BACnet.Standard.BACnetObjectType,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Complex Types not supported!</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertBack(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Type,XAMIO.BACnet.Standard.BACnetObjectType,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="dotnetType">Type of the dotnet.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertBack(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.String,System.Type)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="bacnetDataType">Type of the bacnet data.</param>
            <param name="dotnetType">Type of the dotnet.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertBack``1(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Type)">
            <summary>
            Converts a BACnet Base Value to a .Net Value
            </summary>
            <typeparam name="T">.Net Base Type</typeparam>
            <param name="value">BACnet Base Value</param>
            <param name="bacnetDataType">BACnet DataType</param>
            <returns>.net Base Value</returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertBaseValueBack``1(System.Object,System.String)">
            <summary>
            Converts the base value back.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <param name="bacnetDataType">Type of the bacnet data.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertBaseValueBack(System.Object,System.String,System.Type)">
            <summary>
            Converts the base value back.
            </summary>
            <param name="baseValue">The base value.</param>
            <param name="bacnetDataType">Type of the bacnet data.</param>
            <param name="dotnetType">Type of the dotnet.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertInternal(System.Object,System.String,System.Type)">
            <summary>
            Converts a .Net vlaue (typeValue or String) to a BACnet Value base
            </summary>
            <param name="value">.net Base Value</param>
            <param name="bacnetDataType">BACnet DataType</param>
            <param name="dotnetType">.Net Base Type</param>
            <returns>BACnet Base Value</returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.ConvertToCompileable(System.String,System.String)">
            <summary>
            Converts a string value to an compileable string value
            </summary>
            <param name="value">string value</param>
            <param name="bacnetDataType">bacnet dataType</param>
            <returns>compileable string value</returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetValueConverter.GetValidNetTypes(System.String)">
            <summary>
            get valid .net types for the bacnetdatatype
            </summary>
            <param name="bacnetDataType">BACnet datatype</param>
            <returns>valid .net types</returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetObjectToStringXml`1">
            <summary>
            standard compare/converter to bind bacnet objects to strings
            </summary>
            <typeparam name="T">the bacnetobject type</typeparam>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetXmlComparer`1">
            <summary>
            BACnet Xml Comparer
            </summary>
            <typeparam name="T">Xml Base Type</typeparam>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetXmlComparer`1.Serialize(System.String,`0)">
            <summary>
            Serializes the specified act XML.
            </summary>
            <param name="actXml">The act XML.</param>
            <param name="actValue">The act value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCalendarXmlComparer`2">
            <summary>
            BACnet calendar xml comparer
            </summary>
            <typeparam name="TBACnet">The type of the ba cnet.</typeparam>
            <typeparam name="TContainer">The type of the container.</typeparam>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarXmlComparer`2.Serialize(System.String,`0,System.Collections.Generic.Dictionary{XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject},System.Func{`1,System.String},System.Func{System.String,`1})">
            <summary>
            Serializes the specified act XML.
            </summary>
            <param name="actXml">The act XML.</param>
            <param name="actValue">The act value.</param>
            <param name="objects">The objects.</param>
            <param name="serialize">The serialize.</param>
            <param name="deserialize">The deserialize.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1TypeAttribute">
            <summary>
            ASN.1 Type Attribute
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.PositionalString">
            <summary>
            Gets the positional string.
            </summary>
            <value>
            The positional string.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1TypeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1TypeAttribute"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1TypeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1TypeAttribute"/> class.
            </summary>
            <param name="positionalString">The positional string.</param>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.BACnetName">
            <summary>
            Gets or sets the name of the ba cnet.
            </summary>
            <value>
            The name of the ba cnet.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.EnumValue">
            <summary>
            Gets or sets the enum value.
            </summary>
            <value>
            The enum value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.IsList">
            <summary>
            Gets or sets a value indicating whether [is list].
            </summary>
            <value>
              <c>true</c> if [is list]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.InlineType">
            <summary>
            Gets or sets a value indicating whether [inline type].
            </summary>
            <value>
              <c>true</c> if [inline type]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.RangeMin">
            <summary>
            Gets or sets the range minimum.
            </summary>
            <value>
            The range minimum.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.RangeMax">
            <summary>
            Gets or sets the range maximum.
            </summary>
            <value>
            The range maximum.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.Optional">
            <summary>
            Gets or sets a value indicating whether [optional].
            </summary>
            <value>
              <c>true</c> if [optional]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.IsArray">
            <summary>
            Gets or sets a value indicating whether [is array].
            </summary>
            <value>
              <c>true</c> if [is array]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1TypeAttribute.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetType">
            <summary>
            BACnet Datatype
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetType.CreateInstance(System.Nullable{XAMIO.BACnet.Standard.BACnetObjectType},XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Boolean)">
            <summary>
            Creates the instance.
            </summary>
            <param name="type">The type.</param>
            <param name="property">The property.</param>
            <param name="innerElement">innerElement</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetType.AreEqual(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Ares the equal.
            </summary>
            <param name="actValue">The act value.</param>
            <param name="newValue">The new value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetXmlSerializer">
            <summary>
            BACnet Xml Serializer
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetXmlSerializer.Serialize``1(``0)">
            <summary>
            Serializes the specified value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetXmlSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified XML.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IASN1EnumerableExtensions">
            <summary>
            ASN1 Array Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IASN1EnumerableExtensions.IsArrayOfLists(XAMIO.BACnet.Standard.IASN1Enumerable)">
            <summary>
            Determines whether [is array of lists] [the specified arr].
            </summary>
            <param name="arr">The arr.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Array`1">
            <summary>
            ASN.1 Array
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.UseProvider">
            <summary>
            Gets or sets a value indicating whether [use provider].
            </summary>
            <value>
              <c>true</c> if [use provider]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.Provider">
            <summary>
            Gets or sets the value provider.
            </summary>
            <value>
            The value provider.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.TagNumber">
            <summary>
            Gets or sets the tag number.
            </summary>
            <value>
            The tag number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Array`1"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Array`1"/> class.
            </summary>
            <param name="length">The length.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Array`1"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.#ctor(`0[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Array`1"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Add(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.InitValue(`0[])">
            <summary>
            Initializes the value.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.AddRange(`0[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList" />.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Array`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Array`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1BitString">
            <summary>
            ASN.1 Bit String
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1BitString.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:System.Boolean"/>.
            </value>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1BitString"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1BitString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1BitString.CheckLength(System.Int32)">
            <summary>
            Checks the length.
            </summary>
            <param name="length">The length.</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Boolean">
            <summary>
            ASN.1 Boolean
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Boolean"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Boolean"/> class.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Boolean.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1CharacterString">
            <summary>
            ASN.1 Character String
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1CharacterString.DefaultEncoding">
            <summary>
            The default encoding
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1CharacterString.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
            <value>
            The encoding.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1CharacterString"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1CharacterString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.#ctor(XAMIO.BACnet.Standard.BACnetCharacterStringEncoding,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1CharacterString"/> class.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1CharacterString.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding">
            <summary>
            BACnet Character String Encoding
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding.ANSIX34">
            <summary>
            The ANSI X34
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding.MSDBCS">
            <summary>
            The MSDBCS
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding.JISC6226">
            <summary>
            The JIS C6226
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding.UCS4">
            <summary>
            The UC s4
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding.CUCS2">
            <summary>
            The CUC s2
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCharacterStringEncoding.ISO8859">
            <summary>
            The IS o8859
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Choice`1">
            <summary>
            ASN1 Choice Base Class
            </summary>
            <typeparam name="TType">The type of the type.</typeparam>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Choice`1.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Choice`1.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Choice`1.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Choice`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Choice`1.SetType">
            <summary>
            Sets the type.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1ComplexType">
            <summary>
            ASN1 Complex Type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1ComplexType.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1ComplexType.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1ComplexType.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1ComplexType.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.InvalidOperationException">value of T expected</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1ComplexType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1ComplexType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1ComplexType.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1ComplexType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1ComplexType.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Date">
            <summary>
            ASN.1 Date
            </summary>
            <remarks>
            Date ::= [APPLICATION 10] OCTET STRING (SIZE(4)) -- see 20.2.12
            -- first octet year minus 1900 X'FF' = unspecified
            -- second octet month (1.. 14) 1 = January
            -- 13 = odd months
            -- 14 = even months
            -- X'FF' = unspecified
            -- third octet day of month (1..34), 32 = last day of month
            -- 33 = odd days of month
            -- 34 = even days of month
            -- X'FF' = unspecified
            -- fourth octet day of week (1..7) 1 = Monday
            -- 7 = Sunday
            -- X'FF' = unspecified</remarks>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Date.IncludeDayOfWeek">
            <summary>
            The include day of week
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Date.UnspecifiedYear">
            <summary>
            The unspecified year
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Date.LastDayOfMonth">
            <summary>
            The last day of month
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Date.OddDaysOfMonth">
            <summary>
            The odd days of month
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Date.UnspecifiedDay">
            <summary>
            The unspecified day
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.Year">
            <summary>
            Gets or sets the year.
            </summary>
            <value>
            The year.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.Month">
            <summary>
            Gets or sets the month.
            </summary>
            <value>
            The month.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.Day">
            <summary>
            Gets or sets the day.
            </summary>
            <value>
            The day.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.DayOfWeek">
            <summary>
            Gets or sets the day of week.
            </summary>
            <value>
            The day of week.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Date"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Date"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Date"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Date"/> class.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.#ctor(System.Int32,XAMIO.BACnet.Standard.BACnetMonths,System.Int32,XAMIO.BACnet.Standard.BACnetDays)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Date"/> class.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <param name="dayOfWeek">The day of week</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.#ctor(System.Nullable{System.Int32},System.Nullable{XAMIO.BACnet.Standard.BACnetMonths},System.Nullable{System.Int32},System.Nullable{XAMIO.BACnet.Standard.BACnetDays})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Date"/> class.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month.</param>
            <param name="day">The day.</param>
            <param name="dayOfWeek">The day of week.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.CopyFrom(XAMIO.BACnet.Standard.ASN1Date)">
            <summary>
            Copies from.
            </summary>
            <param name="other">The other.</param>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.IsEmpty">
            <summary>
            Gets if the date is empty
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.IsFixDate">
            <summary>
            Gets if the date is set to a fix date
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.IsAny">
            <summary>
            Gets if the date is any
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.IsEvenMonth">
            <summary>
            Gets if the Month is set to a 'even month'
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Date.IsOddMonth">
            <summary>
            Gets if the Month is set to a 'off month'
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.Intersects(System.DateTime,System.Boolean)">
            <summary>
            
            </summary>
            <param name="datetime"></param>
            <param name="ignoreYear"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.IsGreatherEqualThen(System.DateTime,System.Boolean)">
            <summary>
            check if provided this FlexDate is greather or equal then <para>datetime</para>
            </summary>
            <param name="datetime"></param>
            <param name="ignoreYear"></param>
            <returns>true: this >= <para>datetime</para></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.IsLessEqualThen(System.DateTime,System.Boolean)">
            <summary>
            check if provided this FlexDate is less or equal then <para>datetime</para>
            </summary>
            <param name="datetime"></param>
            <param name="ignoreYear"></param>
            <returns>true: this <para>datetime</para></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Date.Validate">
            <summary>
            Validates the current value
            </summary>
            <returns>True if valid, false if invalid</returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Double">
            <summary>
            ASN.1 Double
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Double"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Double"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Double.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Enum">
            <summary>
            ASN.1 Enum
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Enum.EnumType">
            <summary>
            Gets or sets the type of the enum.
            </summary>
            <value>
            The type of the enum.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.op_Implicit(System.Enum)~XAMIO.BACnet.Standard.ASN1Enum">
            <summary>
            Ases the n1 enum.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.op_Equality(XAMIO.BACnet.Standard.ASN1Enum,System.Enum)">
            <summary>
            ==s the specified a.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.op_Inequality(XAMIO.BACnet.Standard.ASN1Enum,System.Enum)">
            <summary>
            !=s the specified a.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum"/> class.
            </summary>
            <param name="enumType">Type of the enum.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.#ctor(System.UInt32,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="enumType">Type of the enum.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.#ctor(System.Enum)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Enum`1">
            <summary>
            ASN1 Enum of Enum Type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum`1"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum`1.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum`1.#ctor(System.Enum)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Enum`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Enum`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Integer">
            <summary>
            ASN.1 Integer
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Integer"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Integer"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.GetLength">
            <summary>
            Gets the length.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Integer.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1List`1">
            <summary>
            ASN.1 List
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1List`1"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1List`1"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.#ctor(`0[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1List`1"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.Add(`0)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1List`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Null">
            <summary>
            ASN.1 Null
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Null"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Null.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Nullable`1">
            <summary>
            nullable ANS.1 Base Type 
            e.g. for scheduler
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Nullable`1.Value">
            <summary>
            the asn1base type value
            e.g. ASN1Unsigned
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Nullable`1.HasValue">
            <summary>
            determine if the element has a value
            false if value is ASN1Null
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Nullable`1.Decode(System.Byte[],System.Int32@)">
            <summary>
            decode
            </summary>
            <param name="data"></param>
            <param name="offset"></param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Nullable`1.Encode">
            <summary>
            encode
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Nullable`1.GetValue">
            <summary>
            get value
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Nullable`1.SetValue(System.Object)">
            <summary>
            set value
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1OctetString">
            <summary>
            ASN.1 Ictet String
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1OctetString"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1OctetString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1OctetString.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Real">
            <summary>
            ASN.1 Real
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Real"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Real"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Real.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Time">
            <summary>
            ASN.1 Time
            -- X'FF' = unspecified
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Time.Unspecified">
            <summary>
            unspecified entry (any)
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.Hour">
            <summary>
            acutal hour
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.Minute">
            <summary>
            acutal minute
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.Second">
            <summary>
            second
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.Millisecond">
            <summary>
            millisecond
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.Value">
            <summary>
            the value
            returns TimeSpan.MinValue if any field (hour, minute etc) is defined as unspecified
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.IsFixTime">
            <summary>
            Gets if the time is set to a fix time
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Time.IsAny">
            <summary>
            Gets if the time is any
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Time"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Time"/> class.
            </summary>
            <param name="timeSpan">The time span.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.#ctor(System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Time"/> class.
            </summary>
            <param name="timeSpan">The time span.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Time"/> class.
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Time"/> class.
            </summary>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="ms"></param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Time"/> class.
            </summary>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <param name="ms"></param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Time.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Unsigned">
            <summary>
            ASN.1 Unsigned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ASN1Unsigned.UseMinLength">
            <summary>
            The use minimum length
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.EncodeInternal(System.Nullable{System.Int32})">
            <summary>
            Encodes the internal.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.GetLength(System.Nullable{System.Int32})">
            <summary>
            Gets the length.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.ArgumentException">offset of 0 expected!</exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Unsigned8">
            <summary>
            ASN.1 Unsigned 8
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Unsigned8.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned8.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned8"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned8.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned8"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned8.#ctor(XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned8"/> class.
            </summary>
            <param name="other">The other.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned8.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Unsigned16">
            <summary>
            ASN.1 Unsigned 16
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Unsigned16.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned16.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned16"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned16.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned16"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned16.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Unsigned32">
            <summary>
            ASN.1 Unsigned 32
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned32.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned32"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned32.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned32"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned32.#ctor(XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Unsigned32"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Unsigned32.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDateTime">
            <summary>
            BACnet Date Time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDateTime.date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDateTime.time">
            <summary>
            The time
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.Date">
            <summary>
            Gets or sets the date.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.ObjectValue">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateTime.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDateTime"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDateTime"/> class.
            </summary>
            <param name="datetime">The datetime.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDateTime"/> class.
            </summary>
            <param name="datetime">The datetime.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.IsGreaterOrEqual(System.DateTime)">
            <summary>
            Determines whether [is greater or equal] [the specified date time].
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.IsLesserOrEqual(System.DateTime)">
            <summary>
            Determines whether [is lesser or equal] [the specified date time].
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateTime.IsLesser(System.DateTime)">
            <summary>
            Determines whether the specified date time is lesser.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetObjectIdentifier">
            <summary>
            BACnet Object Identifier
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectIdentifier.DeviceWildcard">
            <summary>
            Gets the device woldcard.
            </summary>
            <value>
            The device woldcard.
            </value>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectIdentifier.DeviceWildcardInstance">
            <summary>
            The device instance wildcard
            use this if you don't know the device instance of an device
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Instance">
            <summary>
            Gets or sets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectIdentifier"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.#ctor(XAMIO.BACnet.Standard.BACnetObjectType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectIdentifier"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectIdentifier.SetName(System.String)">
            <summary>
            Sets the name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetValueComparer">
            <summary>
            BACnet Value Comparer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetValueComparer.DefaultIncrement">
            <summary>
            The default increment
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetValueComparer.Equals(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first to compare.</param>
            <param name="y">The second to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetValueComparer.PropertyEquals(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Real)">
            <summary>
            Properties the equals.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="covIncrement">The cov increment.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetValueComparer.PropertyEquals(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Double)">
            <summary>
            Properties the equals.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
            <param name="covIncrement">The cov increment.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetValueComparer.Equals(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Double)">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="increment">The increment.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetValueComparer.GetHashCode(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IAbstractSyntaxAndType">
            <summary>
            BACnet ABstract Syntax and Type Interface
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAbstractSyntaxAndType.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAbstractSyntaxAndType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IAbstractSyntaxAndType.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IAbstractSyntaxAndType.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IAbstractSyntaxAndTypeExtension">
            <summary>
            IABstractSyntaxAndType Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAbstractSyntaxAndTypeExtension.GetVarName(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Gets the name of the variable.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IASN1Choice">
            <summary>
            ASN.1 Choice Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IASN1Choice.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IASN1SequenceOfSequence">
            <summary>
            ASN.1 Sequence Of Sequence Interface
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IValueProvider">
            <summary>
            Value Provider Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IValueProvider.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IValueProvider.GetVarNames">
            <summary>
            Gets the variable names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IASN1Converter.ConvertTo``1">
            <summary>
            convert a property back from xamtype
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IASN1Converter.ConvertFrom(System.Object)">
            <summary>
            convert from a type
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IASN1BaseType">
            <summary>
            ASN.1 Base Type Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IASN1BaseType.ObjectValue">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IASN1BaseType.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Base">
            <summary>
            ASN.1 Base
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Base.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Base.ObjectValue">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Base.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Base.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Base"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.CreateNew(XAMIO.BACnet.Standard.BACnetApplicationTagType)">
            <summary>
            Creates the new.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base.GetTagType(XAMIO.BACnet.Standard.ASN1Base)">
            <summary>
            Gets the type of the tag.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ASN1Base`1">
            <summary>
            ASN.1 Base of T
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ASN1Base`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ASN1Base`1"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base`1.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ASN1Base`1.ShouldSerializeValue">
            <summary>
            This is for Newtonsoft.Json to detect if the property "Value" should be serialized or not
            Override this in subclass to change
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IASN1Enumerable">
            <summary>
            ASN1 Enumerable Interface
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IASN1EnumerableExtensionMethods">
            <summary>
            ASN.1 Enumerable Extension Methods
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IASN1EnumerableExtensionMethods.CreateNewArray(System.Object,System.Object)">
            <summary>
            Creates the new array.
            </summary>
            <param name="innerType">Type of the inner.</param>
            <param name="nextType">Type of the next.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IASN1EnumerableExtensionMethods.IsOutsideRange(XAMIO.BACnet.Standard.IASN1Enumerable,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Determines whether [is outside range] [the specified enumerable].
            </summary>
            <param name="enumerable">The enumerable.</param>
            <param name="arrayIndex">Index of the array.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IASN1EnumerableExtensionMethods.IsOutsideRange(XAMIO.BACnet.Standard.IASN1Enumerable,System.UInt32)">
            <summary>
            Determines whether [is outside range] [the specified enumerable].
            </summary>
            <param name="enumerable">The enumerable.</param>
            <param name="arrayIndex">Index of the array.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.Base.IASN1Validatable">
            <summary>
            Base for validating BACnet value states
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Base.IASN1Validatable.Validate">
            <summary>
            Validates the current value
            </summary>
            <returns>True if valid, false if invalid</returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IBACnetSequenced">
            <summary>
            BACnet Sequenced Item Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IBACnetSequenced.SequenceNumber">
            <summary>
            Gets the sequence number.
            </summary>
            <value>
            The sequence number.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IBACnetTimeStamped">
            <summary>
            BACnet Time Stamped Item Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IBACnetTimeStamped.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileACK">
            <summary>
            Atomic Read File Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.EndOfFile">
            <summary>
            Gets or sets the end of file.
            </summary>
            <value>
            The end of file.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.AccessMethod">
            <summary>
            Gets or sets the access method.
            </summary>
            <value>
            The access method.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.#ctor(System.Boolean,System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK"/> class.
            </summary>
            <param name="endOfFile">if set to <c>true</c> [end of file].</param>
            <param name="startPosition">The start position.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.Exception">
            </exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.CreateStreamAccess(System.Boolean,System.Int32,System.Byte[])">
            <summary>
            Creates the stream access.
            </summary>
            <param name="endOfFile">if set to <c>true</c> [end of file].</param>
            <param name="startPosition">The start position.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.CreateRecordAccess(System.Boolean,System.Int32,System.Collections.Generic.List{XAMIO.BACnet.Standard.ASN1OctetString})">
            <summary>
            Creates the record access.
            </summary>
            <param name="endOfFile">if set to <c>true</c> [end of file].</param>
            <param name="startPosition">The start position.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod">
            <summary>
            Read Access Method
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.#ctor(XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod"/> class.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.#ctor(XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod"/> class.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.ReadAccessMethod.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess">
            <summary>
            Stream Access
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.FileStartPosition">
            <summary>
            Gets or sets the file start position.
            </summary>
            <value>
            The file start position.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.FileData">
            <summary>
            Gets or sets the file data.
            </summary>
            <value>
            The file data.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.#ctor(System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess"/> class.
            </summary>
            <param name="fileStartPostition">The file start postition.</param>
            <param name="fileData">The file data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.#ctor(XAMIO.BACnet.Standard.ASN1Integer,XAMIO.BACnet.Standard.ASN1OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess"/> class.
            </summary>
            <param name="fileStartPosition">The file start position.</param>
            <param name="fileData">The file data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.StreamAccess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess">
            <summary>
            Record Access
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.FileStartRecord">
            <summary>
            Gets or sets the file start record.
            </summary>
            <value>
            The file start record.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.ReturnedRecordCount">
            <summary>
            Gets or sets the returned record count.
            </summary>
            <value>
            The returned record count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.FileRecordData">
            <summary>
            Gets or sets the file record data.
            </summary>
            <value>
            The file record data.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileACK.RecordAccess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicWriteFileACK">
            <summary>
            Atomic Write File Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileACK.FileStartPosition">
            <summary>
            Gets or sets the file start position.
            </summary>
            <value>
            The file start position.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileACK.FileStartRecord">
            <summary>
            Gets or sets the file start record.
            </summary>
            <value>
            The file start record.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.CreateStreamAccess(System.Int32)">
            <summary>
            Creates the stream access.
            </summary>
            <param name="streamStartPosition">The stream start position.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileACK.CreateRecordAccess(System.Int32)">
            <summary>
            Creates the record access.
            </summary>
            <param name="fileStartRecord">The file start record.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK">
            <summary>
            BACnet Confirmed Service Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.FromBytes(System.Byte[],System.Int32@,XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice)">
            <summary>
            Froms the bytes.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceACK.Create(XAMIO.BACnet.Standard.BACnetConfirmedServiceACK,XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice)">
            <summary>
            Creates the specified ack.
            </summary>
            <param name="ack">The ack.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK">
            <summary>
            Confirmed Private Transfer Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.VendorID">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.ServiceNumber">
            <summary>
            Gets or sets the service number.
            </summary>
            <value>
            The service number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.ResultBlock">
            <summary>
            Gets or sets the result block.
            </summary>
            <value>
            The result block.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferACK.Create(System.Int32,System.Int32,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Creates the specified vendor identifier.
            </summary>
            <param name="vendorID">The vendor identifier.</param>
            <param name="serviceNumber">The service number.</param>
            <param name="resultBlock">The result block.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.CreateObjectACK">
            <summary>
            Create Object Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.CreateObjectACK.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>
            The object.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectACK.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetAlarmSummaryACK">
            <summary>
            Get Alarm Summary Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetAlarmSummaryACK.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.GetAlarmSummaryACK"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryACK.Create(System.Collections.Generic.List{XAMIO.BACnet.Standard.AlarmSummaryItem})">
            <summary>
            Creates the specified list.
            </summary>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AlarmSummaryItem">
            <summary>
            Alarm Summary Item
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AlarmSummaryItem.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AlarmSummaryItem.AlarmState">
            <summary>
            Gets or sets the state of the alarm.
            </summary>
            <value>
            The state of the alarm.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AlarmSummaryItem.AcknowledgedTransitions">
            <summary>
            Gets or sets the acknowledged transitions.
            </summary>
            <value>
            The acknowledged transitions.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AlarmSummaryItem.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AlarmSummaryItem.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AlarmSummaryItem"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventTransitionBits)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AlarmSummaryItem"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="state">The state.</param>
            <param name="transition">The transition.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AlarmSummaryItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK">
            <summary>
            Get Enrollment Summary Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryACK.Create(System.Collections.Generic.List{XAMIO.BACnet.Standard.EnrollmentSummaryItem})">
            <summary>
            Creates the specified items.
            </summary>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EnrollmentSummaryItem">
            <summary>
            Enrollment Summary Item
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.EventState">
            <summary>
            Gets or sets the state of the event.
            </summary>
            <value>
            The state of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EnrollmentSummaryItem.NotificationClass">
            <summary>
            Gets or sets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EnrollmentSummaryItem.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EnrollmentSummaryItem.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EnrollmentSummaryItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EnrollmentSummaryItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EnrollmentSummaryItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEventInformationACK">
            <summary>
            Get Event Information Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationACK.ListOfEventSummaries">
            <summary>
            Gets or sets the list of event summaries.
            </summary>
            <value>
            The list of event summaries.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationACK.MoreEvents">
            <summary>
            Gets or sets the more events.
            </summary>
            <value>
            The more events.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationACK.Create(System.Collections.Generic.List{XAMIO.BACnet.Standard.GetEventInformationItem},System.Boolean)">
            <summary>
            Creates the specified items.
            </summary>
            <param name="items">The items.</param>
            <param name="moreEvents">if set to <c>true</c> [more events].</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEventInformationItem">
            <summary>
            Event Information Item
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.EventState">
            <summary>
            Gets or sets the state of the event.
            </summary>
            <value>
            The state of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.AcknowledgedTransitions">
            <summary>
            Gets or sets the acknowledged transitions.
            </summary>
            <value>
            The acknowledged transitions.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.EventTimeStamps">
            <summary>
            Gets or sets the event time stamps.
            </summary>
            <value>
            The event time stamps.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.NotifyType">
            <summary>
            Gets or sets the type of the notify.
            </summary>
            <value>
            The type of the notify.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.EventEnable">
            <summary>
            Gets or sets the event enable.
            </summary>
            <value>
            The event enable.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationItem.EventPriorities">
            <summary>
            Gets or sets the event priorities.
            </summary>
            <value>
            The event priorities.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationItem.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationItem.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyACK">
            <summary>
            Read Property Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyACK.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyACK.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyACK.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyACK.PropertyValue">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>
            The property value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyACK.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <param name="arrayIndex">The array index.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyMultipleACK">
            <summary>
            Read Property Multiple Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.ListOfReadAccessResults">
            <summary>
            Gets or sets the list of read access results.
            </summary>
            <value>
            The list of read access results.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadPropertyMultipleACK"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleACK.Create(System.Collections.Generic.List{XAMIO.BACnet.Standard.ReadAccessResult})">
            <summary>
            Creates the specified results.
            </summary>
            <param name="results">The results.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeACK">
            <summary>
            Read Range Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.ResultFlags">
            <summary>
            Gets or sets the result flags.
            </summary>
            <value>
            The result flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.ItemCount">
            <summary>
            Gets or sets the item count.
            </summary>
            <value>
            The item count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.ItemData">
            <summary>
            Gets or sets the item data.
            </summary>
            <value>
            The item data.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeACK.FirstSequenceNumber">
            <summary>
            Gets or sets the first sequence number.
            </summary>
            <remarks>
            used only if Item Count 0 and the request was either of type By Sequence Number or By Time
            </remarks>
            <value>
            The first sequence number.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeACK.Create``1(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.BACnetResultFlags,System.Collections.Generic.List{``0},System.Nullable{System.UInt32})">
            <summary>
            Creates the specified object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="resultFlags">The result flags.</param>
            <param name="list">The list.</param>
            <param name="firstSequenceNumber">The first sequence number.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.VTDataACK">
            <summary>
            VT Data Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTDataACK.AllNewDataAccepted">
            <summary>
            Gets or sets all new data accepted.
            </summary>
            <value>
            All new data accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTDataACK.AcceptedOctetCount">
            <summary>
            Gets or sets the accepted octet count.
            </summary>
            <remarks>
            present only if allNewDataAccepted FALSE
            </remarks>
            <value>
            The accepted octet count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.VTOpenACK">
            <summary>
            VT Open Ack
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTOpenACK.RemoteVTSessionIdentifier">
            <summary>
            Gets or sets the remote vt session identifier.
            </summary>
            <value>
            The remote vt session identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenACK.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenACK.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenACK.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenACK.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenACK.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest">
            <summary>
            Acknowledge Alarm Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.AcknowledgingProcessIdentifier">
            <summary>
            Gets or sets the acknowledging process identifier.
            </summary>
            <value>
            The acknowledging process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.EventObjectIdentifier">
            <summary>
            Gets or sets the event object identifier.
            </summary>
            <value>
            The event object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.EventStateAcknowledged">
            <summary>
            Gets or sets the event state acknowledged.
            </summary>
            <value>
            The event state acknowledged.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.AcknowledgmentSource">
            <summary>
            Gets or sets the acknowledgment source.
            </summary>
            <value>
            The acknowledgment source.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.TimeOfAcknowledgment">
            <summary>
            Gets or sets the time of acknowledgment.
            </summary>
            <value>
            The time of acknowledgment.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AcknowledgeAlarmRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetTimeStamp,System.String,XAMIO.BACnet.Standard.BACnetTimeStamp)">
            <summary>
            Creates the specified process identifier.
            </summary>
            <param name="processIdentifier">The process identifier.</param>
            <param name="eventObj">The event object.</param>
            <param name="eventState">State of the event.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="source">The source.</param>
            <param name="ackTime">The ack time.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AddListElementRequest">
            <summary>
            Add List Element Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AddListElementRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AddListElementRequest.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AddListElementRequest.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AddListElementRequest.ListOfElements">
            <summary>
            Gets or sets the list of elements.
            </summary>
            <value>
            The list of elements.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AddListElementRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AddListElementRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AddListElementRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AddListElementRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AddListElementRequest.Create``1(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Collections.Generic.List{``0})">
            <summary>
            Creates the specified object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileRequest">
            <summary>
            Atomic Read File Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileRequest.FileIdentifier">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>
            The file identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileRequest.AccessMethod">
            <summary>
            Gets or sets the access method.
            </summary>
            <value>
            The access method.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest"/> class.
            </summary>
            <param name="fileIdentifier">The file identifier.</param>
            <param name="accessMethod">The access method.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.Exception">
            </exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.CreateStreamAccess(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Int32)">
            <summary>
            Creates the stram access.
            </summary>
            <param name="file">The file.</param>
            <param name="start">The start.</param>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.CreateRecordAccess(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Int32)">
            <summary>
            Creates the record access.
            </summary>
            <param name="file">The file.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod">
            <summary>
            Read Access Method
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.#ctor(XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod"/> class.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.#ctor(XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod"/> class.
            </summary>
            <param name="method">The method.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.ReadAccessMethod.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess">
            <summary>
            Stream Access
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.FileStartPosition">
            <summary>
            Gets or sets the file start position.
            </summary>
            <value>
            The file start position.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.RequestedOctetCount">
            <summary>
            Gets or sets the requested octet count.
            </summary>
            <value>
            The requested octet count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.#ctor(XAMIO.BACnet.Standard.ASN1Integer,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess"/> class.
            </summary>
            <param name="fileStartPosition">The file start position.</param>
            <param name="requestedOctetCount">The requested octet count.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.StreamAccess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess">
            <summary>
            Record Access
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.FileStartRecord">
            <summary>
            Gets or sets the file start record.
            </summary>
            <value>
            The file start record.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.RequestedRecordCount">
            <summary>
            Gets or sets the requested record count.
            </summary>
            <value>
            The requested record count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.#ctor(XAMIO.BACnet.Standard.ASN1Integer,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess"/> class.
            </summary>
            <param name="fileStartRecord">The file start record.</param>
            <param name="requestedRecordCount">The requested record count.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicReadFileRequest.RecordAccess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest">
            <summary>
            Atomic Write File Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.FileIdentifier">
            <summary>
            Gets or sets the file identifier.
            </summary>
            <value>
            The file identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.AccessMethod">
            <summary>
            Gets or sets the access method.
            </summary>
            <value>
            The access method.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest"/> class.
            </summary>
            <param name="file">The file.</param>
            <param name="access">The access.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest"/> class.
            </summary>
            <param name="file">The file.</param>
            <param name="filestart">The filestart.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Collections.Generic.List{XAMIO.BACnet.Standard.ASN1OctetString})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest"/> class.
            </summary>
            <param name="file">The file.</param>
            <param name="filestart">The filestart.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.Exception">
            </exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.CreateStramAccess(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Byte[])">
            <summary>
            Creates the stram access.
            </summary>
            <param name="file">The file.</param>
            <param name="filestart">The filestart.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.CreateRecordAccess(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Collections.Generic.List{XAMIO.BACnet.Standard.ASN1OctetString})">
            <summary>
            Creates the record access.
            </summary>
            <param name="file">The file.</param>
            <param name="filestart">The filestart.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod">
            <summary>
            Write Access Method
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.#ctor(XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod"/> class.
            </summary>
            <param name="record">The record.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.#ctor(XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.WriteAccessMethod.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess">
            <summary>
            Stream Access
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.FileStartPosition">
            <summary>
            Gets or sets the file start position.
            </summary>
            <value>
            The file start position.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.FileData">
            <summary>
            Gets or sets the file data.
            </summary>
            <value>
            The file data.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.StreamAccess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess">
            <summary>
            Record Access
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.FileStartRecord">
            <summary>
            Gets or sets the file start record.
            </summary>
            <value>
            The file start record.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.RecordCount">
            <summary>
            Gets or sets the record count.
            </summary>
            <value>
            The record count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.FileRecordData">
            <summary>
            Gets or sets the file record data.
            </summary>
            <value>
            The file record data.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.AtomicWriteFileRequest.RecordAccess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest">
            <summary>
            BACnet Confirmed Service Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.FromBytes(System.Byte[],System.Int32@,XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice)">
            <summary>
            Froms the bytes.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest.Create(XAMIO.BACnet.Standard.BACnetConfirmedServiceRequest,XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice)">
            <summary>
            Creates the specified service.
            </summary>
            <param name="service">The service.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest">
            <summary>
            Confirmed COV Notification Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.SubscriberProcessIdentifier">
            <summary>
            Gets or sets the subscriber process identifier.
            </summary>
            <value>
            The subscriber process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.InitiatingDeviceIdentifier">
            <summary>
            Gets or sets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.MonitoredObjectIdentifier">
            <summary>
            Gets or sets the monitored object identifier.
            </summary>
            <value>
            The monitored object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.TimeRemaining">
            <summary>
            Gets or sets the time remaining.
            </summary>
            <value>
            The time remaining.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.ListOfValues">
            <summary>
            Gets or sets the list of values.
            </summary>
            <value>
            The list of values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the specified process identifier.
            </summary>
            <param name="processIdentifier">The process identifier.</param>
            <param name="initiatingDevice">The initiating device.</param>
            <param name="obj">The object.</param>
            <param name="timeRemaining">The time remaining.</param>
            <param name="listOfValues">The list of values.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedCOVNotificationRequest.Create(XAMIO.BACnet.Standard.ASN1Unsigned32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the specified process identifier.
            </summary>
            <param name="processIdentifier">The process identifier.</param>
            <param name="initiatingDevice">The initiating device.</param>
            <param name="obj">The object.</param>
            <param name="timeRemaining">The time remaining.</param>
            <param name="listOfValues">The list of values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest">
            <summary>
            Confirmed Event Notification Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.ProcessIdentifier">
            <summary>
            Gets or sets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.InitiatingDeviceIdentifier">
            <summary>
            Gets or sets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.EventObjectIdentifier">
            <summary>
            Gets or sets the event object identifier.
            </summary>
            <value>
            The event object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.NotificationClass">
            <summary>
            Gets or sets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.MessageText">
            <summary>
            Gets or sets the message text.
            </summary>
            <value>
            The message text.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.NotifyType">
            <summary>
            Gets or sets the type of the notify.
            </summary>
            <value>
            The type of the notify.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.AckRequired">
            <summary>
            Gets or sets the ack required.
            </summary>
            <value>
            The ack required.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.FromState">
            <summary>
            Gets or sets from state.
            </summary>
            <value>
            From state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.ToState">
            <summary>
            Gets or sets to state.
            </summary>
            <value>
            To state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.EventValues">
            <summary>
            Gets or sets the event values.
            </summary>
            <value>
            The event values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetTimeStamp,System.UInt32,System.Int32,XAMIO.BACnet.Standard.BACnetEventType,System.String,XAMIO.BACnet.Standard.BACnetNotifyType,System.Boolean,System.Nullable{XAMIO.BACnet.Standard.BACnetEventState},XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Creates the specified process identifer.
            </summary>
            <param name="processIdentifer">The process identifer.</param>
            <param name="initiating">The initiating.</param>
            <param name="eventObj">The event object.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="notificationClass">The notification class.</param>
            <param name="priority">The priority.</param>
            <param name="eventType">Type of the event.</param>
            <param name="message">The message.</param>
            <param name="notify">The notify.</param>
            <param name="ackRequired">if set to <c>true</c> [ack required].</param>
            <param name="fromState">From state.</param>
            <param name="toState">To state.</param>
            <param name="eventvalues">The eventvalues.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Create(XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetTimeStamp,System.UInt32,XAMIO.BACnet.Standard.ASN1Unsigned8,XAMIO.BACnet.Standard.BACnetEventType,System.String,XAMIO.BACnet.Standard.BACnetNotifyType,System.Nullable{System.Boolean},System.Nullable{XAMIO.BACnet.Standard.BACnetEventState},XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Creates the specified process identifer.
            </summary>
            <param name="processIdentifer">The process identifer.</param>
            <param name="initiating">The initiating.</param>
            <param name="eventObj">The event object.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="notificationClass">The notification class.</param>
            <param name="priority">The priority.</param>
            <param name="eventType">Type of the event.</param>
            <param name="message">The message.</param>
            <param name="notify">The notify.</param>
            <param name="ackRequired">if set to <c>true</c> [ack required].</param>
            <param name="fromState">From state.</param>
            <param name="toState">To state.</param>
            <param name="eventvalues">The eventvalues.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest.Create(XAMIO.BACnet.Standard.ConfirmedEventNotificationRequest)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest">
            <summary>
            Confirmed Private Transder Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.VendorID">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.ServiceNumber">
            <summary>
            Gets or sets the service number.
            </summary>
            <value>
            The service number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.ServiceParameters">
            <summary>
            Gets or sets the service parameters.
            </summary>
            <value>
            The service parameters.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferRequest.Create(System.UInt32,System.Int32,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Creates the specified vendor identifier.
            </summary>
            <param name="vendorId">The vendor identifier.</param>
            <param name="serviceNumber">The service number.</param>
            <param name="serviceParameter">The service parameter.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest">
            <summary>
            Confirmed Text Message Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.TextMessageSourceDevice">
            <summary>
            Gets or sets the text message source device.
            </summary>
            <value>
            The text message source device.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessageClass">
            <summary>
            Gets or sets the message class.
            </summary>
            <value>
            The message class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessagePriority">
            <summary>
            Gets or sets the message priority.
            </summary>
            <value>
            The message priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessagePriorityType,System.String)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="prio">The prio.</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessageClassType">
            <summary>
            Message Class Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessageClassType.Numeric">
            <summary>
            The numeric
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessageClassType.Character">
            <summary>
            The character
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessagePriorityType">
            <summary>
            Message Priority Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessagePriorityType.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ConfirmedTextMessageRequest.MessagePriorityType.Urgent">
            <summary>
            The urgent
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.CreateObjectRequest">
            <summary>
            Create Object Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.CreateObjectRequest.ObjectSpecifier">
            <summary>
            Gets or sets the object specifier.
            </summary>
            <value>
            The object specifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.CreateObjectRequest.ListOfInitialValues">
            <summary>
            Gets or sets the list of initial values.
            </summary>
            <value>
            The list of initial values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectRequest.Create(XAMIO.BACnet.Standard.BACnetObjectType,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="initialValues">The initial values.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the specified ident.
            </summary>
            <param name="ident">The ident.</param>
            <param name="initialValues">The initial values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.CreateObjectRequest.ObjectSpecifierType">
            <summary>
            Object Specifier Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.CreateObjectRequest.ObjectSpecifierType.ObjectType">
            <summary>
            The object type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.CreateObjectRequest.ObjectSpecifierType.ObjectIdentifier">
            <summary>
            The object identifier
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.DeleteObjectRequest">
            <summary>
            Delete Object Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.DeleteObjectRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeleteObjectRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeleteObjectRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeleteObjectRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeleteObjectRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeleteObjectRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest">
            <summary>
            Device Communication Control Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.TimeDuration">
            <summary>
            Gets or sets the duration of the time.
            </summary>
            <value>
            The duration of the time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.EnableDisable">
            <summary>
            Gets or sets the enable disable.
            </summary>
            <value>
            The enable disable.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.DeviceCommunicationControlRequest.Create(XAMIO.BACnet.Standard.BACnetCommunicationControlAction,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates the specified duration.
            </summary>
            <param name="duration">The duration.</param>
            <param name="action">The enabledisable.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCommunicationControlAction">
            <summary>
            Device Communication Control Request Enable Disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCommunicationControlAction.Enable">
            <summary>
            The enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCommunicationControlAction.Disable">
            <summary>
            The disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCommunicationControlAction.DisableInitiation">
            <summary>
            The disable initiation
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetAlarmSummaryRequest">
            <summary>
            Get Alarm Summary Request
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.GetAlarmSummaryRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetAlarmSummaryRequest.Create">
            <summary>
            Creates this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest">
            <summary>
            Get Enrollment Summary Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilter">
            <summary>
            Gets or sets the acknowledgment filter.
            </summary>
            <value>
            The acknowledgment filter.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EnrollmentFilter">
            <summary>
            Gets or sets the enrollment filter.
            </summary>
            <value>
            The enrollment filter.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilter">
            <summary>
            Gets or sets the event state filter.
            </summary>
            <value>
            The event state filter.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventTypeFilter">
            <summary>
            Gets or sets the event type filter.
            </summary>
            <value>
            The event type filter.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilter">
            <summary>
            Gets or sets the priority filter.
            </summary>
            <value>
            The priority filter.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.NotificationClassFilter">
            <summary>
            Gets or sets the notification class filter.
            </summary>
            <value>
            The notification class filter.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.Create(XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilterType,XAMIO.BACnet.Standard.BACnetRecipientProcess,System.Nullable{XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType},System.Nullable{XAMIO.BACnet.Standard.BACnetEventType},XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType,System.Nullable{System.UInt32})">
            <summary>
            Creates the specified ackfilter.
            </summary>
            <param name="ackfilter">The ackfilter.</param>
            <param name="enrollmentFilter">The enrollment filter.</param>
            <param name="eventfilter">The eventfilter.</param>
            <param name="eventTypeFiler">The event type filer.</param>
            <param name="priorityFiler">The priority filer.</param>
            <param name="notificatonClassFilter">The notificaton class filter.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilterType">
            <summary>
            Acknowledge Filter Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilterType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilterType.Acked">
            <summary>
            The acked
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilterType.NotAcked">
            <summary>
            The not acked
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType">
            <summary>
            Event State Filter Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType.Offnormal">
            <summary>
            The offnormal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType.Fault">
            <summary>
            The fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType.Active">
            <summary>
            The active
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType">
            <summary>
            Priority Filter Type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.MinPriority">
            <summary>
            Gets or sets the minimum priority.
            </summary>
            <value>
            The minimum priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.MaxPriority">
            <summary>
            Gets or sets the maximum priority.
            </summary>
            <value>
            The maximum priority.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.GetEventInformationRequest">
            <summary>
            Get Event Information Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.GetEventInformationRequest.LastReceivedObjectIdentifier">
            <summary>
            Gets or sets the last received object identifier.
            </summary>
            <value>
            The last received object identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.GetEventInformationRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Creates the specified last received.
            </summary>
            <param name="lastReceived">The last received.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ISubscribeCOVRequest">
            <summary>
            Subscribe COV Request Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ISubscribeCOVRequest.IssueConfirmedNotifications">
            <summary>
            Gets or sets the issue confirmed notifications.
            </summary>
            <value>
            The issue confirmed notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ISubscribeCOVRequest.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ISubscribeCOVRequest.MonitoredObjectIdentifier">
            <summary>
            Gets or sets the monitored object identifier.
            </summary>
            <value>
            The monitored object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ISubscribeCOVRequest.SubscriberProcessIdentifier">
            <summary>
            Gets or sets the subscriber process identifier.
            </summary>
            <value>
            The subscriber process identifier.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.LifeSafetyOperationRequest">
            <summary>
            Life Safety Operation Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.RequestingProcessIdentifier">
            <summary>
            Gets or sets the requesting process identifier.
            </summary>
            <value>
            The requesting process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.RequestingSource">
            <summary>
            Gets or sets the requesting source.
            </summary>
            <value>
            The requesting source.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.Request">
            <summary>
            Gets or sets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LifeSafetyOperationRequest.Create(System.UInt32,System.String,XAMIO.BACnet.Standard.BACnetLifeSafetyOperation,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Creates the specified process.
            </summary>
            <param name="process">The process.</param>
            <param name="source">The source.</param>
            <param name="requestOperation">The request operation.</param>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest">
            <summary>
            Read Property Conditional Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteria">
            <summary>
            Gets or sets the object selection criteria.
            </summary>
            <value>
            The object selection criteria.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ListOfPropertyReferences">
            <summary>
            Gets or sets the list of property references.
            </summary>
            <value>
            The list of property references.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType">
            <summary>
            Object Selection Criteria Type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.SelectionLogic">
            <summary>
            Gets or sets the selection logic.
            </summary>
            <value>
            The selection logic.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.ListOfSelectionCriteria">
            <summary>
            Gets or sets the list of selection criteria.
            </summary>
            <value>
            The list of selection criteria.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.ObjectSelectionCriteriaType.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionLogic">
            <summary>
            Selection Logic
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionLogic.AND">
            <summary>
            The and
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionLogic.OR">
            <summary>
            The or
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionLogic.ALL">
            <summary>
            All
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria">
            <summary>
            Selection Criteria
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.RelationSpecifier">
            <summary>
            Gets or sets the relation specifier.
            </summary>
            <value>
            The relation specifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.ComparisonValue">
            <summary>
            Gets or sets the comparison value.
            </summary>
            <value>
            The comparison value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.SelectionCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer">
            <summary>
            Relation Specifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer.Equal">
            <summary>
            The equal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer.NotEqual">
            <summary>
            The not equal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer.LessThan">
            <summary>
            The less than
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer.GreaterThan">
            <summary>
            The greater than
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer.LessThanOrEqual">
            <summary>
            The less than or equal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadPropertyConditionalRequest.RelationSpecifer.GreaterThanOrEqual">
            <summary>
            The greater than or equal
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest">
            <summary>
            Read Property Mutliple Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest.ListOfReadAccessSpecs">
            <summary>
            Gets or sets the list of read access specs.
            </summary>
            <value>
            The list of read access specs.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyMultipleRequest.Create(System.Collections.Generic.List{XAMIO.BACnet.Standard.ReadAccessSpecification})">
            <summary>
            Creates the specified requested properties.
            </summary>
            <param name="requestedProperties">The requested properties.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadPropertyRequest">
            <summary>
            Read Property Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyRequest.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadPropertyRequest.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <remarks>
            used only with array datatype if omitted with an array the entire array is referenced
            </remarks>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadPropertyRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadPropertyRequest"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadPropertyRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Nullable{System.Int32})">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="property">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeRequest">
            <summary>
            Read Range Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>
            The range.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadPropertyRequest"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="range"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="rangeByTime">The range by time.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="rangeByPosition">The range by position.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="rangeBySequenceNumber">The range by sequence number.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
            <param name="range">The range.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange">
            <summary>
            Read Range Request Range
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.#ctor(XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange"/> class.
            </summary>
            <param name="rangeByTime">The range by time.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.#ctor(XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange"/> class.
            </summary>
            <param name="rangeByPosition">The range by position.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.#ctor(XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange"/> class.
            </summary>
            <param name="rangeBySequenceNumber">The range by sequence number.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.#ctor(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition">
            <summary>
            Range By Position
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.ReferenceIndex">
            <summary>
            Gets or sets the index of the reference.
            </summary>
            <value>
            The index of the reference.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.#ctor(System.UInt32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByPosition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber">
            <summary>
            Range By Sequence Number
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.ReferenceIndex">
            <summary>
            Gets or sets the index of the reference.
            </summary>
            <value>
            The index of the reference.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.#ctor(System.UInt32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeBySequenceNumber.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime">
            <summary>
            Range By Time
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.ReferenceTime">
            <summary>
            Gets or sets the reference time.
            </summary>
            <value>
            The reference time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.#ctor(XAMIO.BACnet.Standard.BACnetDateTime,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadRangeRequest.RangeByTime.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadRangeRequest.RangeType">
            <summary>
            Range Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadRangeRequest.RangeType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadRangeRequest.RangeType.ByPosition">
            <summary>
            The by position
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadRangeRequest.RangeType.BySequenceNumber">
            <summary>
            The by sequence number
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.ReadRangeRequest.RangeType.ByTime">
            <summary>
            The by time
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReinitializeDeviceRequest">
            <summary>
            Reinitialize Device Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.ReinitializedStateOfDevice">
            <summary>
            Gets or sets the reinitialized state of device.
            </summary>
            <value>
            The reinitialized state of device.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReinitializeDeviceRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.#ctor(XAMIO.BACnet.Standard.BACnetReinitializeAction,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReinitializeDeviceRequest"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReinitializeDeviceRequest.Create(XAMIO.BACnet.Standard.BACnetReinitializeAction,System.String)">
            <summary>
            Creates the specified state.
            </summary>
            <param name="state">The state.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetReinitializeAction">
            <summary>
            Reinitialize Device Request Action
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Coldstart">
            <summary>
            The coldstart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Warmstart">
            <summary>
            The warmstart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Startbackup">
            <summary>
            The startbackup
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Endbackup">
            <summary>
            The endbackup
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Startrestore">
            <summary>
            The startrestore
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Endrestore">
            <summary>
            The endrestore
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReinitializeAction.Abortrestore">
            <summary>
            The abortrestore
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.RemoveListElementRequest">
            <summary>
            Remov List Element Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.RemoveListElementRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.RemoveListElementRequest.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.RemoveListElementRequest.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.RemoveListElementRequest.ListOfElements">
            <summary>
            Gets or sets the list of elements.
            </summary>
            <value>
            The list of elements.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.RemoveListElementRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.RemoveListElementRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.RemoveListElementRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.RemoveListElementRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.RemoveListElementRequest.Create``1(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Collections.Generic.List{``0})">
            <summary>
            Creates the specified object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest">
            <summary>
            Subscribe COV Property Request
            => Subscribe auf Property oder Event State Change
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.SubscriberProcessIdentifier">
            <summary>
            Gets or sets the subscriber process identifier.
            </summary>
            <value>
            The subscriber process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.MonitoredObjectIdentifier">
            <summary>
            Gets or sets the monitored object identifier.
            </summary>
            <value>
            The monitored object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.IssueConfirmedNotifications">
            <summary>
            Gets or sets the issue confirmed notifications.
            </summary>
            <value>
            The issue confirmed notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.MonitoredPropertyIdentifier">
            <summary>
            Gets or sets the monitored property identifier.
            </summary>
            <value>
            The monitored property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.CovIncrement">
            <summary>
            Gets or sets the cov increment.
            </summary>
            <value>
            The cov increment.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Boolean,System.Int32,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Nullable{System.Double})">
            <summary>
            Creates the specified subscriber.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <param name="monitored">The monitored.</param>
            <param name="issueConfirmed">if set to <c>true</c> [issue confirmed].</param>
            <param name="lifetime">The lifetime.</param>
            <param name="property">The property.</param>
            <param name="covIncrement">The cov increment.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest.CreateUnregister(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Creates the unregister.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <param name="monitored">The monitored.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.SubscribeCOVRequest">
            <summary>
            Subscribe COV Request 
            => Subscribe auf Present Value oder Event State Änderung!
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVRequest.SubscriberProcessIdentifier">
            <summary>
            Gets or sets the subscriber process identifier.
            </summary>
            <value>
            The subscriber process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVRequest.MonitoredObjectIdentifier">
            <summary>
            Gets or sets the monitored object identifier.
            </summary>
            <value>
            The monitored object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVRequest.IssueConfirmedNotifications">
            <summary>
            Gets or sets the issue confirmed notifications.
            </summary>
            <value>
            The issue confirmed notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SubscribeCOVRequest.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Boolean,System.Int32)">
            <summary>
            Creates the specified subscriber.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <param name="monitored">The monitored.</param>
            <param name="issueConfirmed">if set to <c>true</c> [issue confirmed].</param>
            <param name="lifetime">The lifetime.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.SubscribeCOVRequest.CreateUnregister(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Creates the unregister.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <param name="monitored">The monitored.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.VTCloseRequest">
            <summary>
            VT Close Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTCloseRequest.ListOfRemoteVTSessionIdentifiers">
            <summary>
            Gets or sets the list of remote vt session identifiers.
            </summary>
            <value>
            The list of remote vt session identifiers.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.VTDataRequest">
            <summary>
            VT Data Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTDataRequest.VtSessionIdentifier">
            <summary>
            Gets or sets the vt session identifier.
            </summary>
            <value>
            The vt session identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTDataRequest.VtNewData">
            <summary>
            Gets or sets the vt new data.
            </summary>
            <value>
            The vt new data.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTDataRequest.VtDataFlag">
            <summary>
            Gets or sets the vt data flag.
            </summary>
            <value>
            The vt data flag.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTDataRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.VTOpenRequest">
            <summary>
            VT Open Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTOpenRequest.VtClass">
            <summary>
            Gets or sets the vt class.
            </summary>
            <value>
            The vt class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTOpenRequest.LocalVTSessionIdentifier">
            <summary>
            Gets or sets the local vt session identifier.
            </summary>
            <value>
            The local vt session identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTOpenRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WritePropertyMultipleRequest">
            <summary>
            Write Property Multiple Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.ListOfWriteAccessSpecifications">
            <summary>
            Gets or sets the list of write access specifications.
            </summary>
            <value>
            The list of write access specifications.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.WritePropertyMultipleRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleRequest.Create(System.Collections.Generic.List{XAMIO.BACnet.Standard.WriteAccessSpecification})">
            <summary>
            Creates the specified access specifications.
            </summary>
            <param name="accessSpecifications">The access specifications.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WritePropertyRequest">
            <summary>
            Write Property Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyRequest.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyRequest.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyRequest.PropertyValue">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>
            The property value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyRequest.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <remarks>
            used only when property is commandable
            </remarks>
            <value>
            The priority.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.WritePropertyRequest"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned8)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.WritePropertyRequest"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned8)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.WritePropertyRequest"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="propertyArrayIndex">Index of the property array.</param>
            <param name="value">The value.</param>
            <param name="priority">The priority.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <param name="arrayIndex">Index of the array.</param>
            <param name="priority">The priority.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAbortReason">
            <summary>
            BACnet Abort Reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.BufferOverflow">
            <summary>
            The buffer overflow
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.InvalidApduInThisState">
            <summary>
            The invalid apdu in this state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.PreemptedByHigherPriorityTask">
            <summary>
            The preempted by higher priority task
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.SegmentationNotSupported">
            <summary>
            The segmentation not supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.SecurityError">
            <summary>
            The security error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.InsufficientSecurity">
            <summary>
            The insufficient security
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.WindowSizeOutOfRange">
            <summary>
            The window size out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.ApplicationExceededReplyTime">
            <summary>
            The application exceeded reply time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.OutOfResources">
            <summary>
            The out of resources
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.TsmTimeout">
            <summary>
            The TSM timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAbortReason.ApduTooLong">
            <summary>
            The apdu too long
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable">
            <summary>
            BACnet Access Authenication Factor Disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable.DisabledLost">
            <summary>
            The disabled lost
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable.DisabledStolen">
            <summary>
            The disabled stolen
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable.DisabledDamaged">
            <summary>
            The disabled damaged
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessAuthenticationFactorDisable.DisabledDestroyed">
            <summary>
            The disabled destroyed
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessCredentialDisable">
            <summary>
            BACnet Access Credential Disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisable.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisable.Disable">
            <summary>
            The disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisable.DisableManual">
            <summary>
            The disable manual
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisable.DisableLockout">
            <summary>
            The disable lockout
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason">
            <summary>
            BACnet Access Credential Disable Reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledNeedsProvisioning">
            <summary>
            The disabled needs provisioning
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledUnassigned">
            <summary>
            The disabled unassigned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledNotYetActive">
            <summary>
            The disabled not yet active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledExpired">
            <summary>
            The disabled expired
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledLockout">
            <summary>
            The disabled lockout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledMaxDays">
            <summary>
            The disabled maximum days
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledMaxUses">
            <summary>
            The disabled maximum uses
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledInactivity">
            <summary>
            The disabled inactivity
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessCredentialDisableReason.DisabledManual">
            <summary>
            The disabled manual
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessEvent">
            <summary>
            BACnet Access Event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.Granted">
            <summary>
            The granted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.Muster">
            <summary>
            The muster
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.PassbackDetected">
            <summary>
            The passback detected
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.Duress">
            <summary>
            The duress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.Trace">
            <summary>
            The trace
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.LockoutMaxAttempts">
            <summary>
            The lockout maximum attempts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.LockoutOther">
            <summary>
            The lockout other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.LockoutRelinquished">
            <summary>
            The lockout relinquished
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.LockedByHigherPriority">
            <summary>
            The locked by higher priority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.OutOfService">
            <summary>
            The out of service
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.OutOfServiceRelinquished">
            <summary>
            The out of service relinquished
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.AccompanimentBy">
            <summary>
            The accompaniment by
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.AuthenticationFactorRead">
            <summary>
            The authentication factor read
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.AuthorizationDelayed">
            <summary>
            The authorization delayed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.VerificationRequired">
            <summary>
            The verification required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.NoEntryAfterGrant">
            <summary>
            The no entry after grant
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedDenyAll">
            <summary>
            The denied deny all
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedUnknownCredential">
            <summary>
            The denied unknown credential
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationUnavailable">
            <summary>
            The denied authentication unavailable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorTimeout">
            <summary>
            The denied authentication factor timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedIncorrectAuthenticationFactor">
            <summary>
            The denied incorrect authentication factor
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedZoneNoAccessRights">
            <summary>
            The denied zone no access rights
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedPointNoAccessRights">
            <summary>
            The denied point no access rights
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedNoAccessRights">
            <summary>
            The denied no access rights
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedOutOfTimeRange">
            <summary>
            The denied out of time range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedThreatLevel">
            <summary>
            The denied threat level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedPassback">
            <summary>
            The denied passback
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedUnexpectedLocationUsage">
            <summary>
            The denied unexpected location usage
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedMaxAttempts">
            <summary>
            The denied maximum attempts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedLowerOccupancyLimit">
            <summary>
            The denied lower occupancy limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedUpperOccupancyLimit">
            <summary>
            The denied upper occupancy limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorLost">
            <summary>
            The denied authentication factor lost
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorStolen">
            <summary>
            The denied authentication factor stolen
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorDamaged">
            <summary>
            The denied authentication factor damaged
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorDestroyed">
            <summary>
            The denied authentication factor destroyed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorDisabled">
            <summary>
            The denied authentication factor disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedAuthenticationFactorError">
            <summary>
            The denied authentication factor error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialUnassigned">
            <summary>
            The denied credential unassigned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialNotProvisioned">
            <summary>
            The denied credential not provisioned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialNotYetActive">
            <summary>
            The denied credential not yet active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialExpired">
            <summary>
            The denied credential expired
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialManualDisable">
            <summary>
            The denied credential manual disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialLockout">
            <summary>
            The denied credential lockout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialMaxDays">
            <summary>
            The denied credential maximum days
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialMaxUses">
            <summary>
            The denied credential maximum uses
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialInactivity">
            <summary>
            The denied credential inactivity
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedCredentialDisabled">
            <summary>
            The denied credential disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedNoAccompaniment">
            <summary>
            The denied no accompaniment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedIncorrectAccompaniment">
            <summary>
            The denied incorrect accompaniment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedLockout">
            <summary>
            The denied lockout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedVerificationFailed">
            <summary>
            The denied verification failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedVerificationTimeout">
            <summary>
            The denied verification timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessEvent.DeniedOther">
            <summary>
            The denied other
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessPassbackMode">
            <summary>
            BACnet Access Passback Mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessPassbackMode.PassbackOff">
            <summary>
            The passback off
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessPassbackMode.HardPassback">
            <summary>
            The hard passback
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessPassbackMode.SoftPassback">
            <summary>
            The soft passback
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessUserType">
            <summary>
            BACnet Access User Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessUserType.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessUserType.Group">
            <summary>
            The group
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessUserType.Person">
            <summary>
            The person
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState">
            <summary>
            BACnet Access Zone Occupancy State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.BelowLowerLimit">
            <summary>
            The below lower limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.AtLowerLimit">
            <summary>
            At lower limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.AtUpperLimit">
            <summary>
            At upper limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.AboveUpperLimit">
            <summary>
            The above upper limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccessZoneOccupancyState.NotSupported">
            <summary>
            The not supported
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAction">
            <summary>
            BACnet Action
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAction.Direct">
            <summary>
            The direct
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAction.Reverse">
            <summary>
            The reverse
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetApplicationTagType">
            <summary>
            BACnet Application Tag Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Null">
            <summary>
            The null
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Boolean">
            <summary>
            The boolean
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.UnsignedINT">
            <summary>
            The unsigned INT
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.SignedINT">
            <summary>
            The signed INT
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Real">
            <summary>
            The real
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Double">
            <summary>
            The double
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.OctetString">
            <summary>
            The octet string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.CharacterString">
            <summary>
            The character string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.BitString">
            <summary>
            The bit string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Enumerated">
            <summary>
            The enumerated
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.ObjectIdentifier">
            <summary>
            The object identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Reserve1">
            <summary>
            The reserve1
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Reserve2">
            <summary>
            The reserve2
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetApplicationTagType.Reserve3">
            <summary>
            The reserve3
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType">
            <summary>
            BACnet Authentication Factor Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Undefined">
            <summary>
            The undefined
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Error">
            <summary>
            The error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.SimpleNumber16">
            <summary>
            The simple number16
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.SimpleNumber32">
            <summary>
            The simple number32
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.SimpleNumber56">
            <summary>
            The simple number56
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.SimpleAlphaNumeric">
            <summary>
            The simple alpha numeric
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.AbaTrack2">
            <summary>
            The aba track2
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Wiegand26">
            <summary>
            The wiegand26
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Wiegand37">
            <summary>
            The wiegand37
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Wiegand37Facility">
            <summary>
            The wiegand37 facility
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Facility16Card32">
            <summary>
            The facility16 card32
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Facility32Card32">
            <summary>
            The facility32 card32
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.FascN">
            <summary>
            The fasc n
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.FascNBcd">
            <summary>
            The fasc n BCD
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.FascNLarge">
            <summary>
            The fasc n large
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.FascNLargeBcd">
            <summary>
            The fasc n large BCD
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Gsa75">
            <summary>
            The gsa75
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Chuid">
            <summary>
            The chuid
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.ChuidFull">
            <summary>
            The chuid full
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.Guid">
            <summary>
            The unique identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.CbeffA">
            <summary>
            The cbeff a
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.CbeffB">
            <summary>
            The cbeff b
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.CbeffC">
            <summary>
            The cbeff c
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationFactorType.UserPassword">
            <summary>
            The user password
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationStatus">
            <summary>
            BACnet Authentication Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.NotReady">
            <summary>
            The not ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.Ready">
            <summary>
            The ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.WaitingForAuthenticationFactor">
            <summary>
            The waiting for authentication factor
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.WaitingForAccompaniment">
            <summary>
            The waiting for accompaniment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.WaitingForVerification">
            <summary>
            The waiting for verification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthenticationStatus.InProgress">
            <summary>
            The in progress
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthorizationExemption">
            <summary>
            BACnet Authorization Exemption
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.Passback">
            <summary>
            The passback
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.OccupancyCheck">
            <summary>
            The occupancy check
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.AccessRights">
            <summary>
            The access rights
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.Lockout">
            <summary>
            The lockout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.Deny">
            <summary>
            The deny
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.Verification">
            <summary>
            The verification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationExemption.AuthorizationDelay">
            <summary>
            The authorization delay
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthorizationMode">
            <summary>
            BACnet Authorization Mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationMode.Authorize">
            <summary>
            The authorize
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationMode.GrantActive">
            <summary>
            The grant active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationMode.DenyAll">
            <summary>
            The deny all
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationMode.VerificationRequired">
            <summary>
            The verification required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationMode.AuthorizationDelayed">
            <summary>
            The authorization delayed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAuthorizationMode.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetBackupState">
            <summary>
            BACnet Backup State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.Idle">
            <summary>
            The idle
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.PreparingForBackup">
            <summary>
            The preparing for backup
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.PreparingForRestore">
            <summary>
            The preparing for restore
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.PerformingABackup">
            <summary>
            The performing a backup
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.PerformingARestore">
            <summary>
            The performing a restore
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.BackupFailure">
            <summary>
            The backup failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBackupState.RestoreFailure">
            <summary>
            The restore failure
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetBinaryPV">
            <summary>
            BACnet Binary PV
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBinaryPV.Inactive">
            <summary>
            The inactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBinaryPV.Active">
            <summary>
            The active
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetBroadcastType">
            <summary>
            BACnet Address Broadcast Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBroadcastType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBroadcastType.Local">
            <summary>
            Local
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBroadcastType.Remote">
            <summary>
            Remote
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetBroadcastType.Global">
            <summary>
            Global
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCalendarEntryType">
            <summary>
            BACnet Calendar Entry Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCalendarEntryType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCalendarEntryType.DateRange">
            <summary>
            The date range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetCalendarEntryType.WeekNDay">
            <summary>
            The week n day
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetChannelValueType">
            <summary>
            BACnet Channel Value Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Null">
            <summary>
            The null
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Real">
            <summary>
            The real
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Enumerated">
            <summary>
            The enumerated
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Unsigned">
            <summary>
            The unsigned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Boolean">
            <summary>
            The boolean
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Signed">
            <summary>
            The signed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Double">
            <summary>
            The double
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.CharacterString">
            <summary>
            The character string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.OctetString">
            <summary>
            The octet string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.BitString">
            <summary>
            The bit string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.Objectid">
            <summary>
            The objectid
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetChannelValueType.LightingCommand">
            <summary>
            The lighting command
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice">
            <summary>
            BACnet Confirmed Service Choice
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.AcknowledgeAlarm">
            <summary>
            The acknowledge alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ConfirmedCOVNotification">
            <summary>
            The confirmed cov notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ConfirmedEventNotification">
            <summary>
            The confirmed event notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.GetAlarmSummary">
            <summary>
            The get alarm summary
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.GetEnrollmentSummary">
            <summary>
            The get enrollment summary
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.GetEventInformation">
            <summary>
            The get event information
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.SubscribeCOV">
            <summary>
            The subscribe cov
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.SubscribeCOVProperty">
            <summary>
            The subscribe cov property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.LifeSafetyOperation">
            <summary>
            The life safety operation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.AtomicReadFile">
            <summary>
            The atomic read file
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.AtomicWriteFile">
            <summary>
            The atomic write file
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.AddListElement">
            <summary>
            The add list element
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.RemoveListElement">
            <summary>
            The remove list element
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.CreateObject">
            <summary>
            The create object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.DeleteObject">
            <summary>
            The delete object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ReadProperty">
            <summary>
            The read property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ReadPropertyMultiple">
            <summary>
            The read property multiple
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ReadRange">
            <summary>
            The read range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.WriteProperty">
            <summary>
            The write property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.WritePropertyMultiple">
            <summary>
            The write property multiple
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.DeviceCommunicationControl">
            <summary>
            The device communication control
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ConfirmedPrivateTransfer">
            <summary>
            The confirmed private transfer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ConfirmedTextMessage">
            <summary>
            The confirmed text message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.ReinitializeDevice">
            <summary>
            The reinitialize device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.VtOpen">
            <summary>
            The vt open
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.VtClose">
            <summary>
            The vt close
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice.VtData">
            <summary>
            The vt data
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDeviceStatus">
            <summary>
            BACnet Device Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDeviceStatus.Operational">
            <summary>
            The operational
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDeviceStatus.OperationalReadOnly">
            <summary>
            The operational read only
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDeviceStatus.DownloadRequired">
            <summary>
            The download required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDeviceStatus.DownloadInProgress">
            <summary>
            The download in progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDeviceStatus.NonOperational">
            <summary>
            The non operational
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDeviceStatus.BackupInProgress">
            <summary>
            The backup in progress
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDoorAlarmState">
            <summary>
            BACnet Dorr Alarm State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.Alarm">
            <summary>
            The alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.DoorOpenTooLong">
            <summary>
            The door open too long
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.ForcedOpen">
            <summary>
            The forced open
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.Tamper">
            <summary>
            The tamper
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.DoorFault">
            <summary>
            The door fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.LockDown">
            <summary>
            The lock down
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.FreeAccess">
            <summary>
            The free access
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorAlarmState.EgressOpen">
            <summary>
            The egress open
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDoorSecuredStatus">
            <summary>
            BACnet Door Secured Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorSecuredStatus.Secured">
            <summary>
            The secured
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorSecuredStatus.Unsecured">
            <summary>
            The unsecured
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorSecuredStatus.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDoorStatus">
            <summary>
            BACnet Door Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorStatus.Closed">
            <summary>
            The closed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorStatus.Opened">
            <summary>
            The opened
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorStatus.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorStatus.DoorFault">
            <summary>
            The door fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorStatus.Unused">
            <summary>
            The unused
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDoorValue">
            <summary>
            BACnet Door Value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorValue.Lock">
            <summary>
            The lock
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorValue.Unlock">
            <summary>
            The unlock
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorValue.PulseUnlock">
            <summary>
            The pulse unlock
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDoorValue.ExtendedPulseUnlock">
            <summary>
            The extended pulse unlock
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.SIUnitAttribute">
            <summary>
            SI Unit Attribute
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.SIUnitAttribute.SIUnit">
            <summary>
            the Units string (e.g. °C)
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEngineeringUnits">
            <summary>
            BACnet Engineering Units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MetersPerSecondPerSecond">
            <summary>
            The meters per second per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.SquareMeters">
            <summary>
            The square meters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.SquareCentimeters">
            <summary>
            The square centimeters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.SquareFeet">
            <summary>
            The square feet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.SquareInches">
            <summary>
            The square inches
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency1">
            <summary>
            The currency1
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency2">
            <summary>
            The currency2
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency3">
            <summary>
            The currency3
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency4">
            <summary>
            The currency4
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency5">
            <summary>
            The currency5
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency6">
            <summary>
            The currency6
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency7">
            <summary>
            The currency7
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency8">
            <summary>
            The currency8
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency9">
            <summary>
            The currency9
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Currency10">
            <summary>
            The currency10
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milliamperes">
            <summary>
            The milliamperes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Amperes">
            <summary>
            The amperes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.AmperesPerMeter">
            <summary>
            The amperes per meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.AmperesPerSquareMeter">
            <summary>
            The amperes per square meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.AmpereSquareMeters">
            <summary>
            The ampere square meters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Decibels">
            <summary>
            The decibels
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DecibelsMillivolt">
            <summary>
            The decibels millivolt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DecibelsVolt">
            <summary>
            The decibels volt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Farads">
            <summary>
            The farads
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Henrys">
            <summary>
            The henrys
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Ohms">
            <summary>
            The ohms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.OhmMeters">
            <summary>
            The ohm meters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milliohms">
            <summary>
            The milliohms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilohms">
            <summary>
            The kilohms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Megohms">
            <summary>
            The megohms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Microsiemens">
            <summary>
            The microsiemens
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Millisiemens">
            <summary>
            The millisiemens
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Siemens">
            <summary>
            The siemens
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.SiemensPerMeter">
            <summary>
            The siemens per meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Teslas">
            <summary>
            The teslas
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Volts">
            <summary>
            The volts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Millivolts">
            <summary>
            The millivolts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilovolts">
            <summary>
            The kilovolts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Megavolts">
            <summary>
            The megavolts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.VoltAmperes">
            <summary>
            The volt amperes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilovoltAmperes">
            <summary>
            The kilovolt amperes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegavoltAmperes">
            <summary>
            The megavolt amperes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.VoltAmperesReactive">
            <summary>
            The volt amperes reactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilovoltAmperesReactive">
            <summary>
            The kilovolt amperes reactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegavoltAmperesReactive">
            <summary>
            The megavolt amperes reactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.VoltsPerDegreeKelvin">
            <summary>
            The volts per degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.VoltsPerMeter">
            <summary>
            The volts per meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesPhase">
            <summary>
            The degrees phase
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PowerFactor">
            <summary>
            The power factor
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Webers">
            <summary>
            The webers
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Joules">
            <summary>
            The joules
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilojoules">
            <summary>
            The kilojoules
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilojoulesPerKilogram">
            <summary>
            The kilojoules per kilogram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Megajoules">
            <summary>
            The megajoules
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.WattHours">
            <summary>
            The watt hours
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilowattHours">
            <summary>
            The kilowatt hours
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegawattHours">
            <summary>
            The megawatt hours
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.WattHoursReactive">
            <summary>
            The watt hours reactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilowattHoursReactive">
            <summary>
            The kilowatt hours reactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegawattHoursReactive">
            <summary>
            The megawatt hours reactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Btus">
            <summary>
            The btus
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KiloBtus">
            <summary>
            The kilo btus
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegaBtus">
            <summary>
            The mega btus
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Therms">
            <summary>
            The therms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.TonHours">
            <summary>
            The ton hours
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.JoulesPerKilogramDryAir">
            <summary>
            The joules per kilogram dry air
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilojoulesPerKilogramDryAir">
            <summary>
            The kilojoules per kilogram dry air
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegajoulesPerKilogramDryAir">
            <summary>
            The megajoules per kilogram dry air
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.BtusPerPoundDryAir">
            <summary>
            The btus per pound dry air
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.BtusPerPound">
            <summary>
            The btus per pound
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.JoulesPerDegreeKelvin">
            <summary>
            The joules per degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilojoulesPerDegreeKelvin">
            <summary>
            The kilojoules per degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegajoulesPerDegreeKelvin">
            <summary>
            The megajoules per degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.JoulesPerKilogramDegreeKelvin">
            <summary>
            The joules per kilogram degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Newton">
            <summary>
            The newton
            </summary>        
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CyclesPerHour">
            <summary>
            The cycles per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CyclesPerMinute">
            <summary>
            The cycles per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Hertz">
            <summary>
            The hertz
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilohertz">
            <summary>
            The kilohertz
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Megahertz">
            <summary>
            The megahertz
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PerHour">
            <summary>
            The per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsOfWaterPerKilogramDryAir">
            <summary>
            The grams of water per kilogram dry air
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PercentRelativeHumidity">
            <summary>
            The percent relative humidity
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Micrometers">
            <summary>
            The micrometers
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Millimeters">
            <summary>
            The millimeters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Centimeters">
            <summary>
            The centimeters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilometers">
            <summary>
            The kilometers
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Meters">
            <summary>
            The meters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Inches">
            <summary>
            The inches
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Feet">
            <summary>
            The feet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Candelas">
            <summary>
            The candelas
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CandelasPerSquareMeter">
            <summary>
            The candelas per square meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.WattsPerSquareFoot">
            <summary>
            The watts per square foot
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.WattsPerSquareMeter">
            <summary>
            The watts per square meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Lumens">
            <summary>
            The lumens
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Luxes">
            <summary>
            The luxes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.FootCandles">
            <summary>
            The foot candles
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milligrams">
            <summary>
            The milligrams
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Grams">
            <summary>
            The grams
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilograms">
            <summary>
            The kilograms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PoundsMass">
            <summary>
            The pounds mass
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Tons">
            <summary>
            The tons
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerSecond">
            <summary>
            The grams per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerMinute">
            <summary>
            The grams per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilogramsPerSecond">
            <summary>
            The kilograms per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilogramsPerMinute">
            <summary>
            The kilograms per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilogramsPerHour">
            <summary>
            The kilograms per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PoundsMassPerSecond">
            <summary>
            The pounds mass per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PoundsMassPerMinute">
            <summary>
            The pounds mass per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PoundsMassPerHour">
            <summary>
            The pounds mass per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.TonsPerHour">
            <summary>
            The tons per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milliwatts">
            <summary>
            The milliwatts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Watts">
            <summary>
            The watts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilowatts">
            <summary>
            The kilowatts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Megawatts">
            <summary>
            The megawatts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.BtusPerHour">
            <summary>
            The btus per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KiloBtusPerHour">
            <summary>
            The kilo btus per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Horsepower">
            <summary>
            The horsepower
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.TonsRefrigeration">
            <summary>
            The tons refrigeration
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Pascals">
            <summary>
            The pascals
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Hectopascals">
            <summary>
            The hectopascals
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilopascals">
            <summary>
            The kilopascals
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Millibars">
            <summary>
            The millibars
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Bars">
            <summary>
            The bars
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PoundsForcePerSquareInch">
            <summary>
            The pounds force per square inch
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MillimetersOfWater">
            <summary>
            The millimeters of water
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CentimetersOfWater">
            <summary>
            The centimeters of water
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.InchesOfWater">
            <summary>
            The inches of water
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MillimetersOfMercury">
            <summary>
            The millimeters of mercury
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CentimetersOfMercury">
            <summary>
            The centimeters of mercury
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.InchesOfMercury">
            <summary>
            The inches of mercury
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesCelsius">
            <summary>
            The degrees celsius
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesKelvin">
            <summary>
            The degrees kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesKelvinPerHour">
            <summary>
            The degrees kelvin per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesKelvinPerMinute">
            <summary>
            The degrees kelvin per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesFahrenheit">
            <summary>
            The degrees fahrenheit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreeDaysCelsius">
            <summary>
            The degree days celsius
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreeDaysFahrenheit">
            <summary>
            The degree days fahrenheit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DeltaDegreesFahrenheit">
            <summary>
            The delta degrees fahrenheit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DeltaDegreesKelvin">
            <summary>
            The delta degrees kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Years">
            <summary>
            The years
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Months">
            <summary>
            The months
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Weeks">
            <summary>
            The weeks
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Days">
            <summary>
            The days
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Hours">
            <summary>
            The hours
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Minutes">
            <summary>
            The minutes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Seconds">
            <summary>
            The seconds
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.HundredthsSeconds">
            <summary>
            The hundredths seconds
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milliseconds">
            <summary>
            The milliseconds
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.NewtonMeters">
            <summary>
            The newton meters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MillimetersPerSecond">
            <summary>
            The millimeters per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MillimetersPerMinute">
            <summary>
            The millimeters per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MetersPerSecond">
            <summary>
            The meters per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MetersPerMinute">
            <summary>
            The meters per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MetersPerHour">
            <summary>
            The meters per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilometersPerHour">
            <summary>
            The kilometers per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.FeetPerSecond">
            <summary>
            The feet per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.FeetPerMinute">
            <summary>
            The feet per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MilesPerHour">
            <summary>
            The miles per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicFeet">
            <summary>
            The cubic feet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicMeters">
            <summary>
            The cubic meters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.ImperialGallons">
            <summary>
            The imperial gallons
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milliliters">
            <summary>
            The milliliters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Liters">
            <summary>
            The liters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.UsGallons">
            <summary>
            The us gallons
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicFeetPerSecond">
            <summary>
            The cubic feet per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicFeetPerMinute">
            <summary>
            The cubic feet per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicFeetPerHour">
            <summary>
            The cubic feet per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicMetersPerSecond">
            <summary>
            The cubic meters per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicMetersPerMinute">
            <summary>
            The cubic meters per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.CubicMetersPerHour">
            <summary>
            The cubic meters per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.ImperialGallonsPerMinute">
            <summary>
            The imperial gallons per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MillilitersPerSecond">
            <summary>
            The milliliters per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.LitersPerSecond">
            <summary>
            The liters per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.LitersPerMinute">
            <summary>
            The liters per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.LitersPerHour">
            <summary>
            The liters per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.UsGallonsPerMinute">
            <summary>
            The us gallons per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.UsGallonsPerHour">
            <summary>
            The us gallons per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesAngular">
            <summary>
            The degrees angular
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesCelsiusPerHour">
            <summary>
            The degrees celsius per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesCelsiusPerMinute">
            <summary>
            The degrees celsius per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesFahrenheitPerHour">
            <summary>
            The degrees fahrenheit per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DegreesFahrenheitPerMinute">
            <summary>
            The degrees fahrenheit per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.JouleSeconds">
            <summary>
            The joule seconds
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilogramsPerCubicMeter">
            <summary>
            The kilograms per cubic meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilowattHoursPerSquareMeter">
            <summary>
            The kilowatt hours per square meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilowattHoursPerSquareFoot">
            <summary>
            The kilowatt hours per square foot
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegajoulesPerSquareMeter">
            <summary>
            The megajoules per square meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MegajoulesPerSquareFoot">
            <summary>
            The megajoules per square foot
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.NoUnits">
            <summary>
            The no units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.NewtonSeconds">
            <summary>
            The newton seconds
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.NewtonsPerMeter">
            <summary>
            The newtons per meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PartsPerMillion">
            <summary>
            The parts per million
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PartsPerBillion">
            <summary>
            The parts per billion
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Percent">
            <summary>
            The percent
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PercentObscurationPerFoot">
            <summary>
            The percent obscuration per foot
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PercentObscurationPerMeter">
            <summary>
            The percent obscuration per meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PercentPerSecond">
            <summary>
            The percent per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PerMinute">
            <summary>
            The per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PerSecond">
            <summary>
            The per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PsiPerDegreeFahrenheit">
            <summary>
            The psi per degree fahrenheit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Radians">
            <summary>
            The radians
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.RadiansPerSecond">
            <summary>
            The radians per second
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.RevolutionsPerMinute">
            <summary>
            The revolutions per minute
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.SquareMetersPerNewton">
            <summary>
            The square meters per newton
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.WattsPerMeterPerDegreeKelvin">
            <summary>
            The watts per meter per degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.WattsPerSquareMeterDegreeKelvin">
            <summary>
            The watts per square meter degree kelvin
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PerMille">
            <summary>
            The per mille
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerGram">
            <summary>
            The grams per gram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.KilogramsPerKilogram">
            <summary>
            The kilograms per kilogram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerKilogram">
            <summary>
            The grams per kilogram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MilligramsPerGram">
            <summary>
            The milligrams per gram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MilligramsPerKilogram">
            <summary>
            The milligrams per kilogram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerMilliliter">
            <summary>
            The grams per milliliter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerLiter">
            <summary>
            The grams per liter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MilligramsPerLiter">
            <summary>
            The milligrams per liter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MicrogramsPerLiter">
            <summary>
            The micrograms per liter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerCubicMeter">
            <summary>
            The grams per cubic meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MilligramsPerCubicMeter">
            <summary>
            The milligrams per cubic meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MicrogramsPerCubicMeter">
            <summary>
            The micrograms per cubic meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.NanogramsPerCubicMeter">
            <summary>
            The nanograms per cubic meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerCubicCentimeter">
            <summary>
            The grams per cubic centimeter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Becquerels">
            <summary>
            The becquerels
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Kilobecquerels">
            <summary>
            The kilobecquerels
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Megabecquerels">
            <summary>
            The megabecquerels
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Gray">
            <summary>
            The gray
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Milligray">
            <summary>
            The milligray
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Microgray">
            <summary>
            The microgray
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Sieverts">
            <summary>
            The sieverts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Millisieverts">
            <summary>
            The millisieverts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.Microsieverts">
            <summary>
            The microsieverts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MicrosievertsPerHour">
            <summary>
            The microsieverts per hour
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.DecibelsA">
            <summary>
            The decibels a
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.NephelometricTurbidityUnit">
            <summary>
            The nephelometric turbidity unit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.PH">
            <summary>
            The ph
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.GramsPerSquareMeter">
            <summary>
            The grams per square meter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEngineeringUnits.MinutesPerDegreeKelvin">
            <summary>
            The minutes per degree kelvin
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetErrorClass">
            <summary>
            BACnet Error Class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Device">
            <summary>
            The device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Object">
            <summary>
            The object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Property">
            <summary>
            The property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Resources">
            <summary>
            The resources
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Security">
            <summary>
            The security
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Services">
            <summary>
            The services
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Vt">
            <summary>
            The vt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorClass.Communication">
            <summary>
            The communication
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetErrorCode">
            <summary>
            BACnet Error Code
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortApduTooLong">
            <summary>
            The abort apdu too long
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortApplicationExceededReplyTime">
            <summary>
            The abort application exceeded reply time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortBufferOverflow">
            <summary>
            The abort buffer overflow
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortInsufficientSecurity">
            <summary>
            The abort insufficient security
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortInvalidApduInThisState">
            <summary>
            The abort invalid apdu in this state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortOther">
            <summary>
            The abort other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortOutOfResources">
            <summary>
            The abort out of resources
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortPreemptedByHigherPriorityTask">
            <summary>
            The abort preempted by higher priority task
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortProprietary">
            <summary>
            The abort proprietary
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortSecurityError">
            <summary>
            The abort security error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortSegmentationNotSupported">
            <summary>
            The abort segmentation not supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortTsmTimeout">
            <summary>
            The abort TSM timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AbortWindowSizeOutOfRange">
            <summary>
            The abort window size out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AccessDenied">
            <summary>
            The access denied
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.AddressingError">
            <summary>
            The addressing error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.BadDestinationAddress">
            <summary>
            The bad destination address
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.BadDestinationDeviceId">
            <summary>
            The bad destination device identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.BadSignature">
            <summary>
            The bad signature
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.BadSourceAddress">
            <summary>
            The bad source address
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.BadTimestamp">
            <summary>
            The bad timestamp
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.Busy">
            <summary>
            The busy
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.CannotUseKey">
            <summary>
            The cannot use key
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.CannotVerifyMessageId">
            <summary>
            The cannot verify message identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.CharacterSetNotSupported">
            <summary>
            The character set not supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.CommunicationDisabled">
            <summary>
            The communication disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ConfigurationInProgress">
            <summary>
            The configuration in progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.CorrectKeyRevision">
            <summary>
            The correct key revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.CovSubscriptionFailed">
            <summary>
            The cov subscription failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DatatypeNotSupported">
            <summary>
            The datatype not supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DeleteFdtEntryFailed">
            <summary>
            The delete FDT entry failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DeviceBusy">
            <summary>
            The device busy
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DestinationDeviceIdRequired">
            <summary>
            The destination device identifier required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DistributeBroadcastFailed">
            <summary>
            The distribute broadcast failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DuplicateMessage">
            <summary>
            The duplicate message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DuplicateName">
            <summary>
            The duplicate name
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DuplicateObjectId">
            <summary>
            The duplicate object identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.DynamicCreationNotSupported">
            <summary>
            The dynamic creation not supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.EncryptionNotConfigured">
            <summary>
            The encryption not configured
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.EncryptionRequired">
            <summary>
            The encryption required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.FileAccessDenied">
            <summary>
            The file access denied
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.FileFull">
            <summary>
            The file full
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InconsistentConfiguration">
            <summary>
            The inconsistent configuration
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InconsistentObjectType">
            <summary>
            The inconsistent object type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InconsistentParameters">
            <summary>
            The inconsistent parameters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InconsistentSelectionCriterion">
            <summary>
            The inconsistent selection criterion
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.IncorrectKey">
            <summary>
            The incorrect key
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InternalError">
            <summary>
            The internal error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidArrayIndex">
            <summary>
            The invalid array index
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidConfigurationData">
            <summary>
            The invalid configuration data
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidDataType">
            <summary>
            The invalid data type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidEventState">
            <summary>
            The invalid event state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidFileAccessMethod">
            <summary>
            The invalid file access method
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidFileStartPosition">
            <summary>
            The invalid file start position
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidKeyData">
            <summary>
            The invalid key data
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidParameterDataType">
            <summary>
            The invalid parameter data type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidTag">
            <summary>
            The invalid tag
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.InvalidTimeStamp">
            <summary>
            The invalid time stamp
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.KeyUpdateInProgress">
            <summary>
            The key update in progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ListElementNotFound">
            <summary>
            The list element not found
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.LogBufferFull">
            <summary>
            The log buffer full
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.LoggedValuePurged">
            <summary>
            The logged value purged
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.MalformedMessage">
            <summary>
            The malformed message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.MessageTooLong">
            <summary>
            The message too long
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.MissingRequiredParameter">
            <summary>
            The missing required parameter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NetworkDown">
            <summary>
            The network down
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoAlarmConfigured">
            <summary>
            The no alarm configured
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoObjectsOfSpecifiedType">
            <summary>
            The no objects of specified type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoPropertySpecified">
            <summary>
            The no property specified
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoSpaceForObject">
            <summary>
            The no space for object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoSpaceToAddListElement">
            <summary>
            The no space to add list element
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoSpaceToWriteProperty">
            <summary>
            The no space to write property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NoVtSessionsAvailable">
            <summary>
            The no vt sessions available
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NotConfigured">
            <summary>
            The not configured
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NotConfiguredForTriggeredLogging">
            <summary>
            The not configured for triggered logging
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NotCovProperty">
            <summary>
            The not cov property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NotKeyServer">
            <summary>
            The not key server
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.NotRouterToDnet">
            <summary>
            The not router to dnet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ObjectDeletionNotPermitted">
            <summary>
            The object deletion not permitted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ObjectIdentifierAlreadyExists">
            <summary>
            The object identifier already exists
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.OperationalProblem">
            <summary>
            The operational problem
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.OptionalFunctionalityNotSupported">
            <summary>
            The optional functionality not supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.OutOfMemory">
            <summary>
            The out of memory
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ParameterOutOfRange">
            <summary>
            The parameter out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.PasswordFailure">
            <summary>
            The password failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.PropertyIsNotAList">
            <summary>
            The property is not a list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.PropertyIsNotAnArray">
            <summary>
            The property is not an array
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ReadAccessDenied">
            <summary>
            The read access denied
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ReadBdtFailed">
            <summary>
            The read BDT failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ReadFdtFailed">
            <summary>
            The read FDT failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RegisterForeignDeviceFailed">
            <summary>
            The register foreign device failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectBufferOverflow">
            <summary>
            The reject buffer overflow
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectInconsistentParameters">
            <summary>
            The reject inconsistent parameters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectInvalidParameterDataType">
            <summary>
            The reject invalid parameter data type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectInvalidTag">
            <summary>
            The reject invalid tag
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectMissingRequiredParameter">
            <summary>
            The reject missing required parameter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectParameterOutOfRange">
            <summary>
            The reject parameter out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectTooManyArguments">
            <summary>
            The reject too many arguments
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectUndefinedEnumeration">
            <summary>
            The reject undefined enumeration
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectUnrecognizedService">
            <summary>
            The reject unrecognized service
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectProprietary">
            <summary>
            The reject proprietary
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RejectOther">
            <summary>
            The reject other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.RouterBusy">
            <summary>
            The router busy
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.SecurityError">
            <summary>
            The security error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.SecurityNotConfigured">
            <summary>
            The security not configured
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ServiceRequestDenied">
            <summary>
            The service request denied
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.SourceSecurityRequired">
            <summary>
            The source security required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.Success">
            <summary>
            The success
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.Timeout">
            <summary>
            The timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.TooManyKeys">
            <summary>
            The too many keys
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownAuthenticationType">
            <summary>
            The unknown authentication type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownDevice">
            <summary>
            The unknown device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownFileSize">
            <summary>
            The unknown file size
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownKey">
            <summary>
            The unknown key
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownKeyRevision">
            <summary>
            The unknown key revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownNetworkMessage">
            <summary>
            The unknown network message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownObject">
            <summary>
            The unknown object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownProperty">
            <summary>
            The unknown property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownSubscription">
            <summary>
            The unknown subscription
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownRoute">
            <summary>
            The unknown route
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownSourceMessage">
            <summary>
            The unknown source message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownVtClass">
            <summary>
            The unknown vt class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnknownVtSession">
            <summary>
            The unknown vt session
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.UnsupportedObjectType">
            <summary>
            The unsupported object type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ValueNotInitialized">
            <summary>
            The value not initialized
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ValueOutOfRange">
            <summary>
            The value out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.ValueTooLong">
            <summary>
            The value too long
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.VtSessionAlreadyClosed">
            <summary>
            The vt session already closed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.VtSessionTerminationFailure">
            <summary>
            The vt session termination failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.WriteAccessDenied">
            <summary>
            The write access denied
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorCode.WriteBdtFailed">
            <summary>
            The write BDT failed
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetErrorType">
            <summary>
            BACnet Error Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.AcknowledgeAlarm">
            <summary>
            The acknowledge alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ConfirmedCOVNotification">
            <summary>
            The confirmed cov notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ConfirmedEventNotification">
            <summary>
            The confirmed event notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.GetAlarmSummary">
            <summary>
            The get alarm summary
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.GetEnrollmentSummary">
            <summary>
            The get enrollment summary
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.GetEventInformation">
            <summary>
            The get event information
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.SubscribeCOV">
            <summary>
            The subscribe cov
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.SubscribeCOVProperty">
            <summary>
            The subscribe cov property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.LifeSafetyOperation">
            <summary>
            The life safety operation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.AtomicReadFile">
            <summary>
            The atomic read file
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.AtomicWriteFile">
            <summary>
            The atomic write file
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.AddListElement">
            <summary>
            The add list element
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.RemoveListElement">
            <summary>
            The remove list element
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.CreateObject">
            <summary>
            The create object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.DeleteObject">
            <summary>
            The delete object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ReadProperty">
            <summary>
            The read property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ReadPropertyMultiple">
            <summary>
            The read property multiple
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ReadRange">
            <summary>
            The read range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.WriteProperty">
            <summary>
            The write property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.WritePropertyMultiple">
            <summary>
            The write property multiple
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.DeviceCommunicationControl">
            <summary>
            The device communication control
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ConfirmedPrivateTransfer">
            <summary>
            The confirmed private transfer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ConfirmedTextMessage">
            <summary>
            The confirmed text message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.ReinitializeDevice">
            <summary>
            The reinitialize device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.VtOpen">
            <summary>
            The vt open
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.VtClose">
            <summary>
            The vt close
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetErrorType.VtData">
            <summary>
            The vt data
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventState">
            <summary>
            BACnet Event State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.Fault">
            <summary>
            The fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.Offnormal">
            <summary>
            The offnormal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.HighLimit">
            <summary>
            The high limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.LowLimit">
            <summary>
            The low limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.LifeSafetyAlarm">
            <summary>
            The life safety alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.proprietary64">
            <summary>
            The proprietary-64
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventState.proprietary65535">
            <summary>
            The proprietary-65535
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventStateExtensions">
            <summary>
            BACnet Event State Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventStateExtensions.GetTransition(XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventState)">
            <summary>
            Gets the transition.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventStateExtensions.GetLastTransition(XAMIO.BACnet.Standard.BACnetEventState)">
            <summary>
            Gets the last transition.
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventType">
            <summary>
            BACnet Event Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfBitstring">
            <summary>
            The change of bitstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfState">
            <summary>
            The change of state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfValue">
            <summary>
            The change of value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.CommandFailure">
            <summary>
            The command failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.FloatingLimit">
            <summary>
            The floating limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.OutOfRange">
            <summary>
            The out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.Complex">
            <summary>
            The out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfLifeSafety">
            <summary>
            The change of life safety
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.Extended">
            <summary>
            The extended
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.BufferReady">
            <summary>
            The buffer ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.UnsignedRange">
            <summary>
            The unsigned range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.AccessEvent">
            <summary>
            The access event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.DoubleOutOfRange">
            <summary>
            The double out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.SignedOutOfRange">
            <summary>
            The signed out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.UnsignedOutOfRange">
            <summary>
            The unsigned out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfCharacterstring">
            <summary>
            The change of characterstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfStatusFlags">
            <summary>
            The change of status flags
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.ChangeOfReliability">
            <summary>
            The change of reliability
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventTypeExtensions">
            <summary>
            BACnet Event Type Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTypeExtensions.GetParameterType(XAMIO.BACnet.Standard.BACnetEventType)">
            <summary>
            Gets the type of the parameter.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetFaultType">
            <summary>
            BACnet Fault Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultType.FaultCharacterstring">
            <summary>
            The fault characterstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultType.FaultExtended">
            <summary>
            The fault extended
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultType.FaultLifeSafety">
            <summary>
            The fault life safety
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultType.FaultState">
            <summary>
            The fault state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultType.FaultStatusFlags">
            <summary>
            The fault status flags
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetFileAccessMethod">
            <summary>
            BACnet File Access Method
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFileAccessMethod.RecordAccess">
            <summary>
            The record access
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFileAccessMethod.StreamAccess">
            <summary>
            The stream access
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLifeSafetyMode">
            <summary>
            BACnet Life Safety Mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Off">
            <summary>
            The off
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.On">
            <summary>
            The on
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Test">
            <summary>
            The test
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Manned">
            <summary>
            The manned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Unmanned">
            <summary>
            The unmanned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Armed">
            <summary>
            The armed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Disarmed">
            <summary>
            The disarmed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Prearmed">
            <summary>
            The prearmed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Slow">
            <summary>
            The slow
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Fast">
            <summary>
            The fast
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Disconnected">
            <summary>
            The disconnected
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Enabled">
            <summary>
            The enabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.AutomaticReleaseDisabled">
            <summary>
            The automatic release disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyMode.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation">
            <summary>
            BACnet Life Safety Operation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.Silence">
            <summary>
            The silence
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.SilenceAudible">
            <summary>
            The silence audible
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.SilenceVisual">
            <summary>
            The silence visual
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.Reset">
            <summary>
            The reset
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.ResetAlarm">
            <summary>
            The reset alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.ResetFault">
            <summary>
            The reset fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.Unsilence">
            <summary>
            The unsilence
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.UnsilenceAudible">
            <summary>
            The unsilence audible
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyOperation.UnsilenceVisual">
            <summary>
            The unsilence visual
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLifeSafetyState">
            <summary>
            BACnet Life Safety State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Quiet">
            <summary>
            The quiet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.PreAlarm">
            <summary>
            The pre alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Alarm">
            <summary>
            The alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Fault">
            <summary>
            The fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.FaultPreAlarm">
            <summary>
            The fault pre alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.FaultAlarm">
            <summary>
            The fault alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.NotReady">
            <summary>
            The not ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Active">
            <summary>
            The active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Tamper">
            <summary>
            The tamper
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.TestAlarm">
            <summary>
            The test alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.TestActive">
            <summary>
            The test active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.TestFault">
            <summary>
            The test fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.TestFaultAlarm">
            <summary>
            The test fault alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Holdup">
            <summary>
            The holdup
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Duress">
            <summary>
            The duress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.TamperAlarm">
            <summary>
            The tamper alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Abnormal">
            <summary>
            The abnormal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.EmergencyPower">
            <summary>
            The emergency power
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Delayed">
            <summary>
            The delayed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Blocked">
            <summary>
            The blocked
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.LocalAlarm">
            <summary>
            The local alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.GeneralAlarm">
            <summary>
            The general alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.Supervisory">
            <summary>
            The supervisory
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLifeSafetyState.TestSupervisory">
            <summary>
            The test supervisory
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLightingInProgress">
            <summary>
            BACnet Lighting In Progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingInProgress.Idle">
            <summary>
            The idle
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingInProgress.FadeActive">
            <summary>
            The fade active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingInProgress.RampActive">
            <summary>
            The ramp active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingInProgress.NotControlled">
            <summary>
            The not controlled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingInProgress.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLightingOperation">
            <summary>
            BACnet Lighting Operation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.FadeTo">
            <summary>
            The fade to
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.RampTo">
            <summary>
            The ramp to
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.StepUp">
            <summary>
            The step up
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.StepDown">
            <summary>
            The step down
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.StepOn">
            <summary>
            The step on
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.StepOff">
            <summary>
            The step off
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.Warn">
            <summary>
            The warn
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.WarnOff">
            <summary>
            The warn off
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.WarnRelinquish">
            <summary>
            The warn relinquish
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingOperation.Stop">
            <summary>
            The stop
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLightingTransition">
            <summary>
            BACnet Lighting transition
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingTransition.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingTransition.Fade">
            <summary>
            The fade
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLightingTransition.Ramp">
            <summary>
            The ramp
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLockStatus">
            <summary>
            BACnet Lock Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLockStatus.Locked">
            <summary>
            The locked
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLockStatus.Unlocked">
            <summary>
            The unlocked
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLockStatus.LockFault">
            <summary>
            The lock fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLockStatus.Unused">
            <summary>
            The unused
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLockStatus.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLoggingType">
            <summary>
            BACnet Logging Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLoggingType.Polled">
            <summary>
            The polled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLoggingType.Cov">
            <summary>
            The cov
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLoggingType.Triggered">
            <summary>
            The triggered
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMACAddressType">
            <summary>
            BACnet MAC Address Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.Broadcast">
            <summary>
            Broadcast
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.Ethernet">
            <summary>
            The ethernet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.ARCNET">
            <summary>
            The ARCNET
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.MS_TP">
            <summary>
            The M s_ TP
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.LonTalkBroadcast">
            <summary>
            The lon talk broadcast
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.LonTalkMulticast">
            <summary>
            The lon talk multicast
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.LonTalkUnicast">
            <summary>
            The lon talk unicast
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.LonTalkUniqueNeuronID">
            <summary>
            The lon talk unique neuron ID
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMACAddressType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMaintenance">
            <summary>
            BACnet Maintenance
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaintenance.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaintenance.PeriodicTest">
            <summary>
            The periodic test
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaintenance.NeedServiceOperational">
            <summary>
            The need service operational
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaintenance.NeedServiceInoperative">
            <summary>
            The need service inoperative
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted">
            <summary>
            Max APDU Length Accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted.MinimumMessageSize">
            <summary>
            The minimum message size (50 octets)
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted.Upto128Octets">
            <summary>
            The upto 128 octets
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted.Upto206Octets">
            <summary>
            The upto 206 octets (fits in aLonTalk frame)
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted.Upto480Octets">
            <summary>
            The upto 480 octets (fits in an ARCNET frame)
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted.Upto1024Octets">
            <summary>
            The upto 1024 octets
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted.Upto1476Octets">
            <summary>
            The upto1476 octets (fits in an ISO 8802-3 Frame)
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMaxAPDU">
            <summary>
            BACnet MAX APDU Lenght Accepted Helper Methods
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetMaxAPDU.Convert(XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted)">
            <summary>
            Maximums the length of the apdu.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetMaxAPDU.ConvertBack(System.UInt32)">
            <summary>
            Converts the back.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted">
            <summary>
            Max Segments Accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Unspecified">
            <summary>
            Unspecified number of segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Segments2">
            <summary>
            2 segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Segments4">
            <summary>
            4 segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Segments8">
            <summary>
            8 segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Segments16">
            <summary>
            16 segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Segments32">
            <summary>
            32 segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.Segments64">
            <summary>
            64 segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted.GreaterThan64">
            <summary>
            Greater than 64 segments accepted
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMaxSegments">
            <summary>
            BACnet Max Segments
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetMaxSegments.Convert(System.UInt32)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetMaxSegments.ConvertBack(XAMIO.BACnet.Standard.BACnetMaxSegmentsAccepted)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetNodeType">
            <summary>
            BACnet Node Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.System">
            <summary>
            The system
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Network">
            <summary>
            The network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Device">
            <summary>
            The device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Organizational">
            <summary>
            The organizational
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Area">
            <summary>
            The area
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Equipment">
            <summary>
            The equipment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Point">
            <summary>
            The point
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Collection">
            <summary>
            The collection
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Property">
            <summary>
            The property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Functional">
            <summary>
            The functional
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNodeType.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetNotifyType">
            <summary>
            BACnet Notify Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotifyType.Alarm">
            <summary>
            The alarm
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotifyType.Event">
            <summary>
            The event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotifyType.AckNotification">
            <summary>
            The ack notification
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetObjectType">
            <summary>
            BACnet Object Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AlertEnrollment">
            <summary>
            The alert enrollment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AccessCredential">
            <summary>
            The access credential
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AccessDoor">
            <summary>
            The access door
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AccessPoint">
            <summary>
            The access point
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AccessRights">
            <summary>
            The access rights
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AccessUser">
            <summary>
            The access user
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AccessZone">
            <summary>
            The access zone
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Accumulator">
            <summary>
            The accumulator
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AnalogInput">
            <summary>
            The analog input
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AnalogOutput">
            <summary>
            The analog output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.AnalogValue">
            <summary>
            The analog value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Averaging">
            <summary>
            The averaging
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.BinaryInput">
            <summary>
            The binary input
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.BinaryOutput">
            <summary>
            The binary output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.BinaryValue">
            <summary>
            The binary value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.BitstringValue">
            <summary>
            The bitstring value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Calendar">
            <summary>
            The calendar
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Channel">
            <summary>
            The channel
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.CharacterstringValue">
            <summary>
            The characterstring value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Command">
            <summary>
            The command
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.CredentialDataInput">
            <summary>
            The credential data input
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.DatePatternValue">
            <summary>
            The date pattern value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.DateValue">
            <summary>
            The date value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.DatetimePatternValue">
            <summary>
            The datetime pattern value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.DatetimeValue">
            <summary>
            The datetime value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Device">
            <summary>
            The device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.EventEnrollment">
            <summary>
            The event enrollment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.EventLog">
            <summary>
            The event log
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.File">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.GlobalGroup">
            <summary>
            The global group
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Group">
            <summary>
            The group
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.IntegerValue">
            <summary>
            The integer value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.LargeAnalogValue">
            <summary>
            The large analog value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.LifeSafetyPoint">
            <summary>
            The life safety point
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.LifeSafetyZone">
            <summary>
            The life safety zone
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.LightingOutput">
            <summary>
            The lighting output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.LoadControl">
            <summary>
            The load control
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Loop">
            <summary>
            The loop
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.MultiStateInput">
            <summary>
            The multi state input
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.MultiStateOutput">
            <summary>
            The multi state output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.MultiStateValue">
            <summary>
            The multi state value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.NetworkSecurity">
            <summary>
            The network security
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.NotificationClass">
            <summary>
            The notification class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.NotificationForwarder">
            <summary>
            The notification forwarder
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.OctetstringValue">
            <summary>
            The octetstring value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.PositiveIntegerValue">
            <summary>
            The positive integer value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Program">
            <summary>
            The program
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.PulseConverter">
            <summary>
            The pulse converter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.Schedule">
            <summary>
            The schedule
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.StructuredView">
            <summary>
            The structured view
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.TimePatternValue">
            <summary>
            The time pattern value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.TimeValue">
            <summary>
            The time value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.TrendLog">
            <summary>
            The trend log
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.TrendLogMultiple">
            <summary>
            The trend log multiple
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetObjectType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetObjectTypeExtensions">
            <summary>
            BACnet Object Type Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypeExtensions.IsAnalog(XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Determines whether the specified type is analog.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypeExtensions.IsBinary(XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Determines whether the specified type is binary.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypeExtensions.IsMultiState(XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Determines whether [is multi state] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypeExtensions.IsOnlyWriteableOnOutOfService(XAMIO.BACnet.Standard.BACnetObjectType,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Determines whether [is writeable on out of service] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <param name="propertyIdentifier">The property identifier</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPDUFileAccessMethod">
            <summary>
            BACnet PDU File Access Method => not unsed in Protocoll, only for Decode / Encode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUFileAccessMethod.RecordAccess">
            <summary>
            The record access
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUFileAccessMethod.StreamAccess">
            <summary>
            The stream access
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPDUType">
            <summary>
            BACnet PDU Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.ConfirmedRequestPDU">
            <summary>
            The confirmed request pdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.UnconfirmedRequestPDU">
            <summary>
            The unconfirmed request pdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.SimpleACKPDU">
            <summary>
            The simple ackpdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.ComplexACKPDU">
            <summary>
            The complex ackpdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.SegmentAckPDU">
            <summary>
            The segment ack pdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.ErrorPDU">
            <summary>
            The error pdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.RejectPDU">
            <summary>
            The reject pdu
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPDUType.AbortPDU">
            <summary>
            The abort pdu
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPolarity">
            <summary>
            BACnet Polarity
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPolarity.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPolarity.Reverse">
            <summary>
            The reverse
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetProgramError">
            <summary>
            BACnet Program Error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramError.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramError.LoadFailed">
            <summary>
            The load failed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramError.Internal">
            <summary>
            The internal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramError.Program">
            <summary>
            The program
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramError.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetProgramRequest">
            <summary>
            BACnet Program Request
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramRequest.Ready">
            <summary>
            The ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramRequest.Load">
            <summary>
            The load
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramRequest.Run">
            <summary>
            The run
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramRequest.Halt">
            <summary>
            The halt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramRequest.Restart">
            <summary>
            The restart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramRequest.Unload">
            <summary>
            The unload
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetProgramState">
            <summary>
            BACnet Program State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramState.Idle">
            <summary>
            The idle
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramState.Loading">
            <summary>
            The loading
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramState.Running">
            <summary>
            The running
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramState.Waiting">
            <summary>
            The waiting
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramState.Halted">
            <summary>
            The halted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProgramState.Unloading">
            <summary>
            The unloading
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyIdentifier">
            <summary>
            BACnet Property Identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AbsenteeLimit">
            <summary>
            The absentee limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AcceptedModes">
            <summary>
            The accepted modes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessAlarmEvents">
            <summary>
            The access alarm events
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessDoors">
            <summary>
            The access doors
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessEvent">
            <summary>
            The access event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessEventAuthenticationFactor">
            <summary>
            The access event authentication factor
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessEventCredential">
            <summary>
            The access event credential
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessEventTag">
            <summary>
            The access event tag
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessEventTime">
            <summary>
            The access event time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccessTransactionEvents">
            <summary>
            The access transaction events
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Accompaniment">
            <summary>
            The accompaniment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AccompanimentTime">
            <summary>
            The accompaniment time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AckRequired">
            <summary>
            The ack required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AckedTransitions">
            <summary>
            The acked transitions
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Action">
            <summary>
            The action
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActionText">
            <summary>
            The action text
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActivationTime">
            <summary>
            The activation time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActiveAuthenticationPolicy">
            <summary>
            The active authentication policy
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActiveCovSubscriptions">
            <summary>
            The active cov subscriptions
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActiveText">
            <summary>
            The active text
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActiveVtSessions">
            <summary>
            The active vt sessions
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ActualShedLevel">
            <summary>
            The actual shed level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AdjustValue">
            <summary>
            The adjust value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AlarmValue">
            <summary>
            The alarm value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AlarmValues">
            <summary>
            The alarm values
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AlignIntervals">
            <summary>
            The align intervals
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AllWritesSuccessful">
            <summary>
            All writes successful
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AllowGroupDelayInhibit">
            <summary>
            The allow group delay inhibit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ApduSegmentTimeout">
            <summary>
            The apdu segment timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ApduTimeout">
            <summary>
            The apdu timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ApplicationSoftwareVersion">
            <summary>
            The application software version
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Archive">
            <summary>
            The archive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AssignedAccessRights">
            <summary>
            The assigned access rights
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AttemptedSamples">
            <summary>
            The attempted samples
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AuthenticationFactors">
            <summary>
            The authentication factors
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AuthenticationPolicyList">
            <summary>
            The authentication policy list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AuthenticationPolicyNames">
            <summary>
            The authentication policy names
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AuthenticationStatus">
            <summary>
            The authentication status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AuthorizationExemptions">
            <summary>
            The authorization exemptions
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AuthorizationMode">
            <summary>
            The authorization mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AutoSlaveDiscovery">
            <summary>
            The automatic slave discovery
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.AverageValue">
            <summary>
            The average value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BackupAndRestoreState">
            <summary>
            The backup and restore state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BackupFailureTimeout">
            <summary>
            The backup failure timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BackupPreparationTime">
            <summary>
            The backup preparation time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BaseDeviceSecurityPolicy">
            <summary>
            The base device security policy
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BelongsTo">
            <summary>
            The belongs to
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Bias">
            <summary>
            The bias
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BitMask">
            <summary>
            The bit mask
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BitText">
            <summary>
            The bit text
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BlinkWarnEnable">
            <summary>
            The blink warn enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.BufferSize">
            <summary>
            The buffer size
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ChangeOfStateCount">
            <summary>
            The change of state count
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ChangeOfStateTime">
            <summary>
            The change of state time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ChannelNumber">
            <summary>
            The channel number
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ClientCovIncrement">
            <summary>
            The client cov increment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ConfigurationFiles">
            <summary>
            The configuration files
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ControlGroups">
            <summary>
            The control groups
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ControlledVariableReference">
            <summary>
            The controlled variable reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ControlledVariableUnits">
            <summary>
            The controlled variable units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ControlledVariableValue">
            <summary>
            The controlled variable value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Count">
            <summary>
            The count
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CountBeforeChange">
            <summary>
            The count before change
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CountChangeTime">
            <summary>
            The count change time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CovIncrement">
            <summary>
            The cov increment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CovPeriod">
            <summary>
            The cov period
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CovResubscriptionInterval">
            <summary>
            The cov resubscription interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CovuPeriod">
            <summary>
            The covu period
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CovuRecipients">
            <summary>
            The covu recipients
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CredentialDisable">
            <summary>
            The credential disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CredentialStatus">
            <summary>
            The credential status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Credentials">
            <summary>
            The credentials
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.CredentialsInZone">
            <summary>
            The credentials in zone
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DatabaseRevision">
            <summary>
            The database revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DateList">
            <summary>
            The date list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DaylightSavingsStatus">
            <summary>
            The daylight savings status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DaysRemaining">
            <summary>
            The days remaining
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Deadband">
            <summary>
            The deadband
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DefaultFadeTime">
            <summary>
            The default fade time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DefaultRampRate">
            <summary>
            The default ramp rate
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DefaultStepIncrement">
            <summary>
            The default step increment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DerivativeConstant">
            <summary>
            The derivative constant
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DerivativeConstantUnits">
            <summary>
            The derivative constant units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DescriptionOfHalt">
            <summary>
            The description of halt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DeviceAddressBinding">
            <summary>
            The device address binding
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DeviceType">
            <summary>
            The device type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DirectReading">
            <summary>
            The direct reading
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DistributionKeyRevision">
            <summary>
            The distribution key revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoNotHide">
            <summary>
            The do not hide
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorAlarmState">
            <summary>
            The door alarm state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorExtendedPulseTime">
            <summary>
            The door extended pulse time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorMembers">
            <summary>
            The door members
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorOpenTooLongTime">
            <summary>
            The door open too long time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorPulseTime">
            <summary>
            The door pulse time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorStatus">
            <summary>
            The door status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DoorUnlockDelayTime">
            <summary>
            The door unlock delay time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.DutyWindow">
            <summary>
            The duty window
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EffectivePeriod">
            <summary>
            The effective period
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EgressTime">
            <summary>
            The egress time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EgressActive">
            <summary>
            The egress active
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ElapsedActiveTime">
            <summary>
            The elapsed active time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EntryPoints">
            <summary>
            The entry points
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Enable">
            <summary>
            The enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ErrorLimit">
            <summary>
            The error limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventAlgorithmInhibit">
            <summary>
            The event algorithm inhibit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventAlgorithmInhibitRef">
            <summary>
            The event algorithm inhibit reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventDetectionEnable">
            <summary>
            The event detection enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventEnable">
            <summary>
            The event enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventMessageTexts">
            <summary>
            The event message texts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventMessageTextsConfig">
            <summary>
            The event message texts configuration
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventState">
            <summary>
            The event state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventTimeStamps">
            <summary>
            The event time stamps
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventType">
            <summary>
            The event type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.EventParameters">
            <summary>
            The event parameters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ExceptionSchedule">
            <summary>
            The exception schedule
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ExecutionDelay">
            <summary>
            The execution delay
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ExitPoints">
            <summary>
            The exit points
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ExpectedShedLevel">
            <summary>
            The expected shed level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ExpiryTime">
            <summary>
            The expiry time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ExtendedTimeEnable">
            <summary>
            The extended time enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FailedAttemptEvents">
            <summary>
            The failed attempt events
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FailedAttempts">
            <summary>
            The failed attempts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FailedAttemptsTime">
            <summary>
            The failed attempts time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FaultParameters">
            <summary>
            The fault parameters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FaultType">
            <summary>
            The fault type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FaultValues">
            <summary>
            The fault values
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FeedbackValue">
            <summary>
            The feedback value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FileAccessMethod">
            <summary>
            The file access method
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FileSize">
            <summary>
            The file size
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FileType">
            <summary>
            The file type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FirmwareRevision">
            <summary>
            The firmware revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.FullDutyBaseline">
            <summary>
            The full duty baseline
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.GlobalIdentifier">
            <summary>
            The global identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.GroupMembers">
            <summary>
            The group members
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.GroupMemberNames">
            <summary>
            The group member names
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.HighLimit">
            <summary>
            The high limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.InactiveText">
            <summary>
            The inactive text
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.InProcess">
            <summary>
            The in process
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.InProgress">
            <summary>
            The in progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.InputReference">
            <summary>
            The input reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.InstanceOf">
            <summary>
            The instance of
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.InstantaneousPower">
            <summary>
            The instantaneous power
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.IntegralConstant">
            <summary>
            The integral constant
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.IntegralConstantUnits">
            <summary>
            The integral constant units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.IntervalOffset">
            <summary>
            The interval offset
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.IsUtc">
            <summary>
            The is UTC
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.KeySets">
            <summary>
            The key sets
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastAccessEvent">
            <summary>
            The last access event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastAccessPoint">
            <summary>
            The last access point
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastCredentialAdded">
            <summary>
            The last credential added
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastCredentialAddedTime">
            <summary>
            The last credential added time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastCredentialRemoved">
            <summary>
            The last credential removed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastCredentialRemovedTime">
            <summary>
            The last credential removed time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastKeyServer">
            <summary>
            The last key server
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastNotifyRecord">
            <summary>
            The last notify record
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastPriority">
            <summary>
            The last priority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastRestartReason">
            <summary>
            The last restart reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastRestoreTime">
            <summary>
            The last restore time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LastUseTime">
            <summary>
            The last use time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LifeSafetyAlarmValues">
            <summary>
            The life safety alarm values
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LightingCommand">
            <summary>
            The lighting command
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LightingCommandDefaultPriority">
            <summary>
            The lighting command default priority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LimitEnable">
            <summary>
            The limit enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LimitMonitoringInterval">
            <summary>
            The limit monitoring interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ListOfGroupMembers">
            <summary>
            The list of group members
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ListOfObjectPropertyReferences">
            <summary>
            The list of object property references
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LocalDate">
            <summary>
            The local date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LocalForwardingOnly">
            <summary>
            The local forwarding only
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LocalTime">
            <summary>
            The local time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Location">
            <summary>
            The location
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LockStatus">
            <summary>
            The lock status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Lockout">
            <summary>
            The lockout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LockoutRelinquishTime">
            <summary>
            The lockout relinquish time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LogBuffer">
            <summary>
            The log buffer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LogDeviceObjectProperty">
            <summary>
            The log device object property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LogInterval">
            <summary>
            The log interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LoggingObject">
            <summary>
            The logging object
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LoggingRecord">
            <summary>
            The logging record
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LoggingType">
            <summary>
            The logging type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.LowLimit">
            <summary>
            The low limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaintenanceRequired">
            <summary>
            The maintenance required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ManipulatedVariableReference">
            <summary>
            The manipulated variable reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ManualSlaveAddressBinding">
            <summary>
            The manual slave address binding
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaskedAlarmValues">
            <summary>
            The masked alarm values
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaximumOutput">
            <summary>
            The maximum output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaximumValue">
            <summary>
            The maximum value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaximumValueTimestamp">
            <summary>
            The maximum value timestamp
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxActualValue">
            <summary>
            The maximum actual value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxApduLengthAccepted">
            <summary>
            The maximum apdu length accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxFailedAttempts">
            <summary>
            The maximum failed attempts
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxInfoFrames">
            <summary>
            The maximum information frames
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxMaster">
            <summary>
            The maximum master
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxPresValue">
            <summary>
            The maximum pres value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MaxSegmentsAccepted">
            <summary>
            The maximum segments accepted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MemberOf">
            <summary>
            The member of
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MemberStatusFlags">
            <summary>
            The member status flags
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Members">
            <summary>
            The members
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinimumOffTime">
            <summary>
            The minimum off time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinimumOnTime">
            <summary>
            The minimum on time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinimumOutput">
            <summary>
            The minimum output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinimumValue">
            <summary>
            The minimum value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinimumValueTimestamp">
            <summary>
            The minimum value timestamp
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinActualValue">
            <summary>
            The minimum actual value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MinPresValue">
            <summary>
            The minimum pres value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Mode">
            <summary>
            The mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ModelName">
            <summary>
            The model name
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ModificationDate">
            <summary>
            The modification date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.MusterPoint">
            <summary>
            The muster point
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NegativeAccessRules">
            <summary>
            The negative access rules
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NetworkAccessSecurityPolicies">
            <summary>
            The network access security policies
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NodeSubtype">
            <summary>
            The node subtype
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NodeType">
            <summary>
            The node type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NotificationClass">
            <summary>
            The notification class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NotificationThreshold">
            <summary>
            The notification threshold
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NotifyType">
            <summary>
            The notify type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NumberOfApduRetries">
            <summary>
            The number of apdu retries
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NumberOfAuthenticationPolicies">
            <summary>
            The number of authentication policies
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.NumberOfStates">
            <summary>
            The number of states
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ObjectIdentifier">
            <summary>
            The object identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ObjectList">
            <summary>
            The object list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ObjectName">
            <summary>
            The object name
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ObjectPropertyReference">
            <summary>
            The object property reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ObjectType">
            <summary>
            The object type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyCount">
            <summary>
            The occupancy count
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyCountAdjust">
            <summary>
            The occupancy count adjust
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyCountEnable">
            <summary>
            The occupancy count enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyLowerLimit">
            <summary>
            The occupancy lower limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyLowerLimitEnforced">
            <summary>
            The occupancy lower limit enforced
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyState">
            <summary>
            The occupancy state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyUpperLimit">
            <summary>
            The occupancy upper limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OccupancyUpperLimitEnforced">
            <summary>
            The occupancy upper limit enforced
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OperationExpected">
            <summary>
            The operation expected
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Optional">
            <summary>
            The optional
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OutOfService">
            <summary>
            The out of service
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.OutputUnits">
            <summary>
            The output units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PacketReorderTime">
            <summary>
            The packet reorder time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PassbackMode">
            <summary>
            The passback mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PassbackTimeout">
            <summary>
            The passback timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Polarity">
            <summary>
            The polarity
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PortFilter">
            <summary>
            The port filter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PositiveAccessRules">
            <summary>
            The positive access rules
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Power">
            <summary>
            The power
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Prescale">
            <summary>
            The prescale
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PresentValue">
            <summary>
            The present value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Priority">
            <summary>
            The priority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PriorityArray">
            <summary>
            The priority array
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PriorityForWriting">
            <summary>
            The priority for writing
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProcessIdentifier">
            <summary>
            The process identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProcessIdentifierFilter">
            <summary>
            The process identifier filter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProfileName">
            <summary>
            The profile name
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProgramChange">
            <summary>
            The program change
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProgramLocation">
            <summary>
            The program location
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProgramState">
            <summary>
            The program state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PropertyList">
            <summary>
            The property list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProportionalConstant">
            <summary>
            The proportional constant
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProportionalConstantUnits">
            <summary>
            The proportional constant units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProtocolObjectTypesSupported">
            <summary>
            The protocol object types supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProtocolRevision">
            <summary>
            The protocol revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProtocolServicesSupported">
            <summary>
            The protocol services supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ProtocolVersion">
            <summary>
            The protocol version
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.PulseRate">
            <summary>
            The pulse rate
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ReadOnly">
            <summary>
            The read only
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ReasonForDisable">
            <summary>
            The reason for disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ReasonForHalt">
            <summary>
            The reason for halt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RecipientList">
            <summary>
            The recipient list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RecordsSinceNotification">
            <summary>
            The records since notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RecordCount">
            <summary>
            The record count
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Reliability">
            <summary>
            The reliability
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ReliabilityEvaluationInhibit">
            <summary>
            The reliability evaluation inhibit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RelinquishDefault">
            <summary>
            The relinquish default
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RequestedShedLevel">
            <summary>
            The requested shed level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RequestedUpdateInterval">
            <summary>
            The requested update interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Required">
            <summary>
            The required
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Resolution">
            <summary>
            The resolution
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RestartNotificationRecipients">
            <summary>
            The restart notification recipients
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RestoreCompletionTime">
            <summary>
            The restore completion time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.RestorePreparationTime">
            <summary>
            The restore preparation time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Scale">
            <summary>
            The scale
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ScaleFactor">
            <summary>
            The scale factor
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ScheduleDefault">
            <summary>
            The schedule default
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SecuredStatus">
            <summary>
            The secured status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SecurityPduTimeout">
            <summary>
            The security pdu timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SecurityTimeWindow">
            <summary>
            The security time window
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SegmentationSupported">
            <summary>
            The segmentation supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SerialNumber">
            <summary>
            The serial number
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Setpoint">
            <summary>
            The setpoint
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SetpointReference">
            <summary>
            The setpoint reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Setting">
            <summary>
            The setting
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ShedDuration">
            <summary>
            The shed duration
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ShedLevelDescriptions">
            <summary>
            The shed level descriptions
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ShedLevels">
            <summary>
            The shed levels
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Silenced">
            <summary>
            The silenced
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SlaveAddressBinding">
            <summary>
            The slave address binding
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SlaveProxyEnable">
            <summary>
            The slave proxy enable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StartTime">
            <summary>
            The start time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StateDescription">
            <summary>
            The state description
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StateText">
            <summary>
            The state text
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StatusFlags">
            <summary>
            The status flags
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StopTime">
            <summary>
            The stop time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StopWhenFull">
            <summary>
            The stop when full
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.StructuredObjectList">
            <summary>
            The structured object list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SubordinateAnnotations">
            <summary>
            The subordinate annotations
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SubordinateList">
            <summary>
            The subordinate list
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SubscribedRecipients">
            <summary>
            The subscribed recipients
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SupportedFormats">
            <summary>
            The supported formats
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SupportedFormatClasses">
            <summary>
            The supported format classes
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SupportedSecurityAlgorithms">
            <summary>
            The supported security algorithms
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.SystemStatus">
            <summary>
            The system status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ThreatAuthority">
            <summary>
            The threat authority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ThreatLevel">
            <summary>
            The threat level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeDelay">
            <summary>
            The time delay
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeDelayNormal">
            <summary>
            The time delay normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeOfActiveTimeReset">
            <summary>
            The time of active time reset
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeOfDeviceRestart">
            <summary>
            The time of device restart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeOfStateCountReset">
            <summary>
            The time of state count reset
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeSynchronizationInterval">
            <summary>
            The time synchronization interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TimeSynchronizationRecipients">
            <summary>
            The time synchronization recipients
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TotalRecordCount">
            <summary>
            The total record count
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TraceFlag">
            <summary>
            The trace flag
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TrackingValue">
            <summary>
            The tracking value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.TransactionNotificationClass">
            <summary>
            The transaction notification class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Transition">
            <summary>
            The transition
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Trigger">
            <summary>
            The trigger
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.Units">
            <summary>
            The units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UpdateInterval">
            <summary>
            The update interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UpdateKeySetTimeout">
            <summary>
            The update key set timeout
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UpdateTime">
            <summary>
            The update time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UserExternalIdentifier">
            <summary>
            The user external identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UserInformationReference">
            <summary>
            The user information reference
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UserName">
            <summary>
            The user name
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UserType">
            <summary>
            The user type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UsesRemaining">
            <summary>
            The uses remaining
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UtcOffset">
            <summary>
            The UTC offset
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.UtcTimeSynchronizationRecipients">
            <summary>
            The UTC time synchronization recipients
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ValidSamples">
            <summary>
            The valid samples
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ValueBeforeChange">
            <summary>
            The value before change
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ValueSet">
            <summary>
            The value set
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ValueChangeTime">
            <summary>
            The value change time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.VarianceValue">
            <summary>
            The variance value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.VendorIdentifier">
            <summary>
            The vendor identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.VendorName">
            <summary>
            The vendor name
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.VerificationTime">
            <summary>
            The verification time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.VtClassesSupported">
            <summary>
            The vt classes supported
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.WeeklySchedule">
            <summary>
            The weekly schedule
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.WindowInterval">
            <summary>
            The window interval
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.WindowSamples">
            <summary>
            The window samples
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.WriteStatus">
            <summary>
            The write status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ZoneFrom">
            <summary>
            The zone from
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ZoneMembers">
            <summary>
            The zone members
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.ZoneTo">
            <summary>
            The zone to
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.XAMScheduleDefaultNullIdentifier">
            <summary>
            XAMControl ScheduleDefault Null 
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.XAMEventPropertyIdentifier">
            <summary>
            XAMControl Internal Value Property
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyIdentifier.XAMValuePropertyIdentifier">
            <summary>
            XAMControl Internal Value Property
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.COVType">
            <summary>
            BACnet COV Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.COVType.COV">
            <summary>
            The cov
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.COVType.COVP">
            <summary>
            The covp
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyIdentifierExtensions">
            <summary>
            BACnet Property Identifier Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyIdentifierExtensions.GetCOVType(XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Gets the type of the cov.
            </summary>
            <param name="prop">The property.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetRejectReason">
            <summary>
            BACnet Reject Reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.Other">
            <summary>
            The other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.BufferOverflow">
            <summary>
            The buffer overflow
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.InconsistentParameters">
            <summary>
            The inconsistent parameters
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.InvalidParameterDataType">
            <summary>
            The invalid parameter data type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.InvalidTag">
            <summary>
            The invalid tag
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.MissingRequiredParameter">
            <summary>
            The missing required parameter
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.ParameterOutOfRange">
            <summary>
            The parameter out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.TooManyArguments">
            <summary>
            The too many arguments
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.UndefinedEnumeration">
            <summary>
            The undefined enumeration
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRejectReason.UnrecognizedService">
            <summary>
            The unrecognized service
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetReliability">
            <summary>
            BACnet Reliability
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.NoFaultDetected">
            <summary>
            The no fault detected
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.NoSensor">
            <summary>
            The no sensor
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.OverRange">
            <summary>
            The over range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.UnderRange">
            <summary>
            The under range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.OpenLoop">
            <summary>
            The open loop
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.ShortedLoop">
            <summary>
            The shorted loop
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.NoOutput">
            <summary>
            The no output
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.UnreliableOther">
            <summary>
            The unreliable other
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.ProcessError">
            <summary>
            The process error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.MultiStateFault">
            <summary>
            The multi state fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.ConfigurationError">
            <summary>
            The configuration error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.CommunicationFailure">
            <summary>
            The communication failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.MemberFault">
            <summary>
            The member fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.MonitoredObjectFault">
            <summary>
            The monitored object fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetReliability.Tripped">
            <summary>
            The tripped
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetRestartReason">
            <summary>
            BACnet Restart Reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.Unknown">
            <summary>
            The unknown
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.Coldstart">
            <summary>
            The coldstart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.Warmstart">
            <summary>
            The warmstart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.DetectedPowerLost">
            <summary>
            The detected power lost
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.DetectedPoweredOff">
            <summary>
            The detected powered off
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.HardwareWatchdog">
            <summary>
            The hardware watchdog
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.SoftwareWatchdog">
            <summary>
            The software watchdog
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRestartReason.Suspended">
            <summary>
            The suspended
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSecurityLevel">
            <summary>
            BACnet Security Level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityLevel.Incapable">
            <summary>
            The incapable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityLevel.Plain">
            <summary>
            The plain
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityLevel.Signed">
            <summary>
            The signed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityLevel.Encrypted">
            <summary>
            The encrypted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityLevel.SignedEndToEnd">
            <summary>
            The signed end to end
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityLevel.EncryptedEndToEnd">
            <summary>
            The encrypted end to end
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSecurityPolicy">
            <summary>
            BACnet Security Policy
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityPolicy.PlainNonTrusted">
            <summary>
            The plain non trusted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityPolicy.PlainTrusted">
            <summary>
            The plain trusted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityPolicy.SignedTrusted">
            <summary>
            The signed trusted
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSecurityPolicy.EncryptedTrusted">
            <summary>
            The encrypted trusted
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSegmentation">
            <summary>
            BACnet Segmentation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSegmentation.SegmentedBoth">
            <summary>
            The segmented both
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSegmentation.SegmentedTransmit">
            <summary>
            The segmented transmit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSegmentation.SegmentedReceive">
            <summary>
            The segmented receive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSegmentation.NoSegmentation">
            <summary>
            The no segmentation
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetShedState">
            <summary>
            BACnet Shed State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedState.ShedInactive">
            <summary>
            The shed inactive
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedState.ShedRequestPending">
            <summary>
            The shed request pending
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedState.ShedCompliant">
            <summary>
            The shed compliant
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedState.ShedNonCompliant">
            <summary>
            The shed non compliant
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSilencedState">
            <summary>
            BACnet Silenced State
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSilencedState.Unsilenced">
            <summary>
            The unsilenced
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSilencedState.AudibleSilenced">
            <summary>
            The audible silenced
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSilencedState.VisibleSilenced">
            <summary>
            The visible silenced
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSilencedState.AllSilenced">
            <summary>
            All silenced
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice">
            <summary>
            BACnet Unconfirmed Service Choice
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.IAm">
            <summary>
            The i am
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.IHave">
            <summary>
            The i have
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.UnconfirmedCOVNotification">
            <summary>
            The unconfirmed cov notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.UnconfirmedEventNotification">
            <summary>
            The unconfirmed event notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.UnconfirmedPrivateTransfer">
            <summary>
            The unconfirmed private transfer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.UnconfirmedTextMessage">
            <summary>
            The unconfirmed text message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.TimeSynchronization">
            <summary>
            The time synchronization
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.WhoHas">
            <summary>
            The who has
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.WhoIs">
            <summary>
            The who is
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.UtcTimeSynchronization">
            <summary>
            The UTC time synchronization
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice.WriteGroup">
            <summary>
            The write group
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetVTClass">
            <summary>
            BACnet CT Class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.DefaultTerminal">
            <summary>
            The default terminal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.AnsiX364">
            <summary>
            The ANSI X364
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.DecVt52">
            <summary>
            The decimal VT52
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.DecVt100">
            <summary>
            The decimal VT100
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.DecVt220">
            <summary>
            The decimal VT220
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.Hp70094">
            <summary>
            The HP70094
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetVTClass.Ibm3130">
            <summary>
            The ibm3130
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetWriteStatus">
            <summary>
            BACnet Write Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetWriteStatus.Idle">
            <summary>
            The idle
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetWriteStatus.InProgress">
            <summary>
            The in progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetWriteStatus.Successful">
            <summary>
            The successful
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetWriteStatus.Failed">
            <summary>
            The failed
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetError">
            <summary>
            BACnet Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetError.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetError.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetError.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.FromBytes(System.Byte[],System.Int32@,XAMIO.BACnet.Standard.BACnetErrorType)">
            <summary>
            Froms the bytes.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.Create(XAMIO.BACnet.Standard.BACnetError,XAMIO.BACnet.Standard.BACnetErrorType)">
            <summary>
            Creates the specified error.
            </summary>
            <param name="err">The error.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetError.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ChangeListError">
            <summary>
            Change List Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ChangeListError.ErrorType">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ChangeListError.FirstFailedElementNumber">
            <summary>
            Gets or sets the first failed element number.
            </summary>
            <value>
            The first failed element number.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ChangeListError.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ChangeListError.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ChangeListError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ChangeListError.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ChangeListError.CreateAddListElementError(XAMIO.BACnet.Standard.Error,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Creates the specified error type.
            </summary>
            <param name="errorType">Type of the error.</param>
            <param name="firstFailedElementNumber">The first failed element number.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ChangeListError.CreateRemoveListElementError(XAMIO.BACnet.Standard.Error,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Creates the specified error type.
            </summary>
            <param name="errorType">Type of the error.</param>
            <param name="firstFailedElementNumber">The first failed element number.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError">
            <summary>
            Confirmed Private Transfer Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.ErrorType">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.VendorID">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.ServiceNumber">
            <summary>
            Gets or sets the service number.
            </summary>
            <value>
            The service number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.ErrorParameters">
            <summary>
            Gets or sets the error parameters.
            </summary>
            <value>
            The error parameters.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ConfirmedPrivateTransferError.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.CreateObjectError">
            <summary>
            Create Object Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.CreateObjectError.ErrorType">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.CreateObjectError.FirstFailedElementNumber">
            <summary>
            Gets or sets the first failed element number.
            </summary>
            <value>
            The first failed element number.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectError.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectError.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectError.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.CreateObjectError.Create(XAMIO.BACnet.Standard.Error,System.UInt32)">
            <summary>
            Creates the specified error type.
            </summary>
            <param name="errorType">Type of the error.</param>
            <param name="firstFailedElementNumber">The first failed element number in list of initial values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.Error.ErrorClass">
            <summary>
            Gets or sets the error class.
            </summary>
            <value>
            The error class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.Error.ErrorCode">
            <summary>
            Gets or sets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.Error"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.#ctor(XAMIO.BACnet.Standard.BACnetErrorClass,XAMIO.BACnet.Standard.BACnetErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.Error"/> class.
            </summary>
            <param name="errorClass">The error class.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.Create(XAMIO.BACnet.Standard.BACnetErrorType,XAMIO.BACnet.Standard.BACnetErrorClass,XAMIO.BACnet.Standard.BACnetErrorCode)">
            <summary>
            Creates the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="errorClass">The error class.</param>
            <param name="errorCode">The error code.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.Error.Create(XAMIO.BACnet.Standard.Error,XAMIO.BACnet.Standard.BACnetErrorType)">
            <summary>
            Creates the specified olderror.
            </summary>
            <param name="olderror">The olderror.</param>
            <param name="bACnetErrorType">Type of the b a cnet error.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.VTCloseError">
            <summary>
            VT Close Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTCloseError.ErrorType">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.VTCloseError.ListOfVTSessionIdentifiers">
            <summary>
            Gets or sets the list of vt session identifiers.
            </summary>
            <value>
            The list of vt session identifiers.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseError.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseError.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.VTCloseError.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WritePropertyMultipleError">
            <summary>
            Write Property Multiple Error
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyMultipleError.ErrorType">
            <summary>
            Gets or sets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WritePropertyMultipleError.FirstFailedWriteAttempt">
            <summary>
            Gets or sets the first failed write attempt.
            </summary>
            <value>
            The first failed write attempt.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleError.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleError.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleError.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleError.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleError.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WritePropertyMultipleError.Create(XAMIO.BACnet.Standard.Error,XAMIO.BACnet.Standard.BACnetObjectPropertyReference)">
            <summary>
            Creates the specified error type.
            </summary>
            <param name="errorType">Type of the error.</param>
            <param name="firstFailedWriteAttempt">The first failed write attempt.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAbortException">
            <summary>
            BACnet Abort Exception
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAbortException.Reason">
            <summary>
            Gets the reason.
            </summary>
            <value>
            The reason.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAbortException.#ctor(XAMIO.BACnet.Standard.BACnetAbortReason)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAbortException"/> class.
            </summary>
            <param name="reason">The reason.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAbortException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAbortException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAbortException.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAbortException.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAbortException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
              </PermissionSet>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetErrorException">
            <summary>
            BACnet Error Exception
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetErrorException.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetErrorException.#ctor(XAMIO.BACnet.Standard.BACnetErrorClass,XAMIO.BACnet.Standard.BACnetErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetErrorException"/> class.
            </summary>
            <param name="errorClass">The error class.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetErrorException.#ctor(XAMIO.BACnet.Standard.BACnetErrorClass,XAMIO.BACnet.Standard.BACnetErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetErrorException"/> class.
            </summary>
            <param name="errorClass">The error class.</param>
            <param name="errorCode">The error code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetErrorException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetErrorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
              </PermissionSet>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetErrorException.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetErrorException.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetException">
            <summary>
            BACnet exception base class
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetException"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetRejectException">
            <summary>
            BACnet Reject Exception
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetRejectException.Reason">
            <summary>
            Gets the reason.
            </summary>
            <value>
            The reason.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRejectException.#ctor(XAMIO.BACnet.Standard.BACnetRejectReason)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetRejectException"/> class.
            </summary>
            <param name="reason">The reason.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRejectException.#ctor(XAMIO.BACnet.Standard.BACnetRejectReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetRejectException"/> class.
            </summary>
            <param name="reason">The reason.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRejectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAbortException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRejectException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
              </PermissionSet>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRejectException.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRejectException.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IEventNotificationRequest">
            <summary>
            Event Notification Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.AckRequired">
            <summary>
            Gets or sets the ack required.
            </summary>
            <value>
            The ack required.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.EventObjectIdentifier">
            <summary>
            Gets or sets the event object identifier.
            </summary>
            <value>
            The event object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.EventValues">
            <summary>
            Gets or sets the event values.
            </summary>
            <value>
            The event values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.FromState">
            <summary>
            Gets or sets from state.
            </summary>
            <value>
            From state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.InitiatingDeviceIdentifier">
            <summary>
            Gets or sets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.MessageText">
            <summary>
            Gets or sets the message text.
            </summary>
            <value>
            The message text.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.NotificationClass">
            <summary>
            Gets or sets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.NotifyType">
            <summary>
            Gets or sets the type of the notify.
            </summary>
            <value>
            The type of the notify.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.ProcessIdentifier">
            <summary>
            Gets or sets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IEventNotificationRequest.ToState">
            <summary>
            Gets or sets to state.
            </summary>
            <value>
            To state.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IEventNotificationRequest.Clone">
            <summary>
            Clones the object
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDecoder">
            <summary>
            BACnet Decoder
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeContext``1(System.Int32,System.Byte[],System.Int32@)">
            <summary>
            Decodes the context.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            </exception>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeContext(System.Int32,System.Byte[],System.Int32@,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Decodes the context.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException">
            Invalid Tag Class  + contextTag.Class +  expected  + BACnetTagClass.Context.ToString()
            or
            Invalid Context Tag Number:  + contextTag.TagNumber +  expected:  + id
            or
            Invalid Tag, opening Tag expected!
            or
            Invalid Tag, closing Tag expected!
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeValue(System.Int32,System.Byte[],System.Int32@,System.Nullable{XAMIO.BACnet.Standard.BACnetPropertyIdentifier},System.Nullable{XAMIO.BACnet.Standard.BACnetObjectType},System.Boolean)">
            <summary>
            Decodes the value.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="ident">The ident.</param>
            <param name="obj">The object.</param>
            <param name="isArrayIndex">if set to <c>true</c> [is array index].</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException">
            Invalid Tag Class, opening Tag expected!
            or
            Invalid Tag Type, opening Tag expected!
            or
            Invalid Tag Number  + openTag.TagNumber +  expected: + id
            </exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.NextIsContext(System.Byte[],System.Int32)">
            <summary>
            Nexts the is context.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.NextIsContext(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Nexts the is context.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.NextIsOpenClose(System.Int32,System.Byte[],System.Int32,XAMIO.BACnet.Standard.BACnetNamedTagType)">
            <summary>
            Nexts the is open close.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="tagType">Type of the tag.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeSimpleList``1(System.Byte[],System.Int32@,System.Nullable{System.Int32})">
            <summary>
            Decodes the simple list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeList``1(System.Int32,System.Byte[],System.Int32@,XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Decodes the list.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="parentType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeList(System.Int32,System.Byte[],System.Int32@,System.Nullable{XAMIO.BACnet.Standard.BACnetObjectType},XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Decodes the list.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="type">The type.</param>
            <param name="prop">The property.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeList(System.Int32,System.Byte[],System.Int32@,System.Type,XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            Decodes the list.
            </summary>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="innerType">Type of the inner.</param>
            <param name="parentTyp"></param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException">
            Invalid Tag Type, optining Tag expected
            or
            Invalid Tag Number  + tag.TagNumber +  expected:  + id
            or
            Invalid Tag, closing Tag expected
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeAbstractSyntaxAndType``1(System.Byte[],System.Int32@)">
            <summary>
            Decodes the type of the abstract syntax and.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeAbstractSyntaxAndType(System.Byte[],System.Int32@,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Decodes the type of the abstract syntax and.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.DecodeAbstractSyntaxAndType(System.Byte[],System.Int32@,System.Nullable{XAMIO.BACnet.Standard.BACnetPropertyIdentifier},System.Nullable{XAMIO.BACnet.Standard.BACnetObjectType},System.Boolean,System.Boolean)">
            <summary>
            Decodes the type of the abstract syntax and.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="ident">The ident.</param>
            <param name="obj">The object.</param>
            <param name="isInnerType"></param>
            <param name="supportUnknownValue"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.EncodeContext``1(System.Int32,``0)">
            <summary>
            Encodes the context.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.EncodeValue(System.Int32,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Encodes the value.
            </summary>
            <param name="id">The identifier.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.EncodeList``1(System.Int32,System.Collections.Generic.List{``0})">
            <summary>
            Encodes the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.EncodeAbstractSyntaxAndType(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Encodes the type of the abstract syntax and.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDecoder.EncodeSimpleList``1(System.Collections.Generic.List{``0})">
            <summary>
            Encodes the simple list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPDU">
            <summary>
            BACnet PDU
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.NetworkTelegram">
            <summary>
            Gets or sets the network telegram.
            </summary>
            <value>
            The network telegram.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.PDUType">
            <summary>
            Gets or sets the type of the PDU.
            </summary>
            <value>
            The type of the PDU.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.BodyData">
            <summary>
            Gets or sets the body data.
            </summary>
            <value>
            The body data.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.PDUFlags">
            <summary>
            Gets or sets the PDU flags.
            </summary>
            <value>
            The PDU flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.MaxSegmentsAccepted">
            <summary>
            Gets or sets the max segments accepted.
            </summary>
            <value>
            The max segments accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.MaxAPDULengthAccepted">
            <summary>
            Gets or sets the max APDU length accepted.
            </summary>
            <value>
            The max APDU length accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.InvokeID">
            <summary>
            Gets or sets the invoke ID.
            </summary>
            <value>
            The invoke ID.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.SequenceNumber">
            <summary>
            Gets or sets the sequence number.
            </summary>
            <value>
            The sequence number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.WindowSize">
            <summary>
            Gets or sets the size of the proposed window.
            </summary>
            <value>
            The size of the proposed window.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.ServiceChoice">
            <summary>
            Gets or sets the service choice.
            </summary>
            <value>
            The service choice.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.Service">
            <summary>
            Gets or sets the service.
            </summary>
            <value>
            The service.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.SegNegativeAck">
            <summary>
            Gets or sets a value indicating whether [seg negative ack].
            </summary>
            <value>
              <c>true</c> if [seg negative ack]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.SegIsServer">
            <summary>
            Gets or sets a value indicating whether [seg is server].
            </summary>
            <value>
              <c>true</c> if [seg is server]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.SenderAddress">
            <summary>
            Gets the sender address.
            </summary>
            <value>
            The sender address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.PduHeaderOffset">
            <summary>
            Gets or sets the pdu header offset.
            </summary>
            <value>
            The pdu header offset.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.IgnoreDecodeBody">
            <summary>
            Gets or sets a value indicating whether [ignore decode body].
            </summary>
            <value>
              <c>true</c> if [ignore decode body]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDU.IsBroadcast">
            <summary>
            Gets or sets a value indicating whether [is broadcast].
            </summary>
            <value>
              <c>true</c> if [is broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPDU" /> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.Decode(System.Byte[])">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.DecodeBody">
            <summary>
            Decodes the body.
            </summary>
            <exception cref="T:System.Exception">
            BACnet APDU: Illegal BACnet PDU Type
            or
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.GetServiceChoiceType">
            <summary>
            Gets the type of the pdu.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.CopySetting(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Copies the setting.
            </summary>
            <param name="fromPDU">From pdu.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.FromBytes(System.Byte[])">
            <summary>
            Froms the bytes.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.CreateSimpleAck(XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice)">
            <summary>
            Creates the simple ack.
            </summary>
            <param name="serviceChoice">The service choice.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.CreateSegmentAck(XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates the segment ack.
            </summary>
            <param name="serviceChoice">The service choice.</param>
            <param name="sequenceNumber">The sequence number.</param>
            <param name="windowSize">Size of the window.</param>
            <param name="negativeAck">if set to <c>true</c> [negative ack].</param>
            <param name="isServer">if set to <c>true</c> [is server].</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.CreateReject(XAMIO.BACnet.Standard.BACnetRejectReason)">
            <summary>
            Creates the reject.
            </summary>
            <param name="reason">The reason.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.CreateAbort(XAMIO.BACnet.Standard.BACnetAbortReason)">
            <summary>
            Creates the abort.
            </summary>
            <param name="reason">The reason.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.Create(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.BACnetPDUType,System.Int32)">
            <summary>
            Creates the specified service.
            </summary>
            <param name="service">The service.</param>
            <param name="pduType">Type of the pdu.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDU.CreateSegmentedPDU(XAMIO.BACnet.Standard.BACnetPDUType,System.Byte,System.Collections.Generic.List{System.Byte},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates the segmented pdu.
            </summary>
            <param name="pduType">Type of the pdu.</param>
            <param name="choice">The choice.</param>
            <param name="data">The data.</param>
            <param name="sequence">The sequence.</param>
            <param name="windowsize">The windowsize.</param>
            <param name="moreFollow">if set to <c>true</c> [more follow].</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPDUExtensions">
            <summary>
            BACnet PDU Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUExtensions.IgnoreDecodeBody(XAMIO.BACnet.Standard.BACnetPDU,System.Boolean)">
            <summary>
            Ignores the decode body.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="ignore">if set to <c>true</c> [ignore].</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUExtensions.SetInvokeId(XAMIO.BACnet.Standard.BACnetPDU,System.Byte)">
            <summary>
            Sets the invoke identifier.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="invokeId">The invoke identifier.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUExtensions.SetSenderAddress(XAMIO.BACnet.Standard.BACnetPDU,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Sets the sender address.
            </summary>
            <param name="pdu">The pdu.</param>
            <param name="addr">The addr.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetTagClass">
            <summary>
            BACnet Tag Class
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTagClass.Application">
            <summary>
            The application
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTagClass.Context">
            <summary>
            The context
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetNamedTagType">
            <summary>
            BACnet Named Tag Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNamedTagType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNamedTagType.ExtendedLength">
            <summary>
            The extended length
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNamedTagType.OpeningTag">
            <summary>
            The opening tag
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNamedTagType.ClosingTag">
            <summary>
            The closing tag
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetTag">
            <summary>
            BACnet Tag
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTag.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTag.TagNumber">
            <summary>
            Gets or sets the tag number.
            </summary>
            <value>
            The tag number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTag.Class">
            <summary>
            Gets or sets the class.
            </summary>
            <value>
            The class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTag.TagLength">
            <summary>
            Gets or sets the length of the tag.
            </summary>
            <value>
            The length of the tag.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTag.IsNamedTag">
            <summary>
            Gets or sets a value indicating whether [is named tag].
            </summary>
            <value>
              <c>true</c> if [is named tag]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTag.NamedTag">
            <summary>
            Gets or sets the named tag.
            </summary>
            <value>
            The named tag.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTag"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.#ctor(System.Int32,XAMIO.BACnet.Standard.BACnetNamedTagType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTag"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.#ctor(System.Int32,XAMIO.BACnet.Standard.BACnetTagClass)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTag"/> class.
            </summary>
            <param name="id">The identifier.</param>
            <param name="c">The c.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.Decode(System.Byte[],System.Int32)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="inputoffset">The inputoffset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.DecodeApplicationTag``1(System.Byte[],System.Int32@)">
            <summary>
            Decodes the application tag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.DecodeApplicationTag(System.Byte[],System.Int32@)">
            <summary>
            Decodes the application tag.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.DecodeContextTag``1(System.Int32,System.Byte[],System.Int32@)">
            <summary>
            Decodes the context tag.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The identifier.</param>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.DecodeBaseType``1(System.Byte[],System.Int32@)">
            <summary>
            Decodes the type of the base.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.DecodeBaseType(System.Byte[],System.Int32@,XAMIO.BACnet.Standard.ASN1Base)">
            <summary>
            Decodes the type of the base.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="instance">The instance.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Can't be extented Length whe already namedTag</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.EncodeContextTag(XAMIO.BACnet.Standard.IASN1BaseType)">
            <summary>
            Encodes the context tag.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.FromBytes(System.Byte[],System.Int32)">
            <summary>
            Froms the bytes.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTag.EncodeApplicationTag(XAMIO.BACnet.Standard.ASN1Base)">
            <summary>
            Encodes the application tag.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessRule">
            <summary>
            BACnet Access Rule
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccessRule.TimeRangeSpecifier">
            <summary>
            Gets or sets the time range specifier.
            </summary>
            <value>
            The time range specifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccessRule.TimeRange">
            <summary>
            Gets or sets the time range.
            </summary>
            <value>
            The time range.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccessRule.LocationSpecifier">
            <summary>
            Gets or sets the location specifier.
            </summary>
            <value>
            The location specifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccessRule.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>
            The location.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccessRule.Enable">
            <summary>
            Gets or sets the enable.
            </summary>
            <value>
            The enable.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessRule.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessRule.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessRule.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessRule.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessRule.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessRule.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetTimeRangeSpecifier">
            <summary>
            Access Rule Time Range Specifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTimeRangeSpecifier.Specified">
            <summary>
            The specified
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTimeRangeSpecifier.Always">
            <summary>
            The always
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLocationSpecifier">
            <summary>
            Access Rule Location Specifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLocationSpecifier.Specified">
            <summary>
            The specified
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLocationSpecifier.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccessThreatLevel">
            <summary>
            BACnet Access Threat Level
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessThreatLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAccessThreatLevel"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccessThreatLevel.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAccessThreatLevel"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccumulatorRecord">
            <summary>
            BACnet Accumulator Record
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.PresentValue">
            <summary>
            Gets or sets the present value.
            </summary>
            <value>
            The present value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatedValue">
            <summary>
            Gets or sets the accumulated value.
            </summary>
            <value>
            The accumulated value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorStatus">
            <summary>
            Gets or sets the accumulator status.
            </summary>
            <value>
            The accumulator status.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorRecordStatus">
            <summary>
            Accumulator Record Status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorRecordStatus.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorRecordStatus.Starting">
            <summary>
            The starting
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorRecordStatus.Recovered">
            <summary>
            The recovered
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorRecordStatus.Abnormal">
            <summary>
            The abnormal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAccumulatorRecord.AccumulatorRecordStatus.Failed">
            <summary>
            The failed
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetActionCommand">
            <summary>
            BACnet Action Command
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.DeviceIdentifier">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>
            The device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.PropertyValue">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>
            The property value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.PostDelay">
            <summary>
            Gets or sets the post delay.
            </summary>
            <value>
            The post delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.QuitOnFailure">
            <summary>
            Gets or sets the quit on failure.
            </summary>
            <value>
            The quit on failure.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionCommand.WriteSuccessful">
            <summary>
            Gets or sets the write successful.
            </summary>
            <value>
            The write successful.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionCommand.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionCommand.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionCommand.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionCommand.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionCommand.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionCommand.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetActionList">
            <summary>
            BACnet Action List
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetActionList.Action">
            <summary>
            Gets or sets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionList.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionList.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionList.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionList.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionList.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetActionList.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAddress">
            <summary>
            BACnet Address
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAddress.BroadcastNetwork">
            <summary>
            BACnet Broadcast Network
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.NetworkNumber">
            <summary>
            Gets or sets the network number.
            </summary>
            <value>
            The network number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.MacAddress">
            <summary>
            A string of length 0 indicates a broadcast
            </summary>
            <value>
            The mac address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.MacAddressLong">
            <summary>
            Gets the mac address long.
            </summary>
            <value>
            The mac address long.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.MacAddressEndPoint">
            <summary>
            Gets the mac address end point.
            </summary>
            <value>
            The mac address end point.
            </value>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.MacAddressType">
            <summary>
            Gets the type of the mac address.
            </summary>
            <value>
            The type of the mac address.
            </value>
            <exception cref="T:System.InvalidOperationException">Illegal MAC Address length</exception>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.MacAddressIsBroadcast">
            <summary>
            Gets a value indicating whether [mac address is broadcast].
            </summary>
            <value>
            <c>true</c> if [mac address is broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.BroadcastType">
            <summary>
            Gets the type of the broadcast.
            </summary>
            <value>
            The type of the broadcast.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.IsBroadcast">
            <summary>
            Gets a value indicating whether [is broadcast].
            </summary>
            <value>
              <c>true</c> if [is broadcast]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddress"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.#ctor(XAMIO.BACnet.Standard.ASN1Unsigned16,XAMIO.BACnet.Standard.ASN1OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddress"/> class.
            </summary>
            <param name="networkNumber">The network number.</param>
            <param name="macAddress">The mac address.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.#ctor(System.UInt16,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddress"/> class.
            </summary>
            <param name="networkNumber">The network number.</param>
            <param name="macAddress">The mac address.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.#ctor(System.UInt16,System.Net.IPEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddress"/> class.
            </summary>
            <param name="networkNumber">The network number.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.#ctor(System.UInt16,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddress"/> class.
            </summary>
            <param name="network">The network.</param>
            <param name="ipAddress">The ip address.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.EncodeNetwork">
            <summary>
            Encodes the network.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.DecodeNetwork(System.Byte[],System.Int32@)">
            <summary>
            Decodes the network.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddress.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.MacBroadcast">
            <summary>
            Gets the mac broadcast.
            </summary>
            <value>
            The mac broadcast.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddress.Broadcast">
            <summary>
            Gets the broadcast.
            </summary>
            <value>
            The broadcast.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAddressBinding">
            <summary>
            BACnet Address Binding
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBinding.DeviceObjectIdentifier">
            <summary>
            Gets or sets the device object identifier.
            </summary>
            <value>
            The device object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBinding.DeviceAddress">
            <summary>
            Gets or sets the device address.
            </summary>
            <value>
            The device address.
            </value>        
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBinding.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>        
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBinding.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <value>
            The end point.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBinding.EndPointString">
            <summary>
            Gets or sets the end point string.
            </summary>
            <value>
            The end point string.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddressBinding"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.#ctor(XAMIO.BACnet.Standard.BACnetAddress,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddressBinding"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="deviceObject">The device object.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.#ctor(System.Net.IPEndPoint,XAMIO.BACnet.Standard.BACnetAddress,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddressBinding" /> class.
            </summary>
            <param name="endpoint">The endpoint.</param>
            <param name="address">The address.</param>
            <param name="deviceObject">The device object.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.#ctor(System.Int32,System.Int32,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddressBinding"/> class.
            </summary>
            <param name="deviceId">The device identifier.</param>
            <param name="port">The port.</param>
            <param name="network">The network.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddressBinding"/> class.
            </summary>
            <param name="ip">The ip.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBinding.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBinding.Broadcast">
            <summary>
            Gets the broadcast.
            </summary>
            <value>
            The broadcast.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAddressBindingArgs">
            <summary>
            BACnet Address Binding Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAddressBindingArgs.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAddressBindingArgs.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetAddressBindingArgs"/> class.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAddressBindingType">
            <summary>
            BACnet address binding type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAddressBindingType.StaticIP">
            <summary>
            The static ip
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAddressBindingType.StaticMAC">
            <summary>
            The static mac
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetAddressBindingType.Dynamic">
            <summary>
            The dynamic
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAssignedAccessRights">
            <summary>
            BACnet Assigned Access Rights
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.AssignedAccessRights">
            <summary>
            Gets or sets the assigned access rights.
            </summary>
            <value>
            The assigned access rights.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.Enable">
            <summary>
            Gets or sets the enable.
            </summary>
            <value>
            The enable.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAssignedAccessRights.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationFactor">
            <summary>
            BACnet Authentication Factor
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.FormatType">
            <summary>
            Gets or sets the type of the format.
            </summary>
            <value>
            The type of the format.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.FormatClass">
            <summary>
            Gets or sets the format class.
            </summary>
            <value>
            The format class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactor.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat">
            <summary>
            BACnet Authentication Factor Format
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.FormatType">
            <summary>
            Gets or sets the type of the format.
            </summary>
            <value>
            The type of the format.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.VendorId">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.VendorFormat">
            <summary>
            Gets or sets the vendor format.
            </summary>
            <value>
            The vendor format.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationFactorFormat.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy">
            <summary>
            BACnet Authentication Policy
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.Policy">
            <summary>
            Gets or sets the policy.
            </summary>
            <value>
            The policy.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.OrderEnforced">
            <summary>
            Gets or sets the order enforced.
            </summary>
            <value>
            The order enforced.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicy">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicy.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicy.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicy.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicy.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicy.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.CredentialDataInput">
            <summary>
            Gets or sets the credential data input.
            </summary>
            <value>
            The credential data input.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetAuthenticationPolicy.AuthenticationPolicyPolicyItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCalendarEntry">
            <summary>
            BACnet Calendar Entry
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetCalendarEntry"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.#ctor(XAMIO.BACnet.Standard.ASN1Date)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetCalendarEntry"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.#ctor(XAMIO.BACnet.Standard.BACnetDateRange)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetCalendarEntry"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.#ctor(XAMIO.BACnet.Standard.BACnetWeekNDay)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetCalendarEntry"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.IsInPeriod(System.DateTime)">
            <summary>
            Determines whether [is in period] [the specified date].
            </summary>
            <param name="date">The date.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCalendarEntry.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetChannelValue">
            <summary>
            BACnet Channel Value
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetChannelValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetClientCOV">
            <summary>
            BACnet Client COV
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetClientCOV.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetClientCOV.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetClientCOV.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetClientCOV.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetClientCOV.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetClientCOV.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetClientCOV.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetClientCOVType">
            <summary>
            BACnet Client COV Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetClientCOVType.RealIncrement">
            <summary>
            The real increment
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetClientCOVType.DefaultIncrement">
            <summary>
            The default increment
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCOVSubscription">
            <summary>
            BACnet COV Subscription
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCOVSubscription.Recipient">
            <summary>
            Gets or sets the recipient.
            </summary>
            <value>
            The recipient.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCOVSubscription.MonitoredPropertyReference">
            <summary>
            Gets or sets the monitored property reference.
            </summary>
            <value>
            The monitored property reference.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCOVSubscription.IssueConfirmedNotifications">
            <summary>
            Gets or sets the issue confirmed notifications.
            </summary>
            <value>
            The issue confirmed notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCOVSubscription.TimeRemaining">
            <summary>
            Gets or sets the time remaining.
            </summary>
            <value>
            The time remaining.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCOVSubscription.CovIncrement">
            <summary>
            Gets or sets the cov increment.
            </summary>
            <value>
            The cov increment.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCOVSubscription.ToString">
            <summary>
            override tostring
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor">
            <summary>
            BACnet Credential Authentication Factor
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.Disable">
            <summary>
            Gets or sets the disable.
            </summary>
            <value>
            The disable.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.AuthenticationFactor">
            <summary>
            Gets or sets the authentication factor.
            </summary>
            <value>
            The authentication factor.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetCredentialAuthenticationFactor.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDailySchedule">
            <summary>
            BACnet Daily Schedule
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDailySchedule.DaySchedule">
            <summary>
            Gets or sets the day schedule.
            </summary>
            <value>
            The day schedule.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDailySchedule"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.#ctor(XAMIO.BACnet.Standard.BACnetTimeValue[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDailySchedule"/> class.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailySchedule.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDailyScheduleExtensions">
            <summary>
            BACnet Daily Schedule Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDailyScheduleExtensions.AddSchedule(XAMIO.BACnet.Standard.BACnetDailySchedule,XAMIO.BACnet.Standard.BACnetTimeValue)">
            <summary>
            Adds the schedule.
            </summary>
            <param name="daily">The daily.</param>
            <param name="timeValue">The time value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDateRange">
            <summary>
            BACnet Date Range
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateRange.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateRange.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDateRange"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.#ctor(XAMIO.BACnet.Standard.ASN1Date,XAMIO.BACnet.Standard.ASN1Date)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDateRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.IsInRange(System.DateTime)">
            <summary>
            Determines whether [is in range] [the specified now].
            </summary>
            <param name="date">The now.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDateRange.IsEmpty">
            <summary>
            Gets if the range is empty
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDateRange.Intersects(System.DateTime,System.Boolean)">
            <summary>
            see if the provided date is in this daterange section
            </summary>
            <param name="date">the date to check</param>
            <param name="IgnoreYear">ignore year in the provided date</param>
            <returns>false if this has wrong config or provided date is outside of this date range, else true</returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDaysOfWeek">
            <summary>
            BACnet Days Of Week
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Monday">
            <summary>
            Gets or sets a value indicating whether [monday].
            </summary>
            <value>
              <c>true</c> if [monday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Tuesday">
            <summary>
            Gets or sets a value indicating whether [tuesday].
            </summary>
            <value>
              <c>true</c> if [tuesday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Wednesday">
            <summary>
            Gets or sets a value indicating whether [wednesday].
            </summary>
            <value>
              <c>true</c> if [wednesday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Thursday">
            <summary>
            Gets or sets a value indicating whether [thursday].
            </summary>
            <value>
              <c>true</c> if [thursday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Friday">
            <summary>
            Gets or sets a value indicating whether [friday].
            </summary>
            <value>
              <c>true</c> if [friday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Saturday">
            <summary>
            Gets or sets a value indicating whether [saturday].
            </summary>
            <value>
              <c>true</c> if [saturday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Sunday">
            <summary>
            Gets or sets a value indicating whether [sunday].
            </summary>
            <value>
              <c>true</c> if [sunday]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDaysOfWeek.IsTodayActive">
            <summary>
            Gets a value indicating whether [is today active].
            </summary>
            <value>
              <c>true</c> if [is today active]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysOfWeek.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDaysOfWeek"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysOfWeek.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDaysOfWeek"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysOfWeek.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDaysOfWeek"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysOfWeek.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDaysOfWeek"/> class.
            </summary>
            <param name="monday">if set to <c>true</c> [monday].</param>
            <param name="tuesday">if set to <c>true</c> [tuesday].</param>
            <param name="wednesday">if set to <c>true</c> [wednesday].</param>
            <param name="thursday">if set to <c>true</c> [thursday].</param>
            <param name="friday">if set to <c>true</c> [friday].</param>
            <param name="saturday">if set to <c>true</c> [saturday].</param>
            <param name="sunday">if set to <c>true</c> [sunday].</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysOfWeek.GetValue(System.DayOfWeek)">
            <summary>
            Gets the value.
            </summary>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysOfWeek.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDestination">
            <summary>
            BACnet Destination
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.ValidDays">
            <summary>
            Gets or sets the valid days.
            </summary>
            <value>
            The valid days.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.FromTime">
            <summary>
            Gets or sets from time.
            </summary>
            <value>
            From time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.ToTime">
            <summary>
            Gets or sets to time.
            </summary>
            <value>
            To time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.Recipient">
            <summary>
            Gets or sets the recipient.
            </summary>
            <value>
            The recipient.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.ProcessIdentifier">
            <summary>
            Gets or sets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.IssueConfirmedNotifications">
            <summary>
            Gets or sets the issue confirmed notifications.
            </summary>
            <value>
            The issue confirmed notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDestination.Transitions">
            <summary>
            Gets or sets the transitions.
            </summary>
            <value>
            The transitions.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.IsActive">
            <summary>
            Determines whether this instance is active.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.IsActive(System.DateTime)">
            <summary>
            Determines whether the specified now is active.
            </summary>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDestination.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference">
            <summary>
            BACnet Device Object Property Reference
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.DeviceIdentifier">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>
            The device identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
            <param name="device">The device.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyReference.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue">
            <summary>
            BACnet Device Object Property Value
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.DeviceIdentifier">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>
            The device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.ArrayIndex">
            <summary>
            Gets or sets the index of the array.
            </summary>
            <value>
            The index of the array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.ValueObject">
            <summary>
            serialze value
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectPropertyValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDeviceObjectReference">
            <summary>
            BACnet Device Object Reference
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.DeviceIdentifier">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>
            The device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDeviceObjectReference.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventLogRecord">
            <summary>
            BACnet Event Log Record
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventLogRecord.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventLogRecord.LogDatum">
            <summary>
            Gets or sets the log datum.
            </summary>
            <value>
            The log datum.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatum">
            <summary>
            Event Log Revcord Log Datum
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatum.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatum.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatum.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatum.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatum.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatumType">
            <summary>
            Event Log Record Log Datum Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatumType.LogStatus">
            <summary>
            The log status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatumType.Notification">
            <summary>
            The notification
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventLogRecord.EventLogRecordLogDatumType.TimeChange">
            <summary>
            The time change
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription">
            <summary>
            BACnet Event Notification Subscription
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.Recipient">
            <summary>
            Gets or sets the recipient.
            </summary>
            <value>
            The recipient.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.ProcessIdentifier">
            <summary>
            Gets or sets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.IssueConfirmedNotifications">
            <summary>
            Gets or sets the issue confirmed notifications.
            </summary>
            <value>
            The issue confirmed notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.TimeRemaining">
            <summary>
            Gets or sets the time remaining.
            </summary>
            <value>
            The time remaining.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventNotificationSubscription.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventParameter">
            <summary>
            BACnet Event parameter
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventParameter.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventParameter.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventParameter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventParameter.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventParameter.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring">
            <summary>
            Event Parameter Change Of Bitstring
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.Bitmask">
            <summary>
            Gets or sets the bitmask.
            </summary>
            <value>
            The bitmask.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.ListOfBitstringValues">
            <summary>
            Gets or sets the list of bitstring values.
            </summary>
            <value>
            The list of bitstring values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfBitstring.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfState">
            <summary>
            Event parameter Change Of State
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfState.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfState.ListOfValues">
            <summary>
            Gets or sets the list of values.
            </summary>
            <value>
            The list of values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfState.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfState.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfState.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfState.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfState.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfValue">
            <summary>
            Event parameter Change Of Value
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfValue.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfValue.CovCriteria">
            <summary>
            Gets or sets the cov criteria.
            </summary>
            <value>
            The cov criteria.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteria">
            <summary>
            Event parameter Change Of Value Cov Criteria
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteria.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteria.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteria.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteria.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteria.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteriaType">
            <summary>
            Event parameter Change Of Value Cov Criteria Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteriaType.Bitmask">
            <summary>
            The bitmask
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.EventParameterChangeOfValue.EventParameterChangeOfValueCovCriteriaType.ReferencedPropertyIncrement">
            <summary>
            The referenced property increment
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterCommandFailure">
            <summary>
            Event Parameter Command Failure
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterCommandFailure.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterCommandFailure.FeedbackPropertyReference">
            <summary>
            Gets or sets the feedback property reference.
            </summary>
            <value>
            The feedback property reference.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterCommandFailure.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterCommandFailure.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterCommandFailure.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterCommandFailure.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterCommandFailure.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterCommandFailure.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterFloatingLimit">
            <summary>
            Event Parameter Floating Limit
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterFloatingLimit.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterFloatingLimit.SetpointReference">
            <summary>
            Gets or sets the setpoint reference.
            </summary>
            <value>
            The setpoint reference.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterFloatingLimit.LowDiffLimit">
            <summary>
            Gets or sets the low difference limit.
            </summary>
            <value>
            The low difference limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterFloatingLimit.HighDiffLimit">
            <summary>
            Gets or sets the high difference limit.
            </summary>
            <value>
            The high difference limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterFloatingLimit.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterFloatingLimit.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterFloatingLimit.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterFloatingLimit.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterFloatingLimit.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterFloatingLimit.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterFloatingLimit.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterOutOfRange">
            <summary>
            Event Parameter Out Of Range
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterOutOfRange.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterOutOfRange.LowLimit">
            <summary>
            Gets or sets the low limit.
            </summary>
            <value>
            The low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterOutOfRange.HighLimit">
            <summary>
            Gets or sets the high limit.
            </summary>
            <value>
            The high limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety">
            <summary>
            Event Parameter Change Of Life Safety
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.ListOfLifeSafetyAlarmValues">
            <summary>
            Gets or sets the list of life safety alarm values.
            </summary>
            <value>
            The list of life safety alarm values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.ListOfAlarmValues">
            <summary>
            Gets or sets the list of alarm values.
            </summary>
            <value>
            The list of alarm values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.ModePropertyReference">
            <summary>
            Gets or sets the mode property reference.
            </summary>
            <value>
            The mode property reference.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfLifeSafety.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterExtended">
            <summary>
            Event Parameter Extended
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterExtended.VendorId">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterExtended.ExtendedEventType">
            <summary>
            Gets or sets the type of the extended event.
            </summary>
            <value>
            The type of the extended event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterExtended.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParameters">
            <summary>
            Event parameter Extended Parameters
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParameters.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParameters.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParameters.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParameters.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParameters.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParametersType">
            <summary>
            Event parameter Extended Parameters Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.EventParameterExtended.EventParameterExtendedParametersType.Reference">
            <summary>
            The reference
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterBufferReady">
            <summary>
            Event Parameter Buffer Ready
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterBufferReady.NotificationThreshold">
            <summary>
            Gets or sets the notification threshold.
            </summary>
            <value>
            The notification threshold.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterBufferReady.PreviousNotificationCount">
            <summary>
            Gets or sets the previous notification count.
            </summary>
            <value>
            The previous notification count.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterBufferReady.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterBufferReady.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterBufferReady.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterBufferReady.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterBufferReady.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterBufferReady.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterUnsignedRange">
            <summary>
            Event Parameter Unsigned Range
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedRange.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedRange.LowLimit">
            <summary>
            Gets or sets the low limit.
            </summary>
            <value>
            The low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedRange.HighLimit">
            <summary>
            Gets or sets the high limit.
            </summary>
            <value>
            The high limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterAccessEvent">
            <summary>
            Event Parameter Access Event
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterAccessEvent.ListOfAccessEvents">
            <summary>
            Gets or sets the list of access events.
            </summary>
            <value>
            The list of access events.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterAccessEvent.AccessEventTimeReference">
            <summary>
            Gets or sets the access event time reference.
            </summary>
            <value>
            The access event time reference.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterAccessEvent.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterAccessEvent.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterAccessEvent.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterAccessEvent.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterAccessEvent.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterAccessEvent.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange">
            <summary>
            Event Parameter Double Out Of Range
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.LowLimit">
            <summary>
            Gets or sets the low limit.
            </summary>
            <value>
            The low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.HighLimit">
            <summary>
            Gets or sets the high limit.
            </summary>
            <value>
            The high limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterDoubleOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange">
            <summary>
            Event Parameter Signed Out Of Range
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.LowLimit">
            <summary>
            Gets or sets the low limit.
            </summary>
            <value>
            The low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.HighLimit">
            <summary>
            Gets or sets the high limit.
            </summary>
            <value>
            The high limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterSignedOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange">
            <summary>
            Event parameter Unsigned Out Of Range
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.LowLimit">
            <summary>
            Gets or sets the low limit.
            </summary>
            <value>
            The low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.HighLimit">
            <summary>
            Gets or sets the high limit.
            </summary>
            <value>
            The high limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterUnsignedOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring">
            <summary>
            Event parameter Change Of Character String
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.ListOfAlarmValues">
            <summary>
            Gets or sets the list of alarm values.
            </summary>
            <value>
            The list of alarm values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfCharacterstring.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags">
            <summary>
            Event parameter Change Of Status Flages
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.TimeDelay">
            <summary>
            Gets or sets the time delay.
            </summary>
            <value>
            The time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.SelectedFlags">
            <summary>
            Gets or sets the selected flags.
            </summary>
            <value>
            The selected flags.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.EventParameterChangeOfStatusFlags.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventParameterType">
            <summary>
            BACnet Event Parameter Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.ChangeOfBitstring">
            <summary>
            The change of bitstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.ChangeOfState">
            <summary>
            The change of state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.ChangeOfValue">
            <summary>
            The change of value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.CommandFailure">
            <summary>
            The command failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.FloatingLimit">
            <summary>
            The floating limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.OutOfRange">
            <summary>
            The out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.ChangeOfLifeSafety">
            <summary>
            The change of life safety
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.Extended">
            <summary>
            The extended
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.BufferReady">
            <summary>
            The buffer ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.UnsignedRange">
            <summary>
            The unsigned range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.AccessEvent">
            <summary>
            The access event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.DoubleOutOfRange">
            <summary>
            The double out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.SignedOutOfRange">
            <summary>
            The signed out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.UnsignedOutOfRange">
            <summary>
            The unsigned out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.ChangeOfCharacterstring">
            <summary>
            The change of characterstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.ChangeOfStatusFlags">
            <summary>
            The change of status flags
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventParameterType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventTransitionBits">
            <summary>
            BACnet Event Transition Bits
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventTransitionBits.ToOffNormal">
            <summary>
            Gets or sets a value indicating whether [to off normal].
            </summary>
            <value>
              <c>true</c> if [to off normal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventTransitionBits.ToFault">
            <summary>
            Gets or sets a value indicating whether [to fault].
            </summary>
            <value>
              <c>true</c> if [to fault]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetEventTransitionBits.ToNormal">
            <summary>
            Gets or sets a value indicating whether [to normal].
            </summary>
            <value>
              <c>true</c> if [to normal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTransitionBits.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetEventTransitionBits"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTransitionBits.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetEventTransitionBits"/> class.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTransitionBits.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetEventTransitionBits"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTransitionBits.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetEventTransitionBits"/> class.
            </summary>
            <param name="toOffNormal">if set to <c>true</c> [to off normal].</param>
            <param name="toFault">if set to <c>true</c> [to fault].</param>
            <param name="toNormal">if set to <c>true</c> [to normal].</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTransitionBits.GetValue(XAMIO.BACnet.Standard.BACnetEventTransition)">
            <summary>
            Gets the value.
            </summary>
            <param name="transition">The transition.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetEventTransitionBits.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetEventTransition">
            <summary>
            BACnet Event Transition
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventTransition.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventTransition.ToOffNormal">
            <summary>
            To off normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventTransition.ToFault">
            <summary>
            To fault
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetEventTransition.ToNormal">
            <summary>
            To normal
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetFaultParameter">
            <summary>
            BACnet Fault Parameter
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetFaultParameter.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetFaultParameter.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetFaultParameter.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetFaultParameter.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetFaultParameter.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring">
            <summary>
            Fault Parameter Fault Character String
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.ListOfFaultValues">
            <summary>
            Gets or sets the list of fault values.
            </summary>
            <value>
            The list of fault values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultCharacterstring.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultExtended.VendorId">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultExtended.ExtendedFaultType">
            <summary>
            Gets or sets the type of the extended fault.
            </summary>
            <value>
            The type of the extended fault.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultExtended.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParameters.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParameters.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParameters.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParameters.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParameters.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Null">
            <summary>
            The null
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Real">
            <summary>
            The real
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Unsigned">
            <summary>
            The unsigned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Boolean">
            <summary>
            The boolean
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Integer">
            <summary>
            The integer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Double">
            <summary>
            The double
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Octet">
            <summary>
            The octet
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.CharacterString">
            <summary>
            The character string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Bitstring">
            <summary>
            The bitstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Enum">
            <summary>
            The enum
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.ObjectIdentifier">
            <summary>
            The object identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.FaultParameterFaultExtended.FaultParameterFaultExtendedParametersType.Reference">
            <summary>
            The reference
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.ListOfFaultValues">
            <summary>
            Gets or sets the list of fault values.
            </summary>
            <value>
            The list of fault values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.ModePropertyReference">
            <summary>
            Gets or sets the mode property reference.
            </summary>
            <value>
            The mode property reference.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultLifeSafety.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultState">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultState.ListOfFaultValues">
            <summary>
            Gets or sets the list of fault values.
            </summary>
            <value>
            The list of fault values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultState.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultState.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultState.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultState.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultState.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.StatusFlagsReference">
            <summary>
            Gets or sets the status flags reference.
            </summary>
            <value>
            The status flags reference.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.FaultParameterFaultStatusFlags.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetFaultParameterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultParameterType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultParameterType.FaultCharacterstring">
            <summary>
            The fault characterstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultParameterType.FaultExtended">
            <summary>
            The fault extended
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultParameterType.FaultLifeSafety">
            <summary>
            The fault life safety
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultParameterType.FaultState">
            <summary>
            The fault state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetFaultParameterType.FaultStatusFlags">
            <summary>
            The fault status flags
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetGroupChannelValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetGroupChannelValue.Channel">
            <summary>
            Gets or sets the channel.
            </summary>
            <value>
            The channel.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetGroupChannelValue.OverridingPriority">
            <summary>
            Gets or sets the overriding priority.
            </summary>
            <value>
            The overriding priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetGroupChannelValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetGroupChannelValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetGroupChannelValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetGroupChannelValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetGroupChannelValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetGroupChannelValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetGroupChannelValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetKeyIdentifier">
            <summary>
            BACnet Key Identifier
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetKeyIdentifier.Algorithm">
            <summary>
            Gets or sets the algorithm.
            </summary>
            <value>
            The algorithm.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetKeyIdentifier.KeyId">
            <summary>
            Gets or sets the key identifier.
            </summary>
            <value>
            The key identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetKeyIdentifier.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetKeyIdentifier.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetKeyIdentifier.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetKeyIdentifier.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetKeyIdentifier.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetKeyIdentifier.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLightingCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLightingCommand.Operation">
            <summary>
            Gets or sets the operation.
            </summary>
            <value>
            The operation.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLightingCommand.TargetLevel">
            <summary>
            Gets or sets the target level.
            </summary>
            <value>
            The target level.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLightingCommand.RampRate">
            <summary>
            Gets or sets the ramp rate.
            </summary>
            <value>
            The ramp rate.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLightingCommand.StepIncrement">
            <summary>
            Gets or sets the step increment.
            </summary>
            <value>
            The step increment.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLightingCommand.FadeTime">
            <summary>
            Gets or sets the fade time.
            </summary>
            <value>
            The fade time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLightingCommand.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLightingCommand.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLightingCommand.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLightingCommand.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLightingCommand.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLightingCommand.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLightingCommand.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLimitEnable">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLimitEnable.LowLimitEnable">
            <summary>
            Gets or sets a value indicating whether [low limit enable].
            </summary>
            <value>
              <c>true</c> if [low limit enable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLimitEnable.HighLimitEnable">
            <summary>
            Gets or sets a value indicating whether [high limit enable].
            </summary>
            <value>
              <c>true</c> if [high limit enable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLimitEnable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLimitEnable"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLimitEnable.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLimitEnable"/> class.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLimitEnable.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLimitEnable"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLimitEnable.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLimitEnable"/> class.
            </summary>
            <param name="lowLimit">if set to <c>true</c> [low limit].</param>
            <param name="highLimit">if set to <c>true</c> [high limit].</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogData">
            <summary>
            BACnet Log Data
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogData.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogData.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogData.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogData.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.LogDataLogData">
            <summary>
            Log Data Log Data
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.LogDataLogData.IsNumeric">
            <summary>
            Gets a value indicating whether [is numeric].
            </summary>
            <value>
              <c>true</c> if [is numeric]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LogDataLogData.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LogDataLogData.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LogDataLogData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LogDataLogData.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.LogDataLogData.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.LogDataLogDataType">
            <summary>
            Lod Data Log Data Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.BooleanValue">
            <summary>
            The boolean value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.RealValue">
            <summary>
            The real value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.EnumValue">
            <summary>
            The enum value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.UnsignedValue">
            <summary>
            The unsigned value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.SignedValue">
            <summary>
            The signed value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.BitstringValue">
            <summary>
            The bitstring value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.NullValue">
            <summary>
            The null value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.Failure">
            <summary>
            The failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.LogDataLogDataType.AnyValue">
            <summary>
            Any value
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogDataType">
            <summary>
            BACnet Log Data Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDataType.LogStatus">
            <summary>
            The log status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDataType.LogData">
            <summary>
            The log data
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDataType.TimeChange">
            <summary>
            The time change
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogMultipleRecord">
            <summary>
            BACnet Log Multiple Record
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.LogData">
            <summary>
            Gets or sets the log data.
            </summary>
            <value>
            The log data.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogMultipleRecord.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogRecord">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogRecord.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
            <value>
            The timestamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogRecord.LogDatum">
            <summary>
            Gets or sets the log datum.
            </summary>
            <value>
            The log datum.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogRecord.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogRecord.SequenceNumber">
            <summary>
            Gets or sets the sequence number.
            </summary>
            <value>
            The sequence number.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogRecord"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.#ctor(XAMIO.BACnet.Standard.BACnetDateTime,XAMIO.BACnet.Standard.BACnetLogDatum,System.UInt32,XAMIO.BACnet.Standard.BACnetStatusFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogRecord"/> class.
            </summary>
            <param name="timeStamp">The time stamp.</param>
            <param name="datum">The datum.</param>
            <param name="sequenceNumber">The sequence number.</param>
            <param name="statusFlags">The status flags.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.#ctor(System.DateTime,XAMIO.BACnet.Standard.BACnetLogDatum,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogRecord"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="datum">The datum.</param>
            <param name="sequenceNumber">The sequence number.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.#ctor(System.String,XAMIO.BACnet.Standard.BACnetLogDatum)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogRecord"/> class.
            </summary>
            <param name="timeStamp">The time stamp.</param>
            <param name="datum">The datum.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogDatum">
            <summary>
            BACnet Log Record Datum
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogDatum.IsNumeric">
            <summary>
            Gets a value indicating whether [is numeric].
            </summary>
            <value>
              <c>true</c> if [is numeric]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogDatum"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.#ctor(XAMIO.BACnet.Standard.BACnetLogStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogDatum"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.#ctor(XAMIO.BACnet.Standard.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogDatum"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogDatum"/> class.
            </summary>
            <param name="newTime"></param>
            <param name="oldTime"></param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.#ctor(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogDatum"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogDatum.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogDatumType">
            <summary>
            BACnet Log Record Datum Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.LogStatus">
            <summary>
            The log status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.BooleanValue">
            <summary>
            The boolean value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.RealValue">
            <summary>
            The real value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.EnumValue">
            <summary>
            The enum value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.UnsignedValue">
            <summary>
            The unsigned value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.SignedValue">
            <summary>
            The signed value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.BitstringValue">
            <summary>
            The bitstring value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.NullValue">
            <summary>
            The null value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.Failure">
            <summary>
            The failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.TimeChange">
            <summary>
            The time change
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetLogDatumType.AnyValue">
            <summary>
            Any value
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetLogStatus">
            <summary>
            BACnet Log Status
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogStatus.LogDisabled">
            <summary>
            Gets or sets a value indicating whether [log disabled].
            </summary>
            <value>
              <c>true</c> if [log disabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogStatus.BufferPurged">
            <summary>
            Gets or sets a value indicating whether [buffer purged].
            </summary>
            <value>
              <c>true</c> if [buffer purged]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetLogStatus.LogInterrupted">
            <summary>
            Gets or sets a value indicating whether [log interrupted].
            </summary>
            <value>
              <c>true</c> if [log interrupted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogStatus"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogStatus.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogStatus"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogStatus.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogStatus"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetLogStatus.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetLogStatus"/> class.
            </summary>
            <param name="logDisabled">if set to <c>true</c> [log disabled].</param>
            <param name="bufferPurged">if set to <c>true</c> [buffer purged].</param>
            <param name="logInterrupted">if set to <c>true</c> [log interrupted].</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.PortId">
            <summary>
            Gets or sets the port identifier.
            </summary>
            <value>
            The port identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.SecurityLevel">
            <summary>
            Gets or sets the security level.
            </summary>
            <value>
            The security level.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNetworkSecurityPolicy.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetNotificationParameters">
            <summary>
            BACnet Notification Parameter
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetNotificationParameters"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.#ctor(XAMIO.BACnet.Standard.BACnetNotificationParametersType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetNotificationParameters"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.GetParameterType(XAMIO.BACnet.Standard.BACnetEventType)">
            <summary>
            Gets the type of the parameter.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.Create(XAMIO.BACnet.IBACnetEventInitiatingObjects,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.BACnetStatusFlags,XAMIO.BACnet.Standard.BACnetEventType)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="presentValue">The present value.</param>
            <param name="statusFlags">The status flags.</param>
            <param name="eventType">Type of the event.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">Create  + prm.Type +  is not implemented!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetNotificationParameters.ToString">
            <summary>
            to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetNotificationParametersType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfBitstring">
            <summary>
            The change of bitstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfState">
            <summary>
            The change of state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfValue">
            <summary>
            The change of value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.CommandFailure">
            <summary>
            The command failure
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.FloatingLimit">
            <summary>
            The floating limit
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.OutOfRange">
            <summary>
            The out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ComplexEventType">
            <summary>
            The complex event type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfLifeSafety">
            <summary>
            The change of life safety
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.Extended">
            <summary>
            The extended
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.BufferReady">
            <summary>
            The buffer ready
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.UnsignedRange">
            <summary>
            The unsigned range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.AccessEvent">
            <summary>
            The access event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.DoubleOutOfRange">
            <summary>
            The double out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.SignedOutOfRange">
            <summary>
            The signed out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.UnsignedOutOfRange">
            <summary>
            The unsigned out of range
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfCharacterstring">
            <summary>
            The change of characterstring
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfStatusFlags">
            <summary>
            The change of status flags
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.ChangeOfReliability">
            <summary>
            The change of reliability
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetNotificationParametersType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersComplexValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersComplexValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersComplexValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersComplexValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersComplexValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersComplexValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersComplexValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.ReferencedBitstring">
            <summary>
            Gets or sets the referenced bitstring.
            </summary>
            <value>
            The referenced bitstring.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfBitstring.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfState">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.NewState">
            <summary>
            Gets or sets the new state.
            </summary>
            <value>
            The new state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfState.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NewValue">
            <summary>
            Gets or sets the new value.
            </summary>
            <value>
            The new value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValue.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValue.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValueType.ChangedBits">
            <summary>
            The changed bits
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.NotificationParametersChangeOfValue.NotificationParametersChangeOfValueNewValueType.ChangedValue">
            <summary>
            The changed value
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersCommandFailure">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.#ctor">
            <summary>
            for xml serialization
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.#ctor(XAMIO.BACnet.Standard.BACnetObjectType)">
            <summary>
            default constructor
            </summary>
            <param name="parentObject"></param>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.CommandValue">
            <summary>
            Gets or sets the command value.
            </summary>
            <value>
            The command value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.FeedbackValue">
            <summary>
            Gets or sets the feedback value.
            </summary>
            <value>
            The feedback value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersCommandFailure.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.ReferenceValue">
            <summary>
            Gets or sets the reference value.
            </summary>
            <value>
            The reference value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.SetpointValue">
            <summary>
            Gets or sets the setpoint value.
            </summary>
            <value>
            The setpoint value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.ErrorLimit">
            <summary>
            Gets or sets the error limit.
            </summary>
            <value>
            The error limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersFloatingLimit.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersOutOfRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.ExceedingValue">
            <summary>
            Gets or sets the exceeding value.
            </summary>
            <value>
            The exceeding value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.ExceededLimit">
            <summary>
            Gets or sets the exceeded limit.
            </summary>
            <value>
            The exceeded limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersOutOfRange.ToString">
            <summary>
            to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.NewState">
            <summary>
            Gets or sets the new state.
            </summary>
            <value>
            The new state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.NewMode">
            <summary>
            Gets or sets the new mode.
            </summary>
            <value>
            The new mode.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.OperationExpected">
            <summary>
            Gets or sets the operation expected.
            </summary>
            <value>
            The operation expected.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfLifeSafety.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersExtended">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersExtended.VendorId">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersExtended.ExtendedEventType">
            <summary>
            Gets or sets the type of the extended event.
            </summary>
            <value>
            The type of the extended event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersExtended.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParameters.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParametersType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.NotificationParametersExtended.NotificationParametersExtendedParametersType.PropertyValue">
            <summary>
            The property value
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersBufferReady">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersBufferReady.BufferProperty">
            <summary>
            Gets or sets the buffer property.
            </summary>
            <value>
            The buffer property.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersBufferReady.PreviousNotification">
            <summary>
            Gets or sets the previous notification.
            </summary>
            <value>
            The previous notification.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersBufferReady.CurrentNotification">
            <summary>
            Gets or sets the current notification.
            </summary>
            <value>
            The current notification.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersBufferReady.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersBufferReady.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersBufferReady.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersBufferReady.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersBufferReady.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersBufferReady.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.ExceedingValue">
            <summary>
            Gets or sets the exceeding value.
            </summary>
            <value>
            The exceeding value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.ExceededLimit">
            <summary>
            Gets or sets the exceeded limit.
            </summary>
            <value>
            The exceeded limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersAccessEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.AccessEvent">
            <summary>
            Gets or sets the access event.
            </summary>
            <value>
            The access event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.AccessEventTag">
            <summary>
            Gets or sets the access event tag.
            </summary>
            <value>
            The access event tag.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.AccessEventTime">
            <summary>
            Gets or sets the access event time.
            </summary>
            <value>
            The access event time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.AccessCredential">
            <summary>
            Gets or sets the access credential.
            </summary>
            <value>
            The access credential.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.AuthenticationFactor">
            <summary>
            Gets or sets the authentication factor.
            </summary>
            <value>
            The authentication factor.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersAccessEvent.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.ExceedingValue">
            <summary>
            Gets or sets the exceeding value.
            </summary>
            <value>
            The exceeding value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.ExceededLimit">
            <summary>
            Gets or sets the exceeded limit.
            </summary>
            <value>
            The exceeded limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersDoubleOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.ExceedingValue">
            <summary>
            Gets or sets the exceeding value.
            </summary>
            <value>
            The exceeding value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.ExceededLimit">
            <summary>
            Gets or sets the exceeded limit.
            </summary>
            <value>
            The exceeded limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersSignedOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.ExceedingValue">
            <summary>
            Gets or sets the exceeding value.
            </summary>
            <value>
            The exceeding value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.Deadband">
            <summary>
            Gets or sets the deadband.
            </summary>
            <value>
            The deadband.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.ExceededLimit">
            <summary>
            Gets or sets the exceeded limit.
            </summary>
            <value>
            The exceeded limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersUnsignedOutOfRange.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.ChangedValue">
            <summary>
            Gets or sets the changed value.
            </summary>
            <value>
            The changed value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.AlarmValue">
            <summary>
            Gets or sets the alarm value.
            </summary>
            <value>
            The alarm value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfCharacterstring.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.PresentValue">
            <summary>
            Gets or sets the present value.
            </summary>
            <value>
            The present value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.ReferencedFlags">
            <summary>
            Gets or sets the referenced flags.
            </summary>
            <value>
            The referenced flags.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfStatusFlags.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.Reliability">
            <summary>
            Gets or sets the reliability.
            </summary>
            <value>
            The reliability.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.StatusFlags">
            <summary>
            Gets or sets the status flags.
            </summary>
            <value>
            The status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.PropertyValues">
            <summary>
            Gets or sets the property values.
            </summary>
            <value>
            The property values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.NotificationParametersChangeOfReliability.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetObjectPropertyReference">
            <summary>
            BACnet Object Property Reference
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectPropertyReference"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectPropertyReference"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.#ctor(XAMIO.BACnet.Standard.BACnetObjectType,System.Int32,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectPropertyReference"/> class.
            </summary>
            <param name="objectType">Type of the object.</param>
            <param name="objectInstance">The object instance.</param>
            <param name="prop">The property.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.GetKey">
            <summary>
            Gets the key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectPropertyReference.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetObjectTypesSupported">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AnalogInput">
            <summary>
            Gets or sets a value indicating whether [analog input].
            </summary>
            <value>
              <c>true</c> if [analog input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AnalogOutput">
            <summary>
            Gets or sets a value indicating whether [analog output].
            </summary>
            <value>
              <c>true</c> if [analog output]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AnalogValue">
            <summary>
            Gets or sets a value indicating whether [analog value].
            </summary>
            <value>
              <c>true</c> if [analog value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.BinaryInput">
            <summary>
            Gets or sets a value indicating whether [binary input].
            </summary>
            <value>
              <c>true</c> if [binary input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.BinaryOutput">
            <summary>
            Gets or sets a value indicating whether [binary output].
            </summary>
            <value>
              <c>true</c> if [binary output]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.BinaryValue">
            <summary>
            Gets or sets a value indicating whether [binary value].
            </summary>
            <value>
              <c>true</c> if [binary value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Calendar">
            <summary>
            Gets or sets a value indicating whether [calendar].
            </summary>
            <value>
              <c>true</c> if [calendar]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Command">
            <summary>
            Gets or sets a value indicating whether [command].
            </summary>
            <value>
              <c>true</c> if [command]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Device">
            <summary>
            Gets or sets a value indicating whether [device].
            </summary>
            <value>
              <c>true</c> if [device]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.EventEnrollment">
            <summary>
            Gets or sets a value indicating whether [event enrollment].
            </summary>
            <value>
              <c>true</c> if [event enrollment]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.File">
            <summary>
            Gets or sets a value indicating whether [file].
            </summary>
            <value>
              <c>true</c> if [file]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Group">
            <summary>
            Gets or sets a value indicating whether [group].
            </summary>
            <value>
              <c>true</c> if [group]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Loop">
            <summary>
            Gets or sets a value indicating whether [loop].
            </summary>
            <value>
              <c>true</c> if [loop]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.MultiStateInput">
            <summary>
            Gets or sets a value indicating whether [multi state input].
            </summary>
            <value>
              <c>true</c> if [multi state input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.MultiStateOutput">
            <summary>
            Gets or sets a value indicating whether [multi state output].
            </summary>
            <value>
              <c>true</c> if [multi state output]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.NotificationClass">
            <summary>
            Gets or sets a value indicating whether [notification class].
            </summary>
            <value>
              <c>true</c> if [notification class]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Program">
            <summary>
            Gets or sets a value indicating whether [program].
            </summary>
            <value>
              <c>true</c> if [program]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Schedule">
            <summary>
            Gets or sets a value indicating whether [schedule].
            </summary>
            <value>
              <c>true</c> if [schedule]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Averaging">
            <summary>
            Gets or sets a value indicating whether [averaging].
            </summary>
            <value>
              <c>true</c> if [averaging]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.MultiStateValue">
            <summary>
            Gets or sets a value indicating whether [multi state value].
            </summary>
            <value>
              <c>true</c> if [multi state value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.TrendLog">
            <summary>
            Gets or sets a value indicating whether [trend log].
            </summary>
            <value>
              <c>true</c> if [trend log]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.LifeSafetyPoint">
            <summary>
            Gets or sets a value indicating whether [life safety point].
            </summary>
            <value>
              <c>true</c> if [life safety point]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.LifeSafetyZone">
            <summary>
            Gets or sets a value indicating whether [life safety zone].
            </summary>
            <value>
              <c>true</c> if [life safety zone]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Accumulator">
            <summary>
            Gets or sets a value indicating whether [accumulator].
            </summary>
            <value>
              <c>true</c> if [accumulator]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.PulseConverter">
            <summary>
            Gets or sets a value indicating whether [pulse converter].
            </summary>
            <value>
              <c>true</c> if [pulse converter]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.EventLog">
            <summary>
            Gets or sets a value indicating whether [event log].
            </summary>
            <value>
              <c>true</c> if [event log]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.GlobalGroup">
            <summary>
            Gets or sets a value indicating whether [global group].
            </summary>
            <value>
              <c>true</c> if [global group]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.TrendLogMultiple">
            <summary>
            Gets or sets a value indicating whether [trend log multiple].
            </summary>
            <value>
              <c>true</c> if [trend log multiple]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.LoadControl">
            <summary>
            Gets or sets a value indicating whether [load control].
            </summary>
            <value>
              <c>true</c> if [load control]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.StructuredView">
            <summary>
            Gets or sets a value indicating whether [structured view].
            </summary>
            <value>
              <c>true</c> if [structured view]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AccessDoor">
            <summary>
            Gets or sets a value indicating whether [access door].
            </summary>
            <value>
              <c>true</c> if [access door]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AccessCredential">
            <summary>
            Gets or sets a value indicating whether [access credential].
            </summary>
            <value>
              <c>true</c> if [access credential]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AccessPoint">
            <summary>
            Gets or sets a value indicating whether [access point].
            </summary>
            <value>
              <c>true</c> if [access point]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AccessRights">
            <summary>
            Gets or sets a value indicating whether [access rights].
            </summary>
            <value>
              <c>true</c> if [access rights]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AccessUser">
            <summary>
            Gets or sets a value indicating whether [access user].
            </summary>
            <value>
              <c>true</c> if [access user]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AccessZone">
            <summary>
            Gets or sets a value indicating whether [access zone].
            </summary>
            <value>
              <c>true</c> if [access zone]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.CredentialDataInput">
            <summary>
            Gets or sets a value indicating whether [credential data input].
            </summary>
            <value>
              <c>true</c> if [credential data input]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.NetworkSecurity">
            <summary>
            Gets or sets a value indicating whether [network security].
            </summary>
            <value>
              <c>true</c> if [network security]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.BitstringValue">
            <summary>
            Gets or sets a value indicating whether [bitstring value].
            </summary>
            <value>
              <c>true</c> if [bitstring value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.CharacterstringValue">
            <summary>
            Gets or sets a value indicating whether [characterstring value].
            </summary>
            <value>
              <c>true</c> if [characterstring value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.DatePatternValue">
            <summary>
            Gets or sets a value indicating whether [date pattern value].
            </summary>
            <value>
              <c>true</c> if [date pattern value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.DateValue">
            <summary>
            Gets or sets a value indicating whether [date value].
            </summary>
            <value>
              <c>true</c> if [date value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.DatetimePatternValue">
            <summary>
            Gets or sets a value indicating whether [datetime pattern value].
            </summary>
            <value>
            <c>true</c> if [datetime pattern value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.DatetimeValue">
            <summary>
            Gets or sets a value indicating whether [datetime value].
            </summary>
            <value>
              <c>true</c> if [datetime value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.IntegerValue">
            <summary>
            Gets or sets a value indicating whether [integer value].
            </summary>
            <value>
              <c>true</c> if [integer value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.LargeAnalogValue">
            <summary>
            Gets or sets a value indicating whether [large analog value].
            </summary>
            <value>
              <c>true</c> if [large analog value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.OctetstringValue">
            <summary>
            Gets or sets a value indicating whether [octetstring value].
            </summary>
            <value>
              <c>true</c> if [octetstring value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.PositiveIntegerValue">
            <summary>
            Gets or sets a value indicating whether [positive integer value].
            </summary>
            <value>
            <c>true</c> if [positive integer value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.TimePatternValue">
            <summary>
            Gets or sets a value indicating whether [time pattern value].
            </summary>
            <value>
              <c>true</c> if [time pattern value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.TimeValue">
            <summary>
            Gets or sets a value indicating whether [time value].
            </summary>
            <value>
              <c>true</c> if [time value]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.NotificationForwarder">
            <summary>
            Gets or sets a value indicating whether [notification forwarder].
            </summary>
            <value>
            <c>true</c> if [notification forwarder]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.AlertEnrollment">
            <summary>
            Gets or sets a value indicating whether [alert enrollment].
            </summary>
            <value>
              <c>true</c> if [alert enrollment]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Channel">
            <summary>
            Gets or sets a value indicating whether [channel].
            </summary>
            <value>
              <c>true</c> if [channel]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.LightingOutput">
            <summary>
            Gets or sets a value indicating whether [lighting output].
            </summary>
            <value>
              <c>true</c> if [lighting output]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectTypesSupported"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectTypesSupported"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetObjectTypesSupported"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetObjectTypesSupported.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterString">
            <summary>
            BACnet Optional Character String
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterString"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.#ctor(XAMIO.BACnet.Standard.ASN1Null)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.#ctor(XAMIO.BACnet.Standard.ASN1CharacterString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterString"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterString.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterStringType">
            <summary>
            BACnet Optional Character String Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetOptionalCharacterStringType.Null">
            <summary>
            The null
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetOptionalCharacterStringType.CharacterString">
            <summary>
            The character string
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetOptionalCharacterStringComparer">
            <summary>
            BACnet Optional Character String Comparer
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterStringComparer.IsMatch(XAMIO.BACnet.Standard.ASN1CharacterString,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetOptionalCharacterString},XAMIO.BACnet.Standard.BACnetOptionalCharacterString@)">
            <summary>
            Determines whether the specified current is match.
            </summary>
            <param name="current">The current.</param>
            <param name="values">The values.</param>
            <param name="machtingvalue">The matching values.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetOptionalCharacterStringComparer.IsMatch(XAMIO.BACnet.Standard.ASN1CharacterString,XAMIO.BACnet.Standard.BACnetOptionalCharacterString)">
            <summary>
            Determines whether the specified first is match.
            </summary>
            <param name="first">The first.</param>
            <param name="secound">The secound.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPDUFlags">
            <summary>
            BACnet PDU Flags
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUFlags.IsServer">
            <summary>
            !! Abort Only !!
            This parameter shall be TRUE when the Abort PDU is sent by a server. This parameter shall be FALSE when the Abort PDU is
            sent by a client.
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUFlags.IsSegmented">
            <summary>
            Gets a value indicating whether this instance is segmented.
            </summary>
            <value>
            <c>true</c> if this instance is segmented; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUFlags.MoreFollows">
            <summary>
            Gets a value indicating whether [more follows].
            </summary>
            <value>
              <c>true</c> if [more follows]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUFlags.SegmentedResponseAccepted">
            <summary>
            Gets a value indicating whether [segmented response accepted].
            </summary>
            <value>
            <c>true</c> if [segmented response accepted]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUFlags.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPDUFlags" /> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUFlags.FromByte(System.Byte)">
            <summary>
            Froms the byte.
            </summary>
            <param name="Value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUFlags.Encode(XAMIO.BACnet.Standard.BACnetPDUType)">
            <summary>
            Encodes this instance.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUFlags.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUFlags.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPDUFlags.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPDUNetworkFlags">
            <summary>
            BACnet PDU Network Flags
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUNetworkFlags.DestinationPresent">
            <summary>
            Gets or sets a value indicating whether [destination present].
            </summary>
            <value>
              <c>true</c> if [destination present]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUNetworkFlags.SourcePresent">
            <summary>
            Gets or sets a value indicating whether [source present].
            </summary>
            <value>
              <c>true</c> if [source present]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUNetworkFlags.ExpectingReplay">
            <summary>
            Gets or sets a value indicating whether [expecting replay].
            </summary>
            <value>
              <c>true</c> if [expecting replay]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPDUNetworkFlags.Broadcast">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:XAMIO.BACnet.Standard.BACnetPDUNetworkFlags" /> is broadcast.
            </summary>
            <value>
              <c>true</c> if broadcast; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPortPermission">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPortPermission.PortId">
            <summary>
            Gets or sets the port identifier.
            </summary>
            <value>
            The port identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPortPermission.Enabled">
            <summary>
            Gets or sets the enabled.
            </summary>
            <value>
            The enabled.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPortPermission.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPortPermission.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPortPermission.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPortPermission.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPortPermission.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPortPermission.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPrescale">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPrescale.Multiplier">
            <summary>
            Gets or sets the multiplier.
            </summary>
            <value>
            The multiplier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPrescale.ModuloDivide">
            <summary>
            Gets or sets the modulo divide.
            </summary>
            <value>
            The modulo divide.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPrescale.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPrescale.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPrescale.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPrescale.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPrescale.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPrescale.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPriorityArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPriorityArray"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityArray.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPriorityArray"/> class.
            </summary>
            <param name="values">The values.</param>
            <exception cref="T:System.InvalidOperationException">
            Lenght of 16 expected
            or
            Invalid Datatype
            </exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPriorityValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPriorityValue"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.#ctor(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPriorityValue"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPriorityValue.SetType">
            <summary>
            Sets the type.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPriorityValueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Null">
            <summary>
            The null
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Real">
            <summary>
            The real
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Enumerated">
            <summary>
            The enumerated
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Unsigned">
            <summary>
            The unsigned
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Boolean">
            <summary>
            The boolean
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Signed">
            <summary>
            The signed
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Double">
            <summary>
            The double
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.CharacterString">
            <summary>
            The character string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.OctetString">
            <summary>
            The octet string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.BitString">
            <summary>
            The bit string
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Objectid">
            <summary>
            The objectid
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.ConstructedValue">
            <summary>
            The constructed value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPriorityValueType.Datetime">
            <summary>
            The datetime
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetProcessIdSelection">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetProcessIdSelection.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetProcessIdSelection.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetProcessIdSelection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetProcessIdSelection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetProcessIdSelection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetProcessIdSelectionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProcessIdSelectionType.ProcessIdentifier">
            <summary>
            The process identifier
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetProcessIdSelectionType.NullValu">
            <summary>
            The null valu
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyAccessResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.DeviceIdentifier">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>
            The device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.AccessResult">
            <summary>
            Gets or sets the access result.
            </summary>
            <value>
            The access result.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResult.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResult.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResult.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResult.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResult.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResultType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResultType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResultType.PropertyValue">
            <summary>
            The property value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyAccessResult.PropertyAccessResultAccessResultType.PropertyAccessError">
            <summary>
            The property access error
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyReference.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyReference.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPropertyReference"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.#ctor(XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPropertyReference"/> class.
            </summary>
            <param name="prop">The property.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.#ctor(XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPropertyReference"/> class.
            </summary>
            <param name="prop">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyReference.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyStates">
            <summary>
            BACnet Property States
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.GetPropertyStateType(System.Type)">
            <summary>
            Gets the type of the property state.
            </summary>
            <param name="valueType">Type of the value.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyStates.Create(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Creates the specified present value.
            </summary>
            <param name="presentValue">The present value.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyStatesType">
            <summary>
            BACnet Property States Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.BooleanValue">
            <summary>
            The boolean value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.BinaryValue">
            <summary>
            The binary value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.EventType">
            <summary>
            The event type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.Polarity">
            <summary>
            The polarity
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.ProgramChange">
            <summary>
            The program change
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.ProgramState">
            <summary>
            The program state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.ReasonForHalt">
            <summary>
            The reason for halt
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.Reliability">
            <summary>
            The reliability
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.State">
            <summary>
            The state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.SystemStatus">
            <summary>
            The system status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.Units">
            <summary>
            The units
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.UnsignedValue">
            <summary>
            The unsigned value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LifeSafetyMode">
            <summary>
            The life safety mode
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LifeSafetyState">
            <summary>
            The life safety state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.RestartReason">
            <summary>
            The restart reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.DoorAlarmState">
            <summary>
            The door alarm state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.Action">
            <summary>
            The action
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.DoorSecuredStatus">
            <summary>
            The door secured status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.DoorStatus">
            <summary>
            The door status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.DoorValue">
            <summary>
            The door value
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.FileAccessMethod">
            <summary>
            The file access method
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LockStatus">
            <summary>
            The lock status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LifeSafetyOperation">
            <summary>
            The life safety operation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.Maintenance">
            <summary>
            The maintenance
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.NodeType">
            <summary>
            The node type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.NotifyType">
            <summary>
            The notify type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.SecurityLevel">
            <summary>
            The security level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.ShedState">
            <summary>
            The shed state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.SilencedState">
            <summary>
            The silenced state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.AccessEvent">
            <summary>
            The access event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.ZoneOccupancyState">
            <summary>
            The zone occupancy state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.AccessCredentialDisableReason">
            <summary>
            The access credential disable reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.AccessCredentialDisable">
            <summary>
            The access credential disable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.AuthenticationStatus">
            <summary>
            The authentication status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.BackupState">
            <summary>
            The backup state
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.WriteStatus">
            <summary>
            The write status
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LightingInProgress">
            <summary>
            The lighting in progress
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LightingOperation">
            <summary>
            The lighting operation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetPropertyStatesType.LightingTransition">
            <summary>
            The lighting transition
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetPropertyValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyValue.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyValue.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyValue.ValueObject">
            <summary>
            serialze value
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetPropertyValue.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPropertyValue"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.#ctor(XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Nullable{System.UInt32})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetPropertyValue"/> class.
            </summary>
            <param name="propertyIdentifier">The property identifier.</param>
            <param name="value">The value.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetPropertyValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetRecipient">
            <summary>
            BACnet Recipient
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetRecipient"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetRecipient"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.#ctor(XAMIO.BACnet.Standard.BACnetAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetRecipient"/> class.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipient.ToString">
            <summary>
            override tostring method
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetRecipientType">
            <summary>
            BACnet Recipient Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRecipientType.Device">
            <summary>
            The device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetRecipientType.Address">
            <summary>
            The address
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetRecipientProcess">
            <summary>
            BACnet Recipient Process
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetRecipientProcess.Recipient">
            <summary>
            Gets or sets the recipient.
            </summary>
            <value>
            The recipient.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetRecipientProcess.ProcessIdentifier">
            <summary>
            Gets or sets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipientProcess.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipientProcess.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipientProcess.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipientProcess.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipientProcess.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetRecipientProcess.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetResultFlags">
            <summary>
            BACnet Result Flahs
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetResultFlags.FirstItem">
            <summary>
            Gets or sets a value indicating whether [first item].
            </summary>
            <value>
              <c>true</c> if [first item]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetResultFlags.LastItem">
            <summary>
            Gets or sets a value indicating whether [last item].
            </summary>
            <value>
              <c>true</c> if [last item]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetResultFlags.MoreItems">
            <summary>
            Gets or sets a value indicating whether [more items].
            </summary>
            <value>
              <c>true</c> if [more items]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetResultFlags.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetResultFlags"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetResultFlags.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetResultFlags"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetResultFlags.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetResultFlags"/> class.
            </summary>
            <param name="firstItem">if set to <c>true</c> [first item].</param>
            <param name="lastItem">if set to <c>true</c> [last item].</param>
            <param name="moreItems">if set to <c>true</c> [more items].</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetScale">
            <summary>
            BACnet Scale
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetScale"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.#ctor(XAMIO.BACnet.Standard.ASN1Integer)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetScale"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.#ctor(XAMIO.BACnet.Standard.ASN1Real)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetScale"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetScale.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetScaleType">
            <summary>
            BACnet Scale Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetScaleType.FloatScale">
            <summary>
            The float scale
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetScaleType.IntegerScale">
            <summary>
            The integer scale
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSecurityKeySet">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSecurityKeySet.KeyRevision">
            <summary>
            Gets or sets the key revision.
            </summary>
            <value>
            The key revision.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSecurityKeySet.ActivationTime">
            <summary>
            Gets or sets the activation time.
            </summary>
            <value>
            The activation time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSecurityKeySet.ExpirationTime">
            <summary>
            Gets or sets the expiration time.
            </summary>
            <value>
            The expiration time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSecurityKeySet.KeyIds">
            <summary>
            Gets or sets the key ids.
            </summary>
            <value>
            The key ids.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSecurityKeySet.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSecurityKeySet.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSecurityKeySet.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSecurityKeySet.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSecurityKeySet.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSecurityKeySet.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetServicesSupported">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.AcknowledgeAlarm">
            <summary>
            Gets or sets a value indicating whether [acknowledge alarm].
            </summary>
            <value>
              <c>true</c> if [acknowledge alarm]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ConfirmedCOVNotification">
            <summary>
            Gets or sets a value indicating whether [confirmed cov notification].
            </summary>
            <value>
            <c>true</c> if [confirmed cov notification]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ConfirmedEventNotification">
            <summary>
            Gets or sets a value indicating whether [confirmed event notification].
            </summary>
            <value>
            <c>true</c> if [confirmed event notification]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.GetAlarmSummary">
            <summary>
            Gets or sets a value indicating whether [get alarm summary].
            </summary>
            <value>
              <c>true</c> if [get alarm summary]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.GetEnrollmentSummary">
            <summary>
            Gets or sets a value indicating whether [get enrollment summary].
            </summary>
            <value>
            <c>true</c> if [get enrollment summary]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.SubscribeCOV">
            <summary>
            Gets or sets a value indicating whether [subscribe cov].
            </summary>
            <value>
              <c>true</c> if [subscribe cov]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.AtomicReadFile">
            <summary>
            Gets or sets a value indicating whether [atomic read file].
            </summary>
            <value>
              <c>true</c> if [atomic read file]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.AtomicWriteFile">
            <summary>
            Gets or sets a value indicating whether [atomic write file].
            </summary>
            <value>
              <c>true</c> if [atomic write file]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.AddListElement">
            <summary>
            Gets or sets a value indicating whether [add list element].
            </summary>
            <value>
              <c>true</c> if [add list element]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.RemoveListElement">
            <summary>
            Gets or sets a value indicating whether [remove list element].
            </summary>
            <value>
              <c>true</c> if [remove list element]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.CreateObject">
            <summary>
            Gets or sets a value indicating whether [create object].
            </summary>
            <value>
              <c>true</c> if [create object]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.DeleteObject">
            <summary>
            Gets or sets a value indicating whether [delete object].
            </summary>
            <value>
              <c>true</c> if [delete object]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ReadProperty">
            <summary>
            Gets or sets a value indicating whether [read property].
            </summary>
            <value>
              <c>true</c> if [read property]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ReadPropertyMultiple">
            <summary>
            Gets or sets a value indicating whether [read property multiple].
            </summary>
            <value>
            <c>true</c> if [read property multiple]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.WriteProperty">
            <summary>
            Gets or sets a value indicating whether [write property].
            </summary>
            <value>
              <c>true</c> if [write property]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.WritePropertyMultiple">
            <summary>
            Gets or sets a value indicating whether [write property multiple].
            </summary>
            <value>
            <c>true</c> if [write property multiple]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.DeviceCommunicationControl">
            <summary>
            Gets or sets a value indicating whether [device communication control].
            </summary>
            <value>
            <c>true</c> if [device communication control]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ConfirmedPrivateTransfer">
            <summary>
            Gets or sets a value indicating whether [confirmed private transfer].
            </summary>
            <value>
            <c>true</c> if [confirmed private transfer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ConfirmedTextMessage">
            <summary>
            Gets or sets a value indicating whether [confirmed text message].
            </summary>
            <value>
            <c>true</c> if [confirmed text message]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ReinitializeDevice">
            <summary>
            Gets or sets a value indicating whether [reinitialize device].
            </summary>
            <value>
              <c>true</c> if [reinitialize device]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.VtOpen">
            <summary>
            Gets or sets a value indicating whether [vt open].
            </summary>
            <value>
              <c>true</c> if [vt open]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.VtClose">
            <summary>
            Gets or sets a value indicating whether [vt close].
            </summary>
            <value>
              <c>true</c> if [vt close]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.VtData">
            <summary>
            Gets or sets a value indicating whether [vt data].
            </summary>
            <value>
              <c>true</c> if [vt data]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.IAm">
            <summary>
            Gets or sets a value indicating whether [i am].
            </summary>
            <value>
              <c>true</c> if [i am]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.IHave">
            <summary>
            Gets or sets a value indicating whether [i have].
            </summary>
            <value>
              <c>true</c> if [i have]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.UnconfirmedCOVNotification">
            <summary>
            Gets or sets a value indicating whether [unconfirmed cov notification].
            </summary>
            <value>
            <c>true</c> if [unconfirmed cov notification]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.UnconfirmedEventNotification">
            <summary>
            Gets or sets a value indicating whether [unconfirmed event notification].
            </summary>
            <value>
            <c>true</c> if [unconfirmed event notification]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.UnconfirmedPrivateTransfer">
            <summary>
            Gets or sets a value indicating whether [unconfirmed private transfer].
            </summary>
            <value>
            <c>true</c> if [unconfirmed private transfer]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.UnconfirmedTextMessage">
            <summary>
            Gets or sets a value indicating whether [unconfirmed text message].
            </summary>
            <value>
            <c>true</c> if [unconfirmed text message]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.TimeSynchronization">
            <summary>
            Gets or sets a value indicating whether [time synchronization].
            </summary>
            <value>
              <c>true</c> if [time synchronization]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.WhoHas">
            <summary>
            Gets or sets a value indicating whether [who has].
            </summary>
            <value>
              <c>true</c> if [who has]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.WhoIs">
            <summary>
            Gets or sets a value indicating whether [who is].
            </summary>
            <value>
              <c>true</c> if [who is]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.ReadRange">
            <summary>
            Gets or sets a value indicating whether [read range].
            </summary>
            <value>
              <c>true</c> if [read range]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.UtcTimeSynchronization">
            <summary>
            Gets or sets a value indicating whether [UTC time synchronization].
            </summary>
            <value>
            <c>true</c> if [UTC time synchronization]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.LifeSafetyOperation">
            <summary>
            Gets or sets a value indicating whether [life safety operation].
            </summary>
            <value>
              <c>true</c> if [life safety operation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.SubscribeCOVProperty">
            <summary>
            Gets or sets a value indicating whether [subscribe cov property].
            </summary>
            <value>
            <c>true</c> if [subscribe cov property]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetServicesSupported.GetEventInformation">
            <summary>
            Gets or sets a value indicating whether [get event information].
            </summary>
            <value>
              <c>true</c> if [get event information]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetServicesSupported.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetServicesSupported"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetServicesSupported.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetServicesSupported"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetServicesSupported.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetServicesSupported"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetServicesSupported.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetServicesSupported"/> class.
            </summary>
            <param name="acknowledgeAlarm">if set to <c>true</c> [acknowledge alarm].</param>
            <param name="confirmedCOVNotification">if set to <c>true</c> [confirmed cov notification].</param>
            <param name="confirmedEventNotification">if set to <c>true</c> [confirmed event notification].</param>
            <param name="getAlarmSummary">if set to <c>true</c> [get alarm summary].</param>
            <param name="getEnrollmentSummary">if set to <c>true</c> [get enrollment summary].</param>
            <param name="subscribeCOV">if set to <c>true</c> [subscribe cov].</param>
            <param name="atomicReadFile">if set to <c>true</c> [atomic read file].</param>
            <param name="atomicWriteFile">if set to <c>true</c> [atomic write file].</param>
            <param name="addListElement">if set to <c>true</c> [add list element].</param>
            <param name="removeListElement">if set to <c>true</c> [remove list element].</param>
            <param name="createObject">if set to <c>true</c> [create object].</param>
            <param name="deleteObject">if set to <c>true</c> [delete object].</param>
            <param name="readProperty">if set to <c>true</c> [read property].</param>
            <param name="readPropertyMultiple">if set to <c>true</c> [read property multiple].</param>
            <param name="writeProperty">if set to <c>true</c> [write property].</param>
            <param name="writePropertyMultiple">if set to <c>true</c> [write property multiple].</param>
            <param name="deviceCommunicationControl">if set to <c>true</c> [device communication control].</param>
            <param name="confirmedPrivateTransferr">if set to <c>true</c> [confirmed private transferr].</param>
            <param name="confirmedTextMessage">if set to <c>true</c> [confirmed text message].</param>
            <param name="reinitializeDevice">if set to <c>true</c> [reinitialize device].</param>
            <param name="vtOpen">if set to <c>true</c> [vt open].</param>
            <param name="vtClose">if set to <c>true</c> [vt close].</param>
            <param name="vtData">if set to <c>true</c> [vt data].</param>
            <param name="iAm">if set to <c>true</c> [i am].</param>
            <param name="iHave">if set to <c>true</c> [i have].</param>
            <param name="unconfirmedCOVNotification">if set to <c>true</c> [unconfirmed cov notification].</param>
            <param name="unconfirmedEventNotification">if set to <c>true</c> [unconfirmed event notification].</param>
            <param name="unconfirmedPrivateTransfer">if set to <c>true</c> [unconfirmed private transfer].</param>
            <param name="unconfirmedTextMessage">if set to <c>true</c> [unconfirmed text message].</param>
            <param name="timeSynchronization">if set to <c>true</c> [time synchronization].</param>
            <param name="whoHas">if set to <c>true</c> [who has].</param>
            <param name="whoIs">if set to <c>true</c> [who is].</param>
            <param name="readRange">if set to <c>true</c> [read range].</param>
            <param name="utcTimeSynchronization">if set to <c>true</c> [UTC time synchronization].</param>
            <param name="lifeSafetyOperation">if set to <c>true</c> [life safety operation].</param>
            <param name="subscribeCOVProperty">if set to <c>true</c> [subscribe cov property].</param>
            <param name="getEventInformation">if set to <c>true</c> [get event information].</param>
            <param name="writeGroup">if set to <c>true</c> [write group].</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetServicesSupported.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSetpointReference">
            <summary>
            BACnet Setpoint Reference
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSetpointReference.SetpointReference">
            <summary>
            Gets or sets the setpoint reference.
            </summary>
            <value>
            The setpoint reference.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSetpointReference.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSetpointReference.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSetpointReference.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSetpointReference.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSetpointReference.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSetpointReference.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetShedLevel">
            <summary>
            BACnet Shed Level
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetShedLevel.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetShedLevel.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetShedLevel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetShedLevel.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetShedLevel.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetShedLevelType">
            <summary>
            BACnet Shed Level Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedLevelType.Percent">
            <summary>
            The percent
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedLevelType.Level">
            <summary>
            The level
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetShedLevelType.Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSpecialEvent">
            <summary>
            BACnet Special Event
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSpecialEvent.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSpecialEvent.Period">
            <summary>
            Gets or sets the period.
            </summary>
            <value>
            The period.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSpecialEvent.ListOfTimeValues">
            <summary>
            Gets or sets the list of time values.
            </summary>
            <value>
            The list of time values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetSpecialEvent.EventPriority">
            <summary>
            Gets or sets the event priority.
            </summary>
            <value>
            The event priority.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetSpecialEvent"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.BACnetTimeValue[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetSpecialEvent"/> class.
            </summary>
            <param name="calendarReference">The calendar reference.</param>
            <param name="priority"></param>
            <param name="timeValues">The time values.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.#ctor(XAMIO.BACnet.Standard.BACnetCalendarEntry,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.BACnetTimeValue[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetSpecialEvent"/> class.
            </summary>
            <param name="calendarEntry">The calendar entry.</param>
            <param name="priority"></param>
            <param name="timeValues">The time values.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SetName(System.String)">
            <summary>
            Sets the name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod">
            <summary>
            Special Event Period
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod"/> class.
            </summary>
            <param name="calendarReference">The calendar reference.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.#ctor(XAMIO.BACnet.Standard.BACnetCalendarEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod"/> class.
            </summary>
            <param name="calendarEntry">The calendar entry.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.InvalidOperationException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriod.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriodType">
            <summary>
            Special Event Period Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriodType.CalendarEntry">
            <summary>
            The calendar entry
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetSpecialEvent.SpecialEventPeriodType.CalendarReference">
            <summary>
            The calendar reference
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetStatusFlags">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetStatusFlags.InAlarm">
            <summary>
            Gets or sets a value indicating whether [in alarm].
            </summary>
            <value>
              <c>true</c> if [in alarm]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetStatusFlags.Fault">
            <summary>
            Gets or sets a value indicating whether [fault].
            </summary>
            <value>
              <c>true</c> if [fault]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetStatusFlags.Overridden">
            <summary>
            Gets or sets a value indicating whether [overridden].
            </summary>
            <value>
              <c>true</c> if [overridden]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetStatusFlags.OutOfService">
            <summary>
            Gets or sets a value indicating whether [out of service].
            </summary>
            <value>
              <c>true</c> if [out of service]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetStatusFlags.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetStatusFlags"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetStatusFlags.#ctor(System.Boolean[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetStatusFlags"/> class.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetStatusFlags.#ctor(XAMIO.BACnet.Standard.ASN1BitString)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetStatusFlags"/> class.
            </summary>
            <param name="bitstring">The bitstring.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetStatusFlags.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetStatusFlags"/> class.
            </summary>
            <param name="inAlarm">if set to <c>true</c> [in alarm].</param>
            <param name="fault">if set to <c>true</c> [fault].</param>
            <param name="overridden">if set to <c>true</c> [overridden].</param>
            <param name="outOfService">if set to <c>true</c> [out of service].</param>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetTimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTimeStamp.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTimeStamp.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTimeStamp"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTimeStamp"/> class.
            </summary>
            <param name="sequenceNumber">The sequence number.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTimeStamp"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.SetValue(System.DateTime)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The date time.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeStamp.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetTimeStampType">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTimeStampType.Time">
            <summary>
            The time
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTimeStampType.SequenceNumber">
            <summary>
            The sequence number
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetTimeStampType.DateTime">
            <summary>
            The date time
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetTimeValue">
            <summary>
            BACnet Time Value
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTimeValue.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetTimeValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTimeValue"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.#ctor(XAMIO.BACnet.Standard.ASN1Time,XAMIO.BACnet.Standard.ASN1Base)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTimeValue"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.#ctor(System.String,XAMIO.BACnet.Standard.ASN1Base)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetTimeValue"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetTimeValue.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ListOfBACnetTimeValueExtensions">
            <summary>
            List Of BACnet Time Value Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ListOfBACnetTimeValueExtensions.GetCurrentValue(System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetTimeValue},System.DateTime)">
            <summary>
            Gets the current value.
            </summary>
            <param name="values">The values.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetVTSession">
            <summary>
            BACnet VT Session
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetVTSession.LocalVtSessionID">
            <summary>
            Gets or sets the local vt session identifier.
            </summary>
            <value>
            The local vt session identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetVTSession.RemoteVtSessionID">
            <summary>
            Gets or sets the remote vt session identifier.
            </summary>
            <value>
            The remote vt session identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetVTSession.RemoteVtAddress">
            <summary>
            Gets or sets the remote vt address.
            </summary>
            <value>
            The remote vt address.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetVTSession.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetVTSession.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetVTSession.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetVTSession.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetVTSession.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetVTSession.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetWeekNDay">
            <summary>
            -- first octet month (1..14) 1 =January
            -- 13 = odd months
            -- 14 = even months
            -- X'FF' = any month
            -- second octet weekOfMonth where:
            -- 1 = days numbered 1-7
            -- 2 = days numbered 8-14
            -- 3 = days numbered 15-21
            -- 4 = days numbered 22-28
            -- 5 = days numbered 29-31
            -- 6 = last 7 days of this month
            -- X'FF' = any week of this month
            -- third octet dayOfWeek (1..7) where
            -- 1 = Monday
            -- 7 = Sunday
            -- X'FF' = any day of week
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetWeekNDay.Month">
            <summary>
            Gets or sets the month.
            </summary>
            <value>
            The month.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetWeekNDay.WeekOfMonth">
            <summary>
            Gets or sets the week of month.
            </summary>
            <value>
            The week of month.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetWeekNDay.DayOfWeek">
            <summary>
            Gets or sets the day of week.
            </summary>
            <value>
            The day of week.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetWeekNDay.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetWeekNDay"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetWeekNDay.#ctor(XAMIO.BACnet.Standard.BACnetMonths,System.Int32,XAMIO.BACnet.Standard.BACnetDays)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.BACnetWeekNDay"/> class.
            </summary>
            <param name="month">The month.</param>
            <param name="weekOfMonth">The week of month.</param>
            <param name="day">The day.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetWeekNDay.IsInRange(System.DateTime)">
            <summary>
            Determines whether [is in range] [the specified date].
            </summary>
            <param name="date">The date.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetWeekNDay.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetWeekNDay.IsEmpty">
            <summary>
            Gets if the date is empty
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetWeekNDay.Intersects(System.DateTime)">
            <summary>
            see if provided datetime is in this flexdaterange
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDays">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Monday">
            <summary>
            The monday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Tuesday">
            <summary>
            The tuesday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Wednesday">
            <summary>
            The wednesday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Thursday">
            <summary>
            The thursday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Friday">
            <summary>
            The friday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Saturday">
            <summary>
            The saturday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Sunday">
            <summary>
            The sunday
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.Any">
            <summary>
            Any
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetDays.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetMonths">
            <summary>
            
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.January">
            <summary>
            The january
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.February">
            <summary>
            The february
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.March">
            <summary>
            The march
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.April">
            <summary>
            The april
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.May">
            <summary>
            The may
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.June">
            <summary>
            The june
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.July">
            <summary>
            The july
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.August">
            <summary>
            The august
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.September">
            <summary>
            The september
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.October">
            <summary>
            The october
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.November">
            <summary>
            The november
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.December">
            <summary>
            The december
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.Odd">
            <summary>
            The odd
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.Even">
            <summary>
            The even
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.Any">
            <summary>
            Any
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.BACnetMonths.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetDaysExtensions">
            <summary>
            BACnet Days Extensions
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysExtensions.GetBACnetDays(System.DayOfWeek)">
            <summary>
            Gets the ba cnet days.
            </summary>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysExtensions.GetDayOfWeek(XAMIO.BACnet.Standard.BACnetDays)">
            <summary>
            Gets the day of week.
            </summary>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetDaysExtensions.GetBACnetDays(System.Nullable{System.DayOfWeek})">
            <summary>
            Gets the BACnet days.
            </summary>
            <param name="day">The day.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadAccessResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessResult.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessResult.ListOfResults">
            <summary>
            Gets or sets the list of results.
            </summary>
            <value>
            The list of results.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessResult"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Collections.Generic.List{XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessResult"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.PropertyIdentifier">
            <summary>
            Gets or sets the property identifier.
            </summary>
            <value>
            The property identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.PropertyArrayIndex">
            <summary>
            Gets or sets the index of the property array.
            </summary>
            <value>
            The index of the property array.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.PropertyValue">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>
            The property value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.PropertyAccessError">
            <summary>
            Gets or sets the property access error.
            </summary>
            <value>
            The property access error.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.#ctor(XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem"/> class.
            </summary>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Value or Error has to be set</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:System.Exception">Value or Error has to be present</exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessResult.ReadAccessResultItem.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ReadAccessSpecification">
            <summary>
            
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessSpecification.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ReadAccessSpecification.ListOfPropertyReferences">
            <summary>
            Gets or sets the list of property references.
            </summary>
            <value>
            The list of property references.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessSpecification"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessSpecification"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyReference)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessSpecification"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyReference})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessSpecification"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="props">The props.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier[])">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.ReadAccessSpecification"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="props">The props.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.ReadAccessSpecification.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WriteAccessSpecification">
            <summary>
            Write Access Specification
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WriteAccessSpecification.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WriteAccessSpecification.ListOfProperties">
            <summary>
            Gets or sets the list of properties.
            </summary>
            <value>
            The list of properties.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.WriteAccessSpecification" /> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.WriteAccessSpecification" /> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteAccessSpecification.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest">
            <summary>
            BACnet Unconfirmed Service Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Conformance">
            <summary>
            Gets or sets the conformance.
            </summary>
            <value>
            The conformance.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value>
              <c>true</c> if [read only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.Create(XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest,XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice)">
            <summary>
            Creates the specified service.
            </summary>
            <param name="service">The service.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.BACnetUnconfirmedServiceRequest.FromBytes(System.Byte[],System.Int32@,XAMIO.BACnet.Standard.BACnetUnconfirmedServiceChoice)">
            <summary>
            Froms the bytes.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <param name="choice">The choice.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Standard.ITimeSynchronization">
            <summary>
            Time Synchroniuation Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.ITimeSynchronization.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IAmRequest">
            <summary>
            I Am Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IAmRequest.IAmDeviceIdentifier">
            <summary>
            Gets or sets the i am device identifier.
            </summary>
            <value>
            The i am device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IAmRequest.MaxAPDULengthAccepted">
            <summary>
            Gets or sets the maximum apdu length accepted.
            </summary>
            <value>
            The maximum apdu length accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IAmRequest.SegmentationSupported">
            <summary>
            Gets or sets the segmentation supported.
            </summary>
            <value>
            The segmentation supported.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IAmRequest.VendorID">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAmRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAmRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAmRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAmRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAmRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IAmRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetMaxAPDULengthAccepted,XAMIO.BACnet.Standard.BACnetSegmentation,System.UInt32)">
            <summary>
            Creates the specified iam device identifier.
            </summary>
            <param name="iamDeviceIdentifier">The iam device identifier.</param>
            <param name="maxAPDULengthAccepted">The maximum apdu length accepted.</param>
            <param name="segmentationSupported">The segmentation supported.</param>
            <param name="vendorID">The vendor identifier.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.IHaveRequest">
            <summary>
            I Have Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IHaveRequest.DeviceIdentifier">
            <summary>
            Gets or sets the device identifier.
            </summary>
            <value>
            The device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IHaveRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.IHaveRequest.ObjectName">
            <summary>
            Gets or sets the name of the object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.String)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.IHaveRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.ASN1CharacterString)">
            <summary>
            Creates the specified device.
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.TimeSynchronizationRequest">
            <summary>
            Time Synchronization Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.TimeSynchronizationRequest.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.TimeSynchronizationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.TimeSynchronizationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.TimeSynchronizationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.TimeSynchronizationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.TimeSynchronizationRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.TimeSynchronizationRequest.Create(XAMIO.BACnet.Standard.BACnetDateTime)">
            <summary>
            Creates the specified time.
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest">
            <summary>
            Unconfirmed COV Notification Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.SubscriberProcessIdentifier">
            <summary>
            Gets or sets the subscriber process identifier.
            </summary>
            <value>
            The subscriber process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.InitiatingDeviceIdentifier">
            <summary>
            Gets or sets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.MonitoredObjectIdentifier">
            <summary>
            Gets or sets the monitored object identifier.
            </summary>
            <value>
            The monitored object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.TimeRemaining">
            <summary>
            Gets or sets the time remaining.
            </summary>
            <value>
            The time remaining.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.ListOfValues">
            <summary>
            Gets or sets the list of values.
            </summary>
            <value>
            The list of values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.UInt32,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the specified subscriber process identifier.
            </summary>
            <param name="subscriberProcessIdentifier">The subscriber process identifier.</param>
            <param name="initiatingDeviceIdentifier">The initiating device identifier.</param>
            <param name="monitoredIbjectIdentifier">The monitored ibject identifier.</param>
            <param name="timeremaining">The timeremaining.</param>
            <param name="listOfValues">The list of values.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedCOVNotificationRequest.Create(XAMIO.BACnet.Standard.ASN1Unsigned32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the specified subscriber process identifier.
            </summary>
            <param name="subscriberProcessIdentifier">The subscriber process identifier.</param>
            <param name="initiatingDeviceIdentifier">The initiating device identifier.</param>
            <param name="monitoredIbjectIdentifier">The monitored ibject identifier.</param>
            <param name="timeremaining">The timeremaining.</param>
            <param name="listOfValues">The list of values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest">
            <summary>
            Unconfirmed Event Notification Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.ProcessIdentifier">
            <summary>
            Gets or sets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.InitiatingDeviceIdentifier">
            <summary>
            Gets or sets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.EventObjectIdentifier">
            <summary>
            Gets or sets the event object identifier.
            </summary>
            <value>
            The event object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.NotificationClass">
            <summary>
            Gets or sets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Priority">
            <summary>
            Gets or sets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.EventType">
            <summary>
            Gets or sets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.MessageText">
            <summary>
            Gets or sets the message text.
            </summary>
            <value>
            The message text.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.NotifyType">
            <summary>
            Gets or sets the type of the notify.
            </summary>
            <value>
            The type of the notify.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.AckRequired">
            <summary>
            Gets or sets the ack required.
            </summary>
            <value>
            The ack required.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.FromState">
            <summary>
            Gets or sets from state.
            </summary>
            <value>
            From state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.ToState">
            <summary>
            Gets or sets to state.
            </summary>
            <value>
            To state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.EventValues">
            <summary>
            Gets or sets the event values.
            </summary>
            <value>
            The event values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Create(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetTimeStamp,System.UInt32,System.UInt32,XAMIO.BACnet.Standard.BACnetEventType,System.String,XAMIO.BACnet.Standard.BACnetNotifyType,System.Boolean,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Creates the specified process.
            </summary>
            <param name="process">The process.</param>
            <param name="initiating">The initiating.</param>
            <param name="eventObj">The event object.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="notificationClass">The notification class.</param>
            <param name="prio">The prio.</param>
            <param name="eventType">Type of the event.</param>
            <param name="message">The message.</param>
            <param name="notify">The notify.</param>
            <param name="ackRequired">if set to <c>true</c> [ack required].</param>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Create(XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedEventNotificationRequest.Create(XAMIO.BACnet.Standard.IEventNotificationRequest)">
            <summary>
            crate a unconfirmed request for a general IEventNotificationRequest
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest">
            <summary>
            Unconfirmed Private Transfer Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.VendorID">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.ServiceNumber">
            <summary>
            Gets or sets the service number.
            </summary>
            <value>
            The service number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.ServiceParameters">
            <summary>
            Gets or sets the service parameters.
            </summary>
            <value>
            The service parameters.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedPrivateTransferRequest.Create(System.UInt32,System.Int32,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Creates the specified vendor identifier.
            </summary>
            <param name="vendorId">The vendor identifier.</param>
            <param name="serviceNumber">The service number.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest">
            <summary>
            Unconfirmed Text Message Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.TextMessageSourceDevice">
            <summary>
            Gets or sets the text message source device.
            </summary>
            <value>
            The text message source device.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.MessageClass">
            <summary>
            Gets or sets the message class.
            </summary>
            <value>
            The message class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.MessagePriority">
            <summary>
            Gets or sets the message priority.
            </summary>
            <value>
            The message priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessagePriority,System.String)">
            <summary>
            Creates the specified source device.
            </summary>
            <param name="sourceDevice">The source device.</param>
            <param name="priority">priority</param>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass">
            <summary>
            Unconfirmed Text Message Request Message Class
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.#ctor(System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClass.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClassType">
            <summary>
            Unconfirmed Text Message Request Message Class Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClassType.Numeric">
            <summary>
            The numeric
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessageClassType.Character">
            <summary>
            The character
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessagePriority">
            <summary>
            Unconfirmed Text message Request message Priority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessagePriority.Normal">
            <summary>
            The normal
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Standard.UnconfirmedTextMessageRequest.UnconfirmedTextMessageRequestMessagePriority.Urgent">
            <summary>
            The urgent
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest">
            <summary>
            UTC Time Synchronizration Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.Time">
            <summary>
            Gets or sets the time.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest.Create(XAMIO.BACnet.Standard.BACnetDateTime)">
            <summary>
            Creates the specified datetime.
            </summary>
            <param name="datetime">The datetime.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WhoHasRequest">
            <summary>
            Who Has Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoHasRequest.Limits">
            <summary>
            Gets or sets the limits.
            </summary>
            <value>
            The limits.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoHasRequest.ObjectIdentifier">
            <summary>
            Gets or sets the object identifier.
            </summary>
            <value>
            The object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoHasRequest.ObjectName">
            <summary>
            Gets or sets the name of the object.
            </summary>
            <value>
            The name of the object.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.Create(System.String,XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits)">
            <summary>
            Creates the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="limits">The limits.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.Create(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits)">
            <summary>
            Creates the specified object.
            </summary>
            <param name="obj">The object.</param>
            <param name="limits">The limits.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits">
            <summary>
            Who Has Request Limits
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.DeviceInstanceRangeLowLimit">
            <summary>
            Gets or sets the device instance range low limit.
            </summary>
            <value>
            The device instance range low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.DeviceInstanceRangeHighLimit">
            <summary>
            Gets or sets the device instance range high limit.
            </summary>
            <value>
            The device instance range high limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.CopyFrom(XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Copies from the specified value to the actual instance
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WhoIsRequest">
            <summary>
            Who Os Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoIsRequest.DeviceInstanceRangeLowLimit">
            <summary>
            Gets or sets the device instance range low limit.
            </summary>
            <value>
            The device instance range low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WhoIsRequest.DeviceInstanceRangeHighLimit">
            <summary>
            Gets or sets the device instance range high limit.
            </summary>
            <value>
            The device instance range high limit.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoIsRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoIsRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoIsRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoIsRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoIsRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WhoIsRequest.Create(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Creates the specified low.
            </summary>
            <param name="low">The low.</param>
            <param name="high">The high.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Standard.WriteGroupRequest">
            <summary>
            Write Group Request
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WriteGroupRequest.GroupNumber">
            <summary>
            Gets or sets the group number.
            </summary>
            <value>
            The group number.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WriteGroupRequest.WritePriority">
            <summary>
            Gets or sets the write priority.
            </summary>
            <value>
            The write priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WriteGroupRequest.ChangeList">
            <summary>
            Gets or sets the change list.
            </summary>
            <value>
            The change list.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Standard.WriteGroupRequest.InhibitDelay">
            <summary>
            Gets or sets the inhibit delay.
            </summary>
            <value>
            The inhibit delay.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteGroupRequest.Decode(System.Byte[],System.Int32@)">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteGroupRequest.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteGroupRequest.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> , is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteGroupRequest.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteGroupRequest.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Standard.WriteGroupRequest.Create(System.Int32,System.Int32,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetGroupChannelValue},System.Nullable{System.Boolean})">
            <summary>
            Creates the specified number.
            </summary>
            <param name="number">The number.</param>
            <param name="prio">The prio.</param>
            <param name="changed">The changed.</param>
            <param name="delay">The delay.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.BACnetDatalinkEventArgs">
            <summary>
            BACnet Datalink Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BACnetDatalinkEventArgs.Telegram">
            <summary>
            Gets or sets the telegram.
            </summary>
            <value>
            The telegram.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkEventArgs.#ctor(XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Datalink.BACnetDatalinkEventArgs"/> class.
            </summary>
            <param name="telegram">The telegram.</param>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer">
            <summary>
            BACnet Virtual Link Control Layer
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.TelegramReceived">
            <summary>
            Occurs when [telegram received].
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.Port">
            <summary>
            Gets the port.
            </summary>
            <value>
            The port.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.IsBound">
            <summary>
            Gets a value indicating whether [is bound].
            </summary>
            <value>
              <c>true</c> if [is bound]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.BBMDDevices">
            <summary>
            a list of bbmd devices
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.#ctor(System.Int32,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer"/> class.
            </summary>
            <param name="port">The port.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.Bind">
            <summary>
            Binds this instance to the udp socket.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.Release">
            <summary>
            Releases this instance from the udp socket.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.Send(System.Byte[],System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Sends the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <param name="destination">The destination.</param>
            <param name="broadcast">if set to <c>true</c> [broadcast].</param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.OnTelegramReceived(XAMIO.BACnet.Datalink.BACnetDatalinkTelegram)">
            <summary>
            Called when [telegram received].
            </summary>
            <param name="telegram">The telegram.</param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.GetBBMD(System.Net.IPAddress)">
            <summary>
            get a bbmd device
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.CleanupBBMD">
            <summary>
            cleanup unused bbmd devices
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.RenewBBMD(XAMIO.BACnet.Datalink.BBMDDevice,System.UInt16)">
            <summary>
            renew a bbmd device registration
            </summary>
            <param name="elm"></param>
            <param name="TimeToLive"></param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.RegisterBBMD(System.Net.IPAddress,System.UInt16)">
            <summary>
            register a bbmd device
            </summary>
            <param name="address"></param>
            <param name="TimeToLive"></param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetVirtualLinkControlLayer.UnregisterBBMD(XAMIO.BACnet.Datalink.BBMDDevice)">
            <summary>
            unregister bbmd device
            </summary>
            <param name="elm"></param>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.BBMDDevice">
            <summary>
            BACnet Broadcast Management Device
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BBMDDevice.Endpoint">
            <summary>
            the BBMD Device IP
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BBMDDevice.TimeToLive">
            <summary>
            the time to live until we need to re-register with the bbmd device
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BBMDDevice.EllapsedTimeToLive">
            <summary>
            the ellapsed time to live
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BBMDDevice.NeedReregister">
            <summary>
            determine if a re-register with bbmd is necessary
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BBMDDevice.IsNotUsed">
            <summary>
            determine if the BBMD Device entry is used
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BBMDDevice.SetReRegistered">
            <summary>
            Sets the re registered.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.IBACnetDatalink">
            <summary>
            BAcnet Datalink Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalink.IsBound">
            <summary>
            Gets a value indicating whether [is bound].
            </summary>
            <value>
              <c>true</c> if [is bound]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetDatalink.Bind">
            <summary>
            Binds this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetDatalink.Release">
            <summary>
            Releases this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetDatalink.Send(System.Byte[],System.Net.IPEndPoint,System.Boolean)">
            <summary>
            Sends the specified payload.
            </summary>
            <param name="payload">The payload.</param>
            <param name="destination">The destination.</param>
            <param name="broadcast">if set to <c>true</c> [broadcast].</param>
        </member>
        <member name="E:XAMIO.BACnet.Datalink.IBACnetDatalink.TelegramReceived">
            <summary>
            Occurs when [telegram received].
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkEventArgs.Telegram">
            <summary>
            Gets or sets the telegram.
            </summary>
            <value>
            The telegram.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Trace">
            <summary>
            The trace
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.FrameToLessData">
            <summary>
            Gets a value indicating whether [frame to less data].
            </summary>
            <value>
              <c>true</c> if [frame to less data]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Error">
            <summary>
            Gets a value indicating whether this is error.
            </summary>
            <value>
              <c>true</c> if error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.ReceiveTime">
            <summary>
            Gets or sets the receive time.
            </summary>
            <value>
            The receive time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>
            The data.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.DataArrayString">
            <summary>
            Gets the data array string.
            </summary>
            <value>
            The data array string.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>
            The sender.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Payload">
            <summary>
            Gets or sets the payload.
            </summary>
            <value>
            The payload.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Function">
            <summary>
            Gets or sets the function.
            </summary>
            <value>
            The function.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Decode(System.Byte[])">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetDatalinkTelegram.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.BACnetVLCFunction">
            <summary>
            BACnet BVLC Function
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.Result">
            <summary>
            The result
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.WriteBroadcastDistributionTable">
            <summary>
            The write broadcast distribution table
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.ReadBroadcastDistTable">
            <summary>
            The read broadcast dist table
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.ReadBroadcastDistTableAck">
            <summary>
            The read broadcast dist table ack
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.ForwardedNPDU">
            <summary>
            The forwarded NPDU
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.RegisterForeignDevice">
            <summary>
            The register foreign device
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.ReadForeignDeviceTable">
            <summary>
            The read foreign device table
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.ReadForeignDeviceTableAck">
            <summary>
            The read foreign device table ack
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.DeleteForeignDeviceTableEntry">
            <summary>
            The delete foreign device table entry
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.DistributeBroadcastToNetwork">
            <summary>
            The distribute broadcast to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.OriginalUnicastNPDU">
            <summary>
            The original unicast NPDU
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCFunction.OriginalBroadcastNPDU">
            <summary>
            The original broadcast NPDU
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.BACnetVLCResult">
            <summary>
            BACnet BVLC Result
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.SuccessfulCompletion">
            <summary>
            The successful completion
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.WriteBroadcastDistributionTableNAK">
            <summary>
            The write broadcast distribution table NAK
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.ReadBroadcastDistributionTableNAK">
            <summary>
            The read broadcast distribution table NAK
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.RegisterForeignDeviceNAK">
            <summary>
            The register foreign device NAK
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.ReadForeignDeviceTableNAK">
            <summary>
            The read foreign device table NAK
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.DeleteForeignDeviceTableEntryNAK">
            <summary>
            The delete foreign device table entry NAK
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetVLCResult.DistributeBroadcastToNetworkNAK">
            <summary>
            The result distribute broadcast to network NAK
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.DatalinkTelegram">
            <summary>
            Gets or sets the datalink telegram.
            </summary>
            <value>
            The datalink telegram.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.ContainsNetworkMessage">
            <summary>
            Gets or sets a value indicating whether [contains network message].
            </summary>
            <value>
            <c>true</c> if [contains network message]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.ExpectingReply">
            <summary>
            Gets or sets a value indicating whether [expecting reply].
            </summary>
            <value>
              <c>true</c> if [expecting reply]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.NetworlPriority">
            <summary>
            Gets or sets the networl priority.
            </summary>
            <value>
            The networl priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>
            The destination.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.HopCount">
            <summary>
            Gets or sets the hop count.
            </summary>
            <value>
            The hop count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.Payload">
            <summary>
            Gets or sets the payload.
            </summary>
            <value>
            The payload.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.NetworkMessageType">
            <summary>
            Gets or sets the type of the network message.
            </summary>
            <value>
            The type of the network message.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.Decode(System.Byte[])">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:System.Exception">Package Hopcount is 0 => Package ignored!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.IBACnetNetworkTelegram.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram">
            <summary>
            BACnet Datalink Telegram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.BVLCType">
            <summary>
            The BACnet Virtual Link Control type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.Payload">
            <summary>
            Gets or sets the payload.
            </summary>
            <value>
            The payload.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.Function">
            <summary>
            Gets or sets the function.
            </summary>
            <value>
            The function.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.Decode(System.Byte[])">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:XAMIO.Common.Net.TelegramDecodeException">BVLC wrong BACnet Type!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.CreateResult(XAMIO.BACnet.Datalink.BACnetVLCResult,XAMCommon.Trace.TraceDelegate)">
            <summary>
            create a BVLC Result message (ACK, NACK)
            </summary>
            <param name="result">the result that should be used in the telegram</param>
            <param name="trace">XAMTrace</param>
            <returns>a BVLC Result BACnet Datalink Telegram</returns>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.CreateRegisterAsForeignDeviceTelegram(System.UInt16,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Create a BVLC Register Foreign Device Telegram
            </summary>
            <param name="TimeToLive">Time to live in sec within the foreign device must re-register with a BBMD</param>
            <param name="trace">XAMTrace</param>
            <returns>a BVLC RegisterAsForeignDevice Telegram </returns>
        </member>
        <member name="M:XAMIO.BACnet.Datalink.BACnetDatalinkTelegram.CreateDistributeBroadCastToNetworkTelegram(System.Byte[],XAMCommon.Trace.TraceDelegate)">
            <summary>
            
            </summary>
            <param name="OriginatingDevice"></param>
            <param name="trace"></param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure">
            <summary>
            BACnet Backup and Restore Procedure
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.BackupAndRestoreState">
            <summary>
            Gets or sets the state of the backup and restore.
            </summary>
            <value>
            The state of the backup and restore.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.SystemStatus">
            <summary>
            Gets or sets the system status.
            </summary>
            <value>
            The system status.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Maintenance.DatabaseLoginInfo,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="loginInfo">The login information.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.StartBackup">
            <summary>
            Starts the backup.
            </summary>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.StartRestore">
            <summary>
            Starts the restore.
            </summary>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.EndBackup">
            <summary>
            Ends the backup.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.EndRestore">
            <summary>
            Ends the restore.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.AbortRestore">
            <summary>
            Aborts the restore.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetBackupAndRestoreProcedure.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetClientCollection">
            <summary>
            BACnet Client Collection
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetClientCollection.Bindings">
            <summary>
            Gets the bindings.
            </summary>
            <value>
            The bindings.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetClientCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="E:XAMIO.BACnet.Device.BACnetClientCollection.Changed">
            <summary>
            Occurs when [changed].
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetClientCollection"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.Clear">
            <summary>
            remove all clients - no matter if cov subscribtions etc exist
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.Cleanup">
            <summary>
            Cleanups this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetClientCollection.OnChanged">
            <summary>
            Called when [changed].
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetCOVClient">
            <summary>
            BACnet COV Client
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetCOVClient.DefaultIncrement">
            <summary>
            The default increment
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVClient.LastSubscription">
            <summary>
            Gets or sets the last subscription.
            </summary>
            <value>
            The last subscription.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVClient.CycleTime">
            <summary>
            Gets the cycle time.
            </summary>
            <value>
            The cycle time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVClient.LastCycleTime">
            <summary>
            Gets or sets the last cycle time.
            </summary>
            <value>
            The last cycle time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVClient.HasNewSubscriptions">
            <summary>
            Gets a value indicating whether [has new subscriptions].
            </summary>
            <value>
              <c>true</c> if [has new subscriptions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVClient.COVSubscriptions">
            <summary>
            Gets the cov subscriptions.
            </summary>
            <value>
            The cov subscriptions.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVClient.HasSubscriptions">
            <summary>
            Gets a value indicating whether [has subscriptions].
            </summary>
            <value>
              <c>true</c> if [has subscriptions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVClient.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Device.BACnetRemoteClient,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetCOVClient"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="client">The client.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVClient.EnqueSubscription(System.Tuple{XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.ISubscribeCOVRequest,XAMIO.BACnet.IBACnetObject})">
            <summary>
            Enques the subscription.
            </summary>
            <param name="tuple">The tuple.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVClient.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVClient.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented">
            <summary>
            BACnet COV Subscription Extented
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.Lifetime">
            <summary>
            Gets or sets the lifetime.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.TimeRemaining">
            <summary>
            Gets or sets the time remaining.
            </summary>
            <value>
            The time remaining.
            </value>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.Send">
            <summary>
            Gets or sets a value indicating whether [send].
            </summary>
            <value>
              <c>true</c> if [send]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.AffectedProperties">
            <summary>
            Gets or sets the affected properties.
            </summary>
            <value>
            The affected properties.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.ActValues">
            <summary>
            Gets or sets the act values.
            </summary>
            <value>
            The act values.
            </value>
            
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.#ctor(XAMIO.BACnet.Standard.BACnetObjectPropertyReference,XAMIO.BACnet.IBACnetObject,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.ToString">
            <summary>
            override tostring
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetCOVSubscriptionExtented.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.GetBACNetDatabaseRevision">
            <summary>
            get the actual database revision
            </summary>
            <returns>the actual db revision</returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.SetBACNetDatabaseRevision">
            <summary>
            set the acutal db revision
            </summary>
            <param name="version">the new revision number</param>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetDevice">
            <summary>
            BACnet Device
            </summary>
            <remarks>
            Das BACnet Device hat folgende Aufgaben:
                > Enqueue neuer Telegramme in die telegramQueue
                > abarbeiten der Telegramme im DoWork Thread und zuweisen an den
                    jeweiligen RemoteClient
                > abarbeiten von DeviceServices wie 
                    # IAm/WhoIs
                    # TimeSynchronization
                > Starten und Stoppen der Device Kommunikation
            
            </remarks>
        </member>
        <member name="E:XAMIO.BACnet.Device.BACnetDevice.TimeSyncronizationRequest">
            <summary>
            The time syncronization request
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Device.BACnetDevice.RestartRequest">
            <summary>
            Occurs when [restart request].
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetDevice.PersistenceEvent">
            <summary>
            The persistence event
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetDevice.GetDatabaseRevision">
            <summary>
            get the actual database revision
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetDevice.SetDatabaseRevision">
            <summary>
            set the acutal db revision
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Device.BACnetDevice.DynamicObjectCreated">
            <summary>
            Dynamic object got created notification
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Device.BACnetDevice.DynamicObjectDeleted">
            <summary>
            Dynamic object got deleted notification
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.COVCycleTime">
            <summary>
            Gets the cov cycle time.
            </summary>
            <value>
            The cov cycle time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.RemoteClients">
            <summary>
            Gets the remote clients.
            </summary>
            <value>
            The remote clients.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.Objects">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>
            The objects.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.DynamicObjects">
            <summary>
            Gets or sets the dynamic objects.
            </summary>
            <value>
            The dynamic objects.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.ObjectAccess">
            <summary>
            Gets the object access.
            </summary>
            <value>
            The object access.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.AlarmAndEvent">
            <summary>
            Gets the alarm and event.
            </summary>
            <value>
            The alarm and event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.DeviceManagement">
            <summary>
            Gets the device management.
            </summary>
            <value>
            The device management.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.FileAccess">
            <summary>
            Gets the file access.
            </summary>
            <value>
            The file access.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.NotificationServer">
            <summary>
            Gets or sets the notification server.
            </summary>
            <value>
            The notification server.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.MaxAPDULengthAccepted">
            <summary>
            Gets the maximum apdu length accepted.
            </summary>
            <value>
            The maximum apdu length accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.MaxSegmentsAccepted">
            <summary>
            Gets the maximum segments accepted.
            </summary>
            <value>
            The maximum segments accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.SegmentationSupported">
            <summary>
            Gets the segmentation supported.
            </summary>
            <value>
            The segmentation supported.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.ObjectIdentifier">
            <summary>
            the bacnet device object identifier
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.VendorIdentifier">
            <summary>
            the vendor indentifier
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.BackupFailureTimeout">
            <summary>
            backup failure timeout in sec
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.RestoreCompletionTime">
            <summary>
            restore completion time in sec (timeout)
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.DeviceObject">
            <summary>
            the device object
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.SystemStatus">
            <summary>
            Gets the system status.
            </summary>
            <value>
            The system operational status.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.TimeOfDeviceRestart">
            <summary>
            Gets the time of device restart.
            </summary>
            <value>
            The time of device restart.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.LastRestartReason">
            <summary>
            Gets the last restart reason.
            </summary>
            <value>
            The last restart reason.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.ApduSegmentTimeout">
            <summary>
            Gets or sets the apdu segment timeout.
            </summary>
            <value>
            The apdu segment timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.LastRestoreTime">
            <summary>
            the last restore time
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.ConfigurationFiles">
            <summary>
            the backup and restore configuration files
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.BackupAndRestoreState">
            <summary>
            the backup and restore state
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.ApduTimeout">
            <summary>
            the apdu timeout
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.CommunicationDisabled">
            <summary>
            Gets or sets the communication disabled.
            </summary>
            <value>
            The communication disabled.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.Enabled">
            <summary>
            Gets or sets a value indicating whether [enabled].
            </summary>
            <value>
              <c>true</c> if [enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.StartPending">
            <summary>
            Gets a value indicating whether [start pending].
            </summary>
            <value>
              <c>true</c> if [start pending]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.DisableDuration">
            <summary>
            Gets or sets the duration of the disable.
            </summary>
            <value>
            The duration of the disable.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.DisableDurationSecounds">
            <summary>
            Gets or sets a value indicating whether [disable duration secounds].
            </summary>
            <value>
            <c>true</c> if [disable duration secounds]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.BackupAndRestore">
            <summary>
            Gets the backup and restore.
            </summary>
            <value>
            The backup and restore.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetDevice.UseBroadcastForWhoIsResponse">
            <summary>
            If true, the response IAm for WhoIs requests is sent via network broadcast
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.IBACnetProxyClient,System.String,System.String,System.String,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetDevice"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="remoteClient">The remote client.</param>
            <param name="dbCon">The database con.</param>
            <param name="dbUser">The database user.</param>
            <param name="dbPassword">The database password.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.IBACnetProxyClient,XAMCommon.Maintenance.DatabaseLoginInfo,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetDevice"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="remoteClient">The remote client.</param>
            <param name="loginInfo">The login information.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.Register">
            <summary>
            Registers this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.GetValue(XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Gets the value.
            </summary>
            <param name="prop">The property.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.Start(XAMIO.BACnet.Standard.BACnetRestartReason)">
            <summary>
            Starts this instance.
            </summary>
            <param name="restartreason"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.SendBroadcast(System.Byte[])">
            <summary>
            Sends the broadcast.
            </summary>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.SendData(System.Byte[],XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Sends the data.
            </summary>
            <param name="data">The data.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.OnPersistenceEvent(XAMIO.BACnet.Device.BACnetPersistenceEventArgs)">
            <summary>
            Raises the <see cref="E:PersistenceEvent" /> event.
            </summary>
            <param name="args">The <see cref="T:XAMIO.BACnet.Device.BACnetPersistenceEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.OnTimeSyncronizationRequest(System.DateTime,System.Boolean)">
            <summary>
            Called when [time syncronization request].
            </summary>
            <param name="newTime">The new time.</param>
            <param name="UTC">The UTC</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.OnRestartRequest(XAMIO.BACnet.Device.RestartType)">
            <summary>
            Called when [restart request].
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.GetDBRevision">
            <summary>
            get bacnet database revision
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.SetDBRevision(System.Int32)">
            <summary>
            set bacnet database revision
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDevice.Cleanup">
            <summary>
            Cleanups this instance.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetCommunicationDisable">
            <summary>
            BACnet Communication Disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetCommunicationDisable.Enabled">
            <summary>
            The enabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetCommunicationDisable.Disabled">
            <summary>
            The disabled
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetCommunicationDisable.DisabledInitation">
            <summary>
            The disabled initation
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetCommunicationDisable.DisabledRestore">
            <summary>
            The disabled restore
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetPersistenceEventArgs">
            <summary>
            BACnet Device Persistence Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetPersistenceEventArgs.Method">
            <summary>
            Gets the method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetPersistenceEventArgs.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetPersistenceEventArgs.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetPersistenceEventArgs.#ctor(XAMIO.BACnet.Device.BACnetPersistenceMethod,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetPersistenceEventArgs"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetPersistenceEventArgs.#ctor(XAMIO.BACnet.Device.BACnetPersistenceMethod,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetPersistenceEventArgs"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetTimeSyncronizationEventArgs">
            <summary>
            BACnet Time Syncroniuation Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetTimeSyncronizationEventArgs.UTC">
            <summary>
            Gets or sets a value indicating whether [UTC].
            </summary>
            <value>
              <c>true</c> if [UTC]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetTimeSyncronizationEventArgs.NewTime">
            <summary>
            Gets the new time.
            </summary>
            <value>
            The new time.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetTimeSyncronizationEventArgs.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetTimeSyncronizationEventArgs"/> class.
            </summary>
            <param name="newTime">The new time.</param>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetPersistenceMethod">
            <summary>
            BACnet Persistence Method
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetPersistenceMethod.GET">
            <summary>
            The get
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.BACnetPersistenceMethod.SET">
            <summary>
            The set
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetRestartEventArgs">
            <summary>
            BACnet Restart Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRestartEventArgs.Type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRestartEventArgs.#ctor(XAMIO.BACnet.Device.RestartType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetRestartEventArgs"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:XAMIO.BACnet.Device.RestartType">
            <summary>
            Restart Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.RestartType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.RestartType.Warmstart">
            <summary>
            The warmstart
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Device.RestartType.Coldstart">
            <summary>
            The coldstart
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetFileObject">
            <summary>
            BACnet File Object
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.Path">
            <summary>
            Gets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.FileType">
            <summary>
            Gets the type of the file.
            </summary>
            <value>
            The type of the file.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.FileSize">
            <summary>
            Gets the size of the file.
            </summary>
            <value>
            The size of the file.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.ModificationDate">
            <summary>
            Gets the modification date.
            </summary>
            <value>
            The modification date.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.Archive">
            <summary>
            Gets the archive.
            </summary>
            <value>
            The archive.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.ReadOnly">
            <summary>
            Gets the read only.
            </summary>
            <value>
            The read only.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.FileAccessMethod">
            <summary>
            Gets the file access method.
            </summary>
            <value>
            The file access method.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetFileObject.PropertyList">
            <summary>
            Gets the property list.
            </summary>
            <value>
            The property list.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetFileObject.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetFileObject"/> class.
            </summary>
            <param name="parentInstanceName">Name of the parent instance.</param>
            <param name="name">The name.</param>
            <param name="path">The path.</param>
            <param name="PLCEngine">The PLC engine name.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetFileObject.Exec(XAMIO.BACnet.BACnetObjectContext,System.DateTime)">
            <summary>
            Executes this instance.
            </summary>
            <param name="context"></param>
            <param name="now"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetFileObject.InitFile">
            <summary>
            Initializes the file.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetNotificationServer">
            <summary>
            BACnet Notification Server
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetNotificationServer.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetNotificationServer"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetNotificationServer.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetNotificationServer.EnqueueEvent(XAMIO.BACnet.BACnetNotificationEventArgs)">
            <summary>
            Enqueues the event.
            </summary>
            <param name="eventArgs">The <see cref="T:XAMIO.BACnet.BACnetNotificationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetNotificationServer.CycleAsync">
            <summary>
            Cycles this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetNotificationServer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetNotificationServer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetRemoteClient">
            <summary>
            BACnet Remote Client
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.UsedCOVCycleTime">
            <summary>
            Gets the used cov cycle time.
            </summary>
            <value>
            The used cov cycle time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.SegmentationTimeout">
            <summary>
            Gets or sets the segmentation timeout.
            </summary>
            <value>
            The segmentation timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>
            The timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.CreatedTimestamp">
            <summary>
            Gets or sets the created timestamp.
            </summary>
            <value>
            The created timestamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.VendorId">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.ClientId">
            <summary>
            Gets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.COVSubscriptions">
            <summary>
            Gets the cov subscriptions.
            </summary>
            <value>
            The cov subscriptions.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.HasCOVSubscriptions">
            <summary>
            Gets a value indicating whether [has cov subscriptions].
            </summary>
            <value>
              <c>true</c> if [has cov subscriptions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetRemoteClient.HasNewSubscriptions">
            <summary>
            Gets a value indicating whether [has new subscriptions].
            </summary>
            <value>
              <c>true</c> if [has new subscriptions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetAddressBinding,System.String,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.BACnetRemoteClient"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="addr">The addr.</param>
            <param name="key">The key.</param>
            <param name="trace">The trace</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.ConfirmedRequestReceived(XAMIO.BACnet.IBACnetContext)">
            <summary>
            Confirmeds the request received.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.UnconfirmedRequestReceived(XAMIO.BACnet.IBACnetContext)">
            <summary>
            Unconfirmeds the request.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.GetPassword">
            <summary>
            Gets the password.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.EnqueSubscription(System.Tuple{XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.ISubscribeCOVRequest,XAMIO.BACnet.IBACnetObject})">
            <summary>
            Enques the subscription.
            </summary>
            <param name="tuple">The tuple.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetRemoteClient.IsSubscribing(System.Int32)">
            <summary>
            Determines whether the specified cycle time is subscribing.
            </summary>
            <param name="cycleTime">The cycle time.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetTrendLogData">
            <summary>
            BACnet Trend Log Data
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetTrendLogData.LogBuffer">
            <summary>
            Gets or sets the log buffer.
            </summary>
            <value>
            The log buffer.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetTrendLogData.OldLoggingEnabled">
            <summary>
            Gets or sets a value indicating whether [old logging enabled].
            </summary>
            <value>
              <c>true</c> if [old logging enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.BACnetTrendLogData.OldRecordCount">
            <summary>
            Gets or sets the old record count.
            </summary>
            <value>
            The old record count.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetValueAccess">
            <summary>
            BACnet Value Access
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetValueAccess.WriteProperty(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Writes the property.
            </summary>
            <param name="device">The device.</param>
            <param name="objIdent">The object ident.</param>
            <param name="prop">The property.</param>
            <param name="v">The v.</param>
            <param name="priority">The priority.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetValueAccess.WritePropertyToDynamicObject(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Writes the property.
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="v">The v.</param>
            <param name="priority">The priority.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetValueAccess.ValidateService(XAMIO.BACnet.Standard.BACnetConfirmedServiceChoice,XAMIO.BACnet.Standard.BACnetObjectType,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Validates the service.
            </summary>
            <param name="serviceChoice">The service choice.</param>
            <param name="type">The type.</param>
            <param name="prop">The property.</param>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetValueAccess.AddReadMultipleProperty(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.ReadAccessResult,XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Adds the multiple property.
            </summary>
            <param name="device">The device.</param>
            <param name="r">The r.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetValueAccess.ReadRange(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.IASN1Enumerable,XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange,XAMIO.BACnet.Standard.BACnetResultFlags@,System.Nullable{System.Int32})">
            <summary>
            Reads the range.
            </summary>
            <param name="device">The device.</param>
            <param name="value">The value.</param>
            <param name="range">The range.</param>
            <param name="flags"></param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException">
            </exception>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetValueAccess.CheckDataTypeAndThrowIfInvalid(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.IAbstractSyntaxAndType)">
            <summary>
            Throws BACnetErrorException with code InvalidDataType if types are not compatible
            </summary>
            <param name="actValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:XAMIO.BACnet.Device.DynamicObjectChangeInfo">
            <summary>
            object change info delegate
            </summary>
            <param name="bacObj"></param>
            <param name="objectIdentifier"></param>
        </member>
        <member name="T:XAMIO.BACnet.Device.IBACnetDevice">
            <summary>
            BACnet Device Interface
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Device.IBACnetDevice.DynamicObjectCreated">
            <summary>
            Dynamic object got created notification
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Device.IBACnetDevice.DynamicObjectDeleted">
            <summary>
            Dynamic object got deleted notification
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.COVCycleTime">
            <summary>
            Gets the cov cycle time.
            </summary>
            <value>
            The cov cycle time.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.GetDBRevision">
            <summary>
            get the actual database revision
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.SetDBRevision(System.Int32)">
            <summary>
            set the acutal db revision
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.GetValue(XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Gets the value.
            </summary>
            <param name="prop">The property.</param>
            <returns></returns>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.DeviceObject">
            <summary>
            the device object
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.VendorIdentifier">
            <summary>
            Gets or sets the vendor identifier.
            </summary>
            <value>
            The vendor identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.LastRestoreTime">
            <summary>
            Gets the last restore time.
            </summary>
            <value>
            The last restore time.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.ConfigurationFiles">
            <summary>
            Gets the configuration files.
            </summary>
            <value>
            The configuration files.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.BackupAndRestoreState">
            <summary>
            Gets or sets the state of the backup and restore.
            </summary>
            <value>
            The state of the backup and restore.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.SystemStatus">
            <summary>
            Gets or sets the system status.
            </summary>
            <value>
            The system status.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.ObjectIdentifier">
            <summary>
            the bacnet device object identifier
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.ApduTimeout">
            <summary>
            Gets the apdu timeout.
            </summary>
            <value>
            The apdu timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.ApduSegmentTimeout">
            <summary>
            Gets or sets the apdu segment timeout.
            </summary>
            <value>
            The apdu segment timeout.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.Address">
            <summary>
            Gets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.AlarmAndEvent">
            <summary>
            Gets the alarm and event.
            </summary>
            <value>
            The alarm and event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.DeviceManagement">
            <summary>
            Gets the device management.
            </summary>
            <value>
            The device management.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.NotificationServer">
            <summary>
            Gets or sets the notification server.
            </summary>
            <value>
            The notification server.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.ObjectAccess">
            <summary>
            Gets the object access.
            </summary>
            <value>
            The object access.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.Objects">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>
            The objects.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.DynamicObjects">
            <summary>
            Gets or sets the dynamic objects.
            </summary>
            <value>
            The dynamic objects.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.RemoteClients">
            <summary>
            Gets the remote clients.
            </summary>
            <value>
            The remote clients.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.MaxAPDULengthAccepted">
            <summary>
            Gets the maximum apdu length accepted.
            </summary>
            <value>
            The maximum apdu length accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.MaxSegmentsAccepted">
            <summary>
            Gets the maximum segments accepted.
            </summary>
            <value>
            The maximum segments accepted.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.CommunicationDisabled">
            <summary>
            Gets the communication disabled.
            </summary>
            <value>
            The communication disabled.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.Enabled">
            <summary>
            Gets a value indicating whether [enabled].
            </summary>
            <value>
              <c>true</c> if [enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.StartPending">
            <summary>
            Gets a value indicating whether [start pending].
            </summary>
            <value>
              <c>true</c> if [start pending]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.FileAccess">
            <summary>
            Gets the file access.
            </summary>
            <value>
            The file access.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.BackupFailureTimeout">
            <summary>
            backup timeout in sec
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.RestoreCompletionTime">
            <summary>
            restore timeout in sec
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.IBACnetDevice.UseBroadcastForWhoIsResponse">
            <summary>
            If true, the response IAm for WhoIs requests is sent via network broadcast
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.Start(XAMIO.BACnet.Standard.BACnetRestartReason)">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.OnRestartRequest(XAMIO.BACnet.Device.RestartType)">
            <summary>
            Called when [restart request].
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.SetDynamicObjectAsUsed(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Set dynamic object as used 
            </summary>
            <param name="bacObj"></param>
            <param name="objectIdentifier"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.IBACnetDevice.SetDynamicObjectAsUnused(XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Set dynamic object as unused 
            </summary>
            <param name="bacObj"></param>
            <param name="objectIdentifier"></param>
        </member>
        <member name="T:XAMIO.BACnet.Device.BACnetDeviceExtensions">
            <summary>
            BACnet Device Extension Methods
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.IsProcessPackagesEnabled(XAMIO.BACnet.Device.IBACnetDevice)">
            <summary>
            Determines whether [is process packages enabled] [the specified device].
            </summary>
            <param name="device">The device.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.IsProcessNotificationsEnabled(XAMIO.BACnet.Device.IBACnetDevice)">
            <summary>
            Determines whether [is process packages enabled] [the specified device].
            </summary>
            <param name="device">The device.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.IsProcessWhoIsEnabled(XAMIO.BACnet.Device.BACnetDevice)">
            <summary>
            Determines whether [is process who is enabled] [the specified device].
            </summary>
            <param name="device">The device.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.GetObject(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Gets the object.
            </summary>
            <param name="device">The device.</param>
            <param name="ident">The ident.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException">
            </exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.GetObjectOfType``1(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Gets the type of the object of.
            </summary>
            <typeparam name="TObject">The type of the object.</typeparam>
            <param name="device">The device.</param>
            <param name="ident">The ident.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.TryGetObject(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetObject@)">
            <summary>
            Tries the get object.
            </summary>
            <param name="device">The device.</param>
            <param name="ident">The ident.</param>
            <param name="obj"></param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.TryGetEventObject(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.IBACnetEventInitiatingObjects@)">
            <summary>
            Tries the get event object.
            </summary>
            <param name="device">The device.</param>
            <param name="ident">The ident.</param>
            <param name="eventObj">The event object.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.GetValue(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.ASN1Unsigned,System.Boolean)">
            <summary>
            Gets the value.
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
            <param name="resolveASN1Nullable"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.TryGetValue(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.TryGetValue``1(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,``0@)">
            <summary>
            Tries the get value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.TryGetValue``1(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.IBACnetObject,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,``0@)">
            <summary>
            Tries the get value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.IsOutOfService(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Determines whether [is out of service] [the specified device].
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.IsOutOfService(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.IBACnetObject)">
            <summary>
            Determines whether [is out of service] [the specified device].
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.GetNotificationClassObjects(XAMIO.BACnet.Device.IBACnetDevice)">
            <summary>
            Gets the notification class objects.
            </summary>
            <param name="device">The device.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.GetNotificationClassObject(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Gets the notification class object.
            </summary>
            <param name="device">The device.</param>
            <param name="id">The identifier.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.BACnetDeviceExtensions.GetVarName(XAMIO.BACnet.Device.IBACnetDevice,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Gets the name of the variable.
            </summary>
            <param name="device">The device.</param>
            <param name="obj">The object.</param>
            <param name="prop">The property.</param>
            <returns></returns>
        </member>
        <member name="P:XAMIO.BACnet.Device.INotificactionClassBase.NotificationClass">
            <summary>
            Gets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.INotificactionClassBase.Priority">
            <summary>
            Gets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.INotificactionClassBase.AckRequired">
            <summary>
            Gets the ack required.
            </summary>
            <value>
            The ack required.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.INotificactionClassBase.RecipientList">
            <summary>
            Gets the recipient list.
            </summary>
            <value>
            The recipient list.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.INotificactionClassBase.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Device.NotificationClassBase">
            <summary>
            Notification Class Base
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Device.NotificationClassBase.NotificationClass">
            <summary>
            Gets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.NotificationClassBase.Priority">
            <summary>
            Gets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.NotificationClassBase.AckRequired">
            <summary>
            Gets the ack required.
            </summary>
            <value>
            The ack required.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.NotificationClassBase.RecipientList">
            <summary>
            Gets the recipient list.
            </summary>
            <value>
            The recipient list.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Device.NotificationClassBase.Description">
            <summary>
            Gets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Device.NotificationClassBase.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.NotificationClassBase"/> class.
            </summary>
            <param name="parentInstanceName">Name of the parent instance.</param>
            <param name="name">The name.</param>
            <param name="PLCEngine">The PLC engine name.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.NotificationClassBase.Exec(XAMIO.BACnet.BACnetObjectContext,System.DateTime)">
            <summary>
            Executes this instance.
            </summary>
            <param name="context"></param>
            <param name="now"></param>
        </member>
        <member name="T:XAMIO.BACnet.Device.DeviceAlarmAndEventService">
            <summary>
            BACet Device Alarm and Event Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.DeviceAlarmAndEventService"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.SubscribeCOV(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.SubscribeCOVRequest)">
            <summary>
            Subscribes the cov.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.SubscribeCOVProperty(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.SubscribeCOVPropertyRequest)">
            <summary>
            Subscribes the cov property.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.GetAlarmSummary(XAMIO.BACnet.Device.BACnetRemoteClient)">
            <summary>
            Gets the alarm summary.
            </summary>
            <param name="client">The client.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.GetEventInformation(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.GetEventInformationRequest,XAMIO.BACnet.Standard.BACnetPDUFlags)">
            <summary>
            Gets the event information.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="PDUFlags"></param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.GetEnrollmentSummary(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest)">
            <summary>
            Gets the enrollment summary.
            is used by the client to obtain a summary of event initating objects
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceAlarmAndEventService.AcknowledgeAlarm(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.AcknowledgeAlarmRequest)">
            <summary>
            Acknowledges the alarm.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.DeviceFileAccessService">
            <summary>
            Device File Access Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceFileAccessService.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.DeviceFileAccessService"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceFileAccessService.AtomicReadFile(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.AtomicReadFileRequest)">
            <summary>
            Atomics the read file.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException"></exception>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceFileAccessService.AtomicWriteFile(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.AtomicWriteFileRequest)">
            <summary>
            Atomics the write file.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Device.DeviceManagementService">
            <summary>
            Device Management Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.#ctor(XAMIO.BACnet.Device.BACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.DeviceManagementService"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.Process(XAMIO.BACnet.Standard.BACnetPDU)">
            <summary>
            Processes the specified pdu.
            </summary>
            <param name="pdu">The pdu.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.IAm(XAMIO.BACnet.Standard.IAmRequest,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Is the am.
            </summary>
            <param name="request">The request.</param>
            <param name="senderAddress">The sender address.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.WhoIs(XAMIO.BACnet.Standard.WhoIsRequest,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Whoes the is.
            </summary>
            <param name="request">The request.</param>
            <param name="sender"></param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.WhoHas(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.WhoHasRequest)">
            <summary>
            Whoes the has.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.TimeSynchronization(XAMIO.BACnet.Standard.TimeSynchronizationRequest)">
            <summary>
            Times the synchronization.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.UtcTimeSynchronization(XAMIO.BACnet.Standard.UTCTimeSynchronizationRequest)">
            <summary>
            UTCs the time synchronization.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.DeviceCommunicationControl(XAMIO.BACnet.Standard.DeviceCommunicationControlRequest)">
            <summary>
            Devices the communication control.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.ReinitializeDevice(XAMIO.BACnet.Standard.ReinitializeDeviceRequest)">
            <summary>
            Reinitializes the device.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException">
            </exception>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetRejectException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceManagementService.IsDeviceService(XAMIO.BACnet.Standard.BACnetPDUType,System.Byte)">
            <summary>
            Determines whether [is device service] [the specified pdu type].
            </summary>
            <param name="pduType">Type of the pdu.</param>
            <param name="serviceChoice">The service choice.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.DeviceObjectAccessService">
            <summary>
            BACnet Device Object Access Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Device.DeviceObjectAccessService"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.AddListElement(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.AddListElementRequest)">
            <summary>
            add a element to a bacnet list property
            </summary>
            <param name="client">the requesting client</param>
            <param name="request">the add list element request</param>
            <returns>a bacnet result pdu (+) or it will throw a BACnet Error Exception</returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.RemoveListElement(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.RemoveListElementRequest)">
            <summary>
            remove a element form a bacnet list property
            </summary>
            <param name="client"></param>
            <param name="request"></param>
            <returns>a bacnet result pdu (+) or it will throw a BACnet Error Exception</returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.ReadProperty(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.ReadPropertyRequest)">
            <summary>
            Reads the property.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Standard.BACnetErrorException">
            </exception>
            <exception cref="T:XAMIO.BACnet.Standard.Error">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.ReadPropertyMultiple(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.ReadPropertyMultipleRequest)">
            <summary>
            Reads the property multiple.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.ReadRange(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.ReadRangeRequest,XAMIO.BACnet.Standard.BACnetPDUFlags)">
            <summary>
            Reads the range.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="PDUFlags"></param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.WriteProperty(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.WritePropertyRequest)">
            <summary>
            Writes the property.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.WritePropertyMultiple(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.WritePropertyMultipleRequest)">
            <summary>
            Writes the property multiple.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.CreateObject(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.CreateObjectRequest)">
            <summary>
            Create a new object
            </summary>
            <param name="client">The client</param>
            <param name="request">The request</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Device.DeviceObjectAccessService.DeleteObject(XAMIO.BACnet.Device.BACnetRemoteClient,XAMIO.BACnet.Standard.DeleteObjectRequest)">
            <summary>
            Deletes an object
            </summary>
            <param name="client">The client</param>
            <param name="request">The request</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Device.IBACnetDeviceService">
            <summary>
            BACnet Device Service Interface
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.BACnetCommandPrioritization">
            <summary>
            BACnet Command Prioritization
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization.ForcedValue">
            <summary>
            Gets or sets the forced value.
            </summary>
            <value>
            The forced value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization.ValuePLC">
            <summary>
            Gets or sets the value PLC.
            </summary>
            <value>
            The value PLC.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization.IsForced">
            <summary>
            Gets or sets the is forced.
            </summary>
            <value>
            The is forced.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization.isForcedInternal">
            <summary>
            Gets or sets a value indicating whether [is forced internal].
            </summary>
            <value>
              <c>true</c> if [is forced internal]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization.forcedValueInternal">
            <summary>
            Gets or sets the forced value internal.
            </summary>
            <value>
            The forced value internal.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization.WriteValue(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Writes the value.
            </summary>
            <param name="value">The value.</param>
            <param name="prio">The prio.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization.WriteValue(System.Object,System.Int32)">
            <summary>
            Writes the value.
            </summary>
            <param name="value">The value.</param>
            <param name="prio">The prio.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization.SetPLCBinding">
            <summary>
            Sets the PLC binding.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization.GetVarNames">
            <summary>
            Gets the variable names.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetCommandPrioritization`1">
            <summary>
            BACnet Command prioritizatuin
            </summary>
            <typeparam name="TBACnetType">The type of the ba cnet type.</typeparam>
        </member>
        <member name="F:XAMIO.BACnet.BACnetCommandPrioritization`1.prioArray">
            <summary>
            The prio array
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.BACnetCommandPrioritization`1.relinquishDefault">
            <summary>
            The relinquish default
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetCommandPrioritization`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.#ctor(XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetPriorityValue},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetCommandPrioritization`1"/> class.
            </summary>
            <param name="prioArray">The prio array.</param>
            <param name="relinquishDefault">The relinquish default.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.#ctor(XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetPriorityValue},`0,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetCommandPrioritization`1"/> class.
            </summary>
            <param name="prioArray">The prio array.</param>
            <param name="relinquishDefault">The relinquish default.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.WriteValue(XAMIO.BACnet.Standard.IAbstractSyntaxAndType,XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Writes the value.
            </summary>
            <param name="value">The value.</param>
            <param name="prio">The prio.</param>
            <param name="arrayIndex">Index of the array.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.WriteValue(System.Object,System.Int32)">
            <summary>
            Writes the value.
            </summary>
            <param name="value">The value.</param>
            <param name="prio">The prio.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.Execute">
            <summary>
            Executes this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.GetMaxPrio">
            <summary>
            Gets the maximum prio.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.SetPLCBinding">
            <summary>
            Sets the PLC binding.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetCommandPrioritization`1.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.BACnetConfiguration">
            <summary>
            BACnet Configuration
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetConfiguration.PlcPriority">
            <summary>
            Gets or sets the PLC priority.
            </summary>
            <value>
            The PLC priority.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.BufferReady">
            <summary>
            Buffer Ready Event Algorithm
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.BufferReady.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.BufferReady"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.BufferReady.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.BufferReadyParameter,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter">
            <summary>
            Buffer Ready Parameter
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter.pCurrentState">
            <summary>
            Gets or sets the state of the p current.
            </summary>
            <value>
            The state of the p current.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter.pMonitoredValue">
            <summary>
            Gets or sets the p monitored value.
            </summary>
            <value>
            The p monitored value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter.pLogBuffer">
            <summary>
            Gets or sets the p log buffer.
            </summary>
            <value>
            The p log buffer.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter.pThreshold">
            <summary>
            Gets or sets the p threshold.
            </summary>
            <value>
            The p threshold.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter.pPreviousCount">
            <summary>
            Gets or sets the p previous count.
            </summary>
            <value>
            The p previous count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.BufferReadyParameter.pRecordsSinceNotification">
            <summary>
            Gets or sets the p previous count.
            </summary>
            <value>
            The p previous count.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstring">
            <summary>
            Change of CharacterString
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstring.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstring"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstring.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter">
            <summary>
            Change Of Characterstring Parameter
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter.pCurrentState">
            <summary>
            Gets or sets the state of the p current.
            </summary>
            <value>
            The state of the p current.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter.pMonitoredValue">
            <summary>
            Gets or sets the p monitored value.
            </summary>
            <value>
            The p monitored value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter.pStatusFlags">
            <summary>
            Gets or sets the p status flags.
            </summary>
            <value>
            The p status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter.pAlarmValues">
            <summary>
            Gets or sets the p alarm values.
            </summary>
            <value>
            The p alarm values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter.pTimeDelay">
            <summary>
            Gets or sets the p time delay.
            </summary>
            <value>
            The p time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfCharacterstringParameter.pTimeDelayNormal">
            <summary>
            Gets or sets the p time delay normal.
            </summary>
            <value>
            The p time delay normal.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.ChangeOfState`1">
            <summary>
            Change Of State Event Algrithm
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.ChangeOfState`1.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.ChangeOfState`1"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.ChangeOfState`1.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter{`0},XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.ChangeOfStateBACnetBinaryPV">
            <summary>
            Change of State BACnet Binary Pv
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.ChangeOfStateBACnetBinaryPV.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.ChangeOfStateBACnetBinaryPV"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.ChangeOfStateASN1Unsigned">
            <summary>
            Change of State BACnet ASN1Unsigned
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.ChangeOfStateASN1Unsigned.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.ChangeOfStateBACnetBinaryPV"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1">
            <summary>
            Change Of State Parameter
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1.pCurrentState">
            <summary>
            Gets or sets the state of the p current.
            </summary>
            <value>
            The state of the p current.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1.pMonitoredValue">
            <summary>
            Gets or sets the p monitored value.
            </summary>
            <value>
            The p monitored value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1.pStatusFlags">
            <summary>
            Gets or sets the p status flags.
            </summary>
            <value>
            The p status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1.pAlarmValues">
            <summary>
            Gets or sets the p alarm values.
            </summary>
            <value>
            The p alarm values.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1.pTimeDelay">
            <summary>
            Gets or sets the p time delay.
            </summary>
            <value>
            The p time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.ChangeOfStateParameter`1.pTimeDelayNormal">
            <summary>
            Gets or sets the p time delay normal.
            </summary>
            <value>
            The p time delay normal.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.CommandFailure`1">
            <summary>
            Command Failure Event Algorithm
            </summary>
            <typeparam name="TValue">The pMonitoredValue type</typeparam>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.CommandFailure`1.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.CommandFailure`1"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.CommandFailure`1.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.CommandFailureParameter{`0},XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.CommandFailureBACnetBinaryPV">
            <summary>
            Command Failure of BACnetBinaryPV
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.CommandFailureBACnetBinaryPV.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.CommandFailureBACnetBinaryPV"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.CommandFailureASN1Unsigned">
            <summary>
            Command Failure of ASN1Usinged
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.CommandFailureASN1Unsigned.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.CommandFailureBACnetBinaryPV"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1">
            <summary>
            Command Failure Parameter
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1.pCurrentState">
            <summary>
            Gets or sets the state of the p current.
            </summary>
            <value>
            The state of the p current.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1.pMonitoredValue">
            <summary>
            Gets or sets the p monitored value.
            </summary>
            <value>
            The p monitored value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1.pStatusFlags">
            <summary>
            Gets or sets the p status flags.
            </summary>
            <value>
            The p status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1.pFeedbackValue">
            <summary>
            Gets or sets the p feedback value.
            </summary>
            <value>
            The p feedback value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1.pTimeDelay">
            <summary>
            Gets or sets the p time delay.
            </summary>
            <value>
            The p time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.CommandFailureParameter`1.pTimeDelayNormal">
            <summary>
            Gets or sets the p time delay normal.
            </summary>
            <value>
            The p time delay normal.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.IEventAlgorithm">
            <summary>
            BACnet Event Algorithm Interface
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.IEventAlgorithm.type">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.IEventAlgorithm.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1">
            <summary>
            BACnet Event Algorithm base
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.delay">
            <summary>
            The delay
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.#ctor(XAMIO.BACnet.Standard.BACnetEventType,XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.Execute(XAMIO.BACnet.IBACnetNotificationQueue,`0,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.GetTimeDelay(XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Gets the time delay.
            </summary>
            <param name="pTimeDelay">The p time delay.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.GetTimeDelayNormal(XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Unsigned)">
            <summary>
            Gets the time delay normal.
            </summary>
            <param name="pTimeDelayNormal">The p time delay normal.</param>
            <param name="pTimeDelay">The p time delay.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.SetTimeStamp(XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},XAMIO.BACnet.Standard.BACnetEventTransition,System.DateTime)">
            <summary>
            Sets the time stamp.
            </summary>
            <param name="timeStamp">The time stamp.</param>
            <param name="index">The index.</param>
            <param name="dateTime">The date time.</param>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.EventAlgorithmBase`1.ExecuteTransition(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetEventTransition,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Executes the transition.
            </summary>
            <param name="server">The server.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <param name="newState">The new state.</param>
            <param name="actState">State of the act.</param>
            <param name="transition">The transition.</param>
            <param name="prm"></param>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.EventAlogrithmParameter">
            <summary>
            Event Algorithm Parameter
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.FloatingLimit.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.FloatingLimit"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.FloatingLimit.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
            
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pCurrentState">
            <summary>
            Gets or sets the state of the p current.
            </summary>
            <value>
            The state of the p current.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pMonitoredValue">
            <summary>
            represents the current value of the monitored property
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pStatusFlags">
            <summary>
            Gets or sets the p status flags.
            </summary>
            <value>
            The p status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pSetpoint">
            <summary>
            represents the value that defines the reference interval
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pLowDiffLimit">
            <summary>
            represents, when subtracted from pSetpoint, the lower limit of the range considered normal
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pHighDiffLimit">
            <summary>
            represents, when added to pSetpoint, the higher limit of the range considered normal.
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pDeadband">
            <summary>
            represents the deadband that is applied to the respective limit before a return to Normal event state is indicated..
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pTimeDelay">
            <summary>
            represents the time, in seconds, that the offnormal conditions must exist before an offnormal event state is indicated
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.FloatingLimitParameter.pTimeDelayNormal">
            <summary>
            represents the time, in seconds, that the Normal conditions must exist before a NORMAL event state is indicated. 
            If no value is provided for this parameter, then it takes on the value of the pTimeDelay parameter
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.OutOfRange">
            <summary>
            Out of Range Event Algoithm
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.OutOfRange.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.OutOfRange"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.OutOfRange.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.OutOfRangeParameter,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2">
            <summary>
            Out Of Range parameter
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TDeadband">The type of the deadband.</typeparam>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pCurrentState">
            <summary>
            Gets or sets the state of the p current.
            </summary>
            <value>
            The state of the p current.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pMonitoredValue">
            <summary>
            Gets or sets the p monitored value.
            </summary>
            <value>
            The p monitored value.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pStatusFlags">
            <summary>
            Gets or sets the p status flags.
            </summary>
            <value>
            The p status flags.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pLowLimit">
            <summary>
            Gets or sets the p low limit.
            </summary>
            <value>
            The p low limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pHighLimit">
            <summary>
            Gets or sets the p high limit.
            </summary>
            <value>
            The p high limit.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pDeadband">
            <summary>
            Gets or sets the p deadband.
            </summary>
            <value>
            The p deadband.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pLimitEnable">
            <summary>
            Gets or sets the p limit enable.
            </summary>
            <value>
            The p limit enable.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pTimeDelay">
            <summary>
            Gets or sets the p time delay.
            </summary>
            <value>
            The p time delay.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameterBase`2.pTimeDelayNormal">
            <summary>
            Gets or sets the p time delay normal.
            </summary>
            <value>
            The p time delay normal.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.OutOfRangeParameter">
            <summary>
            Out of Range Parameter
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.SignedOutOfRangeParameter">
            <summary>
            Signed Out Of Range Parameter
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.EventAlgorithms.SignedOutOfRange">
            <summary>
            Signed Out Of Range
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.SignedOutOfRange.#ctor(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.EventAlgorithms.SignedOutOfRange"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.EventAlgorithms.SignedOutOfRange.Execute(XAMIO.BACnet.IBACnetNotificationQueue,XAMIO.BACnet.EventAlgorithms.SignedOutOfRangeParameter,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetTimeStamp},System.DateTime)">
            <summary>
            Executes the specified server.
            </summary>
            <param name="server">The server.</param>
            <param name="parameter">The parameter.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="now">The now.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.FaultAlgorithms.FaultAlgorithmBase">
            <summary>
            Fault Algorithm Base
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.FaultAlgorithms.FaultAlgorithmBase.type">
            <summary>
            The type
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.FaultAlgorithms.FaultAlgorithmBase.#ctor(XAMIO.BACnet.Standard.BACnetFaultType)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.FaultAlgorithms.FaultAlgorithmBase"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:XAMIO.BACnet.FaultAlgorithms.FaultCharacterString">
            <summary>
            Fault Character String
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.FaultAlgorithms.FaultCharacterString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.FaultAlgorithms.FaultCharacterString"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.FaultAlgorithms.FaultCharacterString.Execute(XAMIO.BACnet.Standard.ASN1Enum{XAMIO.BACnet.Standard.BACnetReliability},XAMIO.BACnet.Standard.ASN1CharacterString,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.BACnetOptionalCharacterString})">
            <summary>
            Executes the specified p current reliability.
            </summary>
            <param name="pCurrentReliability">The p current reliability.</param>
            <param name="pMonitoredValued">The p monitored valued.</param>
            <param name="pFaultValues">The p fault values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.FaultAlgorithms.FaultStateFaultAlgorithm">
            <summary>
            fault algorithm for fault state - eg for multistate objects
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.FaultAlgorithms.FaultStateFaultAlgorithm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.FaultAlgorithms.FaultCharacterString"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.FaultAlgorithms.FaultStateFaultAlgorithm.Execute(XAMIO.BACnet.Standard.ASN1Enum{XAMIO.BACnet.Standard.BACnetReliability},XAMIO.BACnet.Standard.ASN1Unsigned,XAMIO.BACnet.Standard.ASN1Array{XAMIO.BACnet.Standard.ASN1Unsigned})">
            <summary>
            Executes the specified p current reliability.
            </summary>
            <param name="pCurrentReliability">The p current reliability.</param>
            <param name="pMonitoredValued">The p monitored valued.</param>
            <param name="pFaultValues">The p fault values.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.BACnetManager">
            <summary>
            BACnet Manager
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.BACnetManager.Device">
            <summary>
            Gets the device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.#ctor(XAMIO.BACnet.Network.IBACnetNetworkLayer,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetManager"/> class.
            </summary>
            <param name="network">The network.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.RegisterClient(XAMIO.BACnet.IBACnetApplicationLayer)">
            <summary>
            Registers the client.
            </summary>
            <param name="client">The client.</param>
            <exception cref="T:System.Exception">Client already registered</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.RegisterDevice(XAMIO.BACnet.IBACnetApplicationLayer)">
            <summary>
            Registers the device.
            </summary>
            <param name="device">The device.</param>
            <exception cref="T:System.Exception">Device already registered!</exception>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.Unregister(XAMIO.BACnet.IBACnetApplicationLayer)">
            <summary>
            Unregisters the specified client or device.
            </summary>
            <param name="clientOrDevice">The client or device.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.SendData(System.Byte[],XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Sends the data.
            </summary>
            <param name="data">The data.</param>
            <param name="destinationDevice">The destination device. this should be the NPDU source address if we want to answer a telegram from a router</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.ChangeClientAddress(XAMIO.BACnet.IBACnetApplicationLayer,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Changes the client address.
            </summary>
            <param name="client">The client.</param>
            <param name="oldAddress">The old address.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.SendBroadcast(System.Byte[])">
            <summary>
            Sends the broadcast.
            </summary>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:XAMIO.BACnet.BACnetManagerException">
            <summary>
            BACnet Manager Exception
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManagerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetManagerException"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManagerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetManagerException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManagerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetManagerException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:XAMIO.BACnet.BACnetManagerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.BACnetManagerException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkEventArgs">
            <summary>
            BACnet Network Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkEventArgs.Telegram">
            <summary>
            Gets or sets the telegram.
            </summary>
            <value>
            The telegram.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkEventArgs.#ctor(XAMIO.BACnet.Datalink.IBACnetNetworkTelegram)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkEventArgs"/> class.
            </summary>
            <param name="telegram">The telegram.</param>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkLayer">
            <summary>
            BACnet Network Layer
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkLayer.InitHopCount">
            <summary>
            The init hop count
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkLayer.NoNetwork">
            <summary>
            The no network const Value
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Network.BACnetNetworkLayer.TelegramReceived">
            <summary>
            Occurs when [telegram received].
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkLayer.RoutingTable">
            <summary>
            Gets the routing table.
            </summary>
            <value>
            The routing table.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkLayer.DeviceAddress">
            <summary>
            Gets or sets the local network address.
            </summary>
            <value>
            The local network address.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.#ctor(XAMIO.BACnet.Datalink.IBACnetDatalink,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkLayer"/> class.
            </summary>
            <param name="datalink">The datalink.</param>
            <param name="trace">The trace.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.Bind">
            <summary>
            Binds this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.Release">
            <summary>
            Releases this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.SendData(System.Byte[],XAMIO.BACnet.Standard.BACnetAddress,System.Net.IPEndPoint,XAMIO.BACnet.Standard.BACnetAddress,System.Boolean)">
            <summary>
            Sends the data.
            </summary>
            <param name="payload">The payload.</param>
            <param name="destination">The destination.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="source">The source.</param>
            <param name="expectingReply">if set to <c>true</c> a BACnet-Confirmed-Request-PDU, a segment of a BACnet-ComplexACK-PDU, or a networklayer message expecting a reply is present.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.SendData(XAMIO.BACnet.Datalink.IBACnetNetworkTelegram,XAMIO.BACnet.Standard.BACnetAddress,System.Net.IPEndPoint,XAMIO.BACnet.Standard.BACnetAddress)">
            <summary>
            Sends the data.
            </summary>
            <param name="t">The telegram.</param>
            <param name="destination">The destination.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.OnTelegramReceived(XAMIO.BACnet.Network.BACnetNetworkEventArgs)">
            <summary>
            Raises the <see cref="E:TelegramReceived" /> event.
            </summary>
            <param name="e">The <see cref="T:XAMIO.BACnet.Network.BACnetNetworkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayer.ClearRoutingTable">
            <summary>
            Clears the routing table.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkLayerException">
            <summary>
            BACnet Network Layer Exception
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkLayerException"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkLayerException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkLayerException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkLayerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkLayerException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkMessageType">
            <summary>
            BACnet Network Message Type
            Proprietäry from 128 - 256
            http://www.bacnetwiki.com/wiki/index.php?title=Network_Layer_Message_Type
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.WhoIsRouterToNetwork">
            <summary>
            The who is router to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.IamRouterToNetwork">
            <summary>
            The iam router to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.ICouldBeRouterToNetwork">
            <summary>
            The I could be router to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.RejectMessageToNetwork">
            <summary>
            The reject message to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.RouterBusyToNetwork">
            <summary>
            The router busy to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.RouterAvailableToNetwork">
            <summary>
            The router available to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.InitRTTable">
            <summary>
            The init RT table
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.InitRTTableAck">
            <summary>
            The init RT table ack
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.EstablishConnectionToNetwork">
            <summary>
            The establish connection to network
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkMessageType.DisconnectConnectionToNetwork">
            <summary>
            The disconnect connection to network
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkPriority">
            <summary>
            BACnet Network Priority
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkPriority.LifeSafetyMessage">
            <summary>
            The life safety message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkPriority.CriticalEquipmentMessgae">
            <summary>
            The critical equipment messgae
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkPriority.UrgentMessage">
            <summary>
            The urgent message
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkPriority.NormalMessgae">
            <summary>
            The normal messgae
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkRejectReason">
            <summary>
            BACnet NEtwork Reject Reason
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkRejectReason.Other">
            <summary>
            Other Error
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkRejectReason.RouterCannotFindDestinationNetwork">
            <summary>
            The router is not directly connected to DNET and cannot find a router to DNET on any directly connected network using
            Who-Is-Router-To-Network messages.
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkRejectReason.RouterIsBusy">
            <summary>
            The router is busy and unable to accept messages for the specified DNET at the present time.
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkRejectReason.UnknownNetworkMessageType">
            <summary>
            It is an unknown network layer message type.
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkRejectReason.MessageToLong">
            <summary>
            The message is too long to be routed to this DNET.
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkTelegram">
            <summary>
            BACnet Network Telegram
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.Network.BACnetNetworkTelegram.BACnetProtocolVersion">
            <summary>
            The BACnet protocol version
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.DatalinkTelegram">
            <summary>
            Gets or sets the datalink telegram.
            </summary>
            <value>
            The datalink telegram.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.ContainsNetworkMessage">
            <summary>
            Gets or sets a value indicating whether [contains network message].
            </summary>
            <value>
            <c>true</c> if [contains network message]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.ExpectingReply">
            <summary>
            Gets or sets a value indicating whether [expecting reply].
            
            The value of this bit corresponds to the data_expecting_reply parameter in the N-UNITDATA primitives.
            1 indicates that a BACnet-Confirmed-Request-PDU, a segment of a BACnet-ComplexACK-PDU, or a network
            layer message expecting a reply is present.
            0 indicates that other than a BACnet-Confirmed-Request-PDU, a segment of a BACnet-ComplexACK-PDU, or a
            network layer message expecting a reply is present.
            </summary>
            <value>
              <c>true</c> if [expecting reply]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.NetworlPriority">
            <summary>
            Gets or sets the networl priority.
            </summary>
            <value>
            The networl priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>
            The destination.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.HopCount">
            <summary>
            Gets or sets the hop count.
            </summary>
            <value>
            The hop count.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.Payload">
            <summary>
            Gets or sets the payload.
            </summary>
            <value>
            The payload.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.BACnetNetworkTelegram.NetworkMessageType">
            <summary>
            Gets or sets the type of the network message.
            </summary>
            <value>
            The type of the network message.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkTelegram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Network.BACnetNetworkTelegram"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkTelegram.Decode(System.Byte[])">
            <summary>
            Decodes the specified data.
            </summary>
            <param name="data">The data.</param>
            <exception cref="T:XAMIO.Common.Net.TelegramDecodeException">Illegal BACnet Protocol Version or Protocol Version Changed</exception>
            <exception cref="T:System.Exception">Package Hopcount is 0 => Package ignored!</exception>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkTelegram.Encode">
            <summary>
            Encodes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkTelegram.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:XAMIO.BACnet.Network.BACnetNetworkTelegramFactory">
            <summary>
            BACnet NEtwork Telegram Factory to create BACnet Network Telegrams
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkTelegramFactory.IAmRouterToNetwork(System.UInt16[])">
            <summary>
            Creates a new I-Am-Router-To-Network telegram
            </summary>
            <param name="networkIDs">The network Ids.</param>
            <returns>The network telegram.</returns>
        </member>
        <member name="M:XAMIO.BACnet.Network.BACnetNetworkTelegramFactory.WhoIsRouterToNetwork(System.Nullable{System.UInt16})">
            <summary>
            Whoes the is router to network.
            </summary>
            <param name="remoteNetwork">The remote network.</param>
            <returns></returns>
        </member>
        <member name="E:XAMIO.BACnet.Network.IBACnetNetworkLayer.TelegramReceived">
            <summary>
            Occurs when [telegram received].
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Network.IBACnetNetworkLayer.RoutingTable">
            <summary>
            Gets the routing table.
            </summary>
            <value>
            The routing table.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Network.IBACnetNetworkLayer.DeviceAddress">
            <summary>
            Gets or sets the local network address.
            </summary>
            <value>
            The local network address.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Network.IBACnetNetworkLayer.Bind">
            <summary>
            Binds this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.IBACnetNetworkLayer.Release">
            <summary>
            Releases this instance.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Network.IBACnetNetworkLayer.SendData(System.Byte[],XAMIO.BACnet.Standard.BACnetAddress,System.Net.IPEndPoint,XAMIO.BACnet.Standard.BACnetAddress,System.Boolean)">
            <summary>
            Sends the data.
            </summary>
            <param name="payload">The payload.</param>
            <param name="destination">The destination.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="source">The source.</param>
            <param name="expectingReply">if set to <c>true</c> a BACnet-Confirmed-Request-PDU, a segment of a BACnet-ComplexACK-PDU, or a networklayer message expecting a reply is present.</param>
        </member>
        <member name="M:XAMIO.BACnet.Network.IBACnetNetworkLayer.SendData(XAMIO.BACnet.Datalink.IBACnetNetworkTelegram,XAMIO.BACnet.Standard.BACnetAddress,System.Net.IPEndPoint,XAMIO.BACnet.Standard.BACnetAddress)">
            <summary>
            Sends the data.
            </summary>
            <param name="t">The telegram.</param>
            <param name="destination">The destination.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="source">The source.</param>
        </member>
        <member name="T:XAMIO.BACnet.Service.BACnetDefaultChangedService">
            <summary>
            BACnet Default Changed Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetDefaultChangedService.#ctor(XAMIO.BACnet.Device.IBACnetDevice,XAMCommon.Trace.TraceDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetDefaultChangedService"/> class.
            </summary>
            <param name="device">The device.</param>
            <param name="trace">The trace</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetDefaultChangedService.Register(System.Collections.Generic.List{XAMIO.BACnet.Service.BACnetChangedRegisterItem},System.String)">
            <summary>
            Registers the specified values.
            </summary>
            <param name="values">The values.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetDefaultChangedService.GetChanged(System.String)">
            <summary>
            Gets the changed.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException">
            <summary>
            BACnet Service Already Exists Exception
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.Service.BACnetServiceNotFoundException">
            <summary>
            BACnet Service Not Found Exception
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceNotFoundException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Service.BACnetServiceNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:XAMIO.BACnet.Service.BACnetServiceProvider">
            <summary>
            BACnet Service Provider
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetServiceProvider.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceProvider.GetService``1">
            <summary>
            Gets the service.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceProvider.GetService(System.Type)">
            <summary>
            Gets the service.
            </summary>
            <param name="serviceInterface">The service interface.</param>
            <returns></returns>
            <exception cref="T:XAMIO.BACnet.Service.BACnetServiceNotFoundException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceProvider.Register(System.Type,System.Type)">
            <summary>
            Registers the specified interface type.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="implementationType">Type of the implementation.</param>
            <exception cref="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Service.BACnetServiceProvider.RegisterSingleton(System.Type,System.Object)">
            <summary>
            Registers the singleton.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <param name="instance">The instance.</param>
            <exception cref="T:XAMIO.BACnet.Service.BACnetServiceAlreadyExistsException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Service.IBACnetChangedService">
            <summary>
            BACnet Changed Service Interface
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Service.IBACnetChangedService.Register(System.Collections.Generic.List{XAMIO.BACnet.Service.BACnetChangedRegisterItem},System.String)">
            <summary>
            Registers the specified values.
            </summary>
            <param name="values">The values.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:XAMIO.BACnet.Service.IBACnetChangedService.GetChanged(System.String)">
            <summary>
            Gets the changed.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Service.BACnetChangedRegisterItem">
            <summary>
            BACnet Changed Register Item
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedRegisterItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedRegisterItem.CovIncrement">
            <summary>
            Gets or sets the cov increment.
            </summary>
            <value>
            The cov increment.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedRegisterItem.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedRegisterItem.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.Service.BACnetChangedItem">
            <summary>
            BACnet Changed Item
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedItem.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Service.BACnetChangedItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:XAMIO.BACnet.BACnetConformanceCode">
            <summary>
            BACnet Conformance Code
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.BACnetConformanceCode.O">
            <summary>
            optional
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.BACnetConformanceCode.R">
            <summary>
            readable
            </summary>
        </member>
        <member name="F:XAMIO.BACnet.BACnetConformanceCode.W">
            <summary>
            writeable
            </summary>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.BACnetAddressChangedEventArgs">
            <summary>
            BACnet address changed event arguments
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetAddressChangedEventArgs.OldAddress">
            <summary>
            Gets the old address.
            </summary>
            <value>
            The old address.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetAddressChangedEventArgs.NewAddress">
            <summary>
            Gets the new address.
            </summary>
            <value>
            The new address.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAddressChangedEventArgs.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.BACnetAddressChangedEventArgs"/> class.
            </summary>
            <param name="oldAddress">The old address.</param>
            <param name="newAddress">The new address.</param>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.BACnetClient">
            <summary>
            BACnet Client App Layer
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetClient.ObjectAccess">
            <summary>
            Gets the object access.
            </summary>
            <value>
            The object access.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetClient.AlarmAndEvent">
            <summary>
            Gets the alarm and event.
            </summary>
            <value>
            The alarm and event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetClient.FileAccess">
            <summary>
            Gets the file access.
            </summary>
            <value>
            The file access.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetClient.DeviceManagement">
            <summary>
            Gets the device management.
            </summary>
            <value>
            The device management.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetClient.SubscriberId">
            <summary>
            Gets or sets the subscriber identifier.
            </summary>
            <value>
            The subscriber identifier.
            </value>
        </member>
        <member name="E:XAMIO.BACnet.Workstation.BACnetClient.AddressChanged">
            <summary>
            Occurs when [address changed].
            </summary>
        </member>
        <member name="E:XAMIO.BACnet.Workstation.BACnetClient.DeviceRestarted">
            <summary>
            Occurs when [device restarted].
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetClient.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.#ctor(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.IBACnetProxyClient,XAMCommon.Trace.TraceDelegate,XAMIO.BACnet.Workstation.Services.IBACnetConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.BACnetClient"/> class.
            </summary>
            <param name="address">The address.</param>
            <param name="remoteClient">The manager.</param>
            <param name="trace">The trace.</param>
            <param name="config"></param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.ConfirmedRequestReceived(XAMIO.BACnet.IBACnetContext)">
            <summary>
            Confirmeds the request.
            </summary>
            <param name="context"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.ResetClientAddressForDynamicClient">
            <summary>
            Resets the client address for dynamic client.
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.UnconfirmedRequestReceived(XAMIO.BACnet.IBACnetContext)">
            <summary>
            Unconfirmeds the request.
            </summary>
            <param name="context"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.OnAddressChanged(XAMIO.BACnet.Standard.BACnetAddressBinding,XAMIO.BACnet.Standard.BACnetAddressBinding)">
            <summary>
            Called when [address changed].
            </summary>
            <param name="oldAddress"></param>
            <param name="newAddress"></param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.OnDeviceRestarted">
            <summary>
            Called when [device restarted].
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetClient.GetPassword">
            <summary>
            Gets the password.
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService">
            <summary>
            BACnet Alarm and Event Services
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.UseCOVIssuedConfirmed">
            <summary>
            Gets or sets a value indicating whether [use cov issued confirmed].
            </summary>
            <value>
            <c>true</c> if [use cov issued confirmed]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.COVNotifications">
            <summary>
            Gets the cov notifications.
            </summary>
            <value>
            The cov notifications.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.EventNotifications">
            <summary>
            Gets the event notifications.
            </summary>
            <value>
            The event notifications.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.#ctor(XAMIO.BACnet.Workstation.BACnetClient,XAMCommon.Trace.TraceDelegate,XAMIO.BACnet.Workstation.Services.IBACnetConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService"/> class.
            </summary>
            <param name="client">The layer.</param>
            <param name="t"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.SubscribeNotificationClass(System.Int32)">
            <summary>
            subscribe for a notification class
            </summary>
            <param name="clsid">the bacnet id of the notification class</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.UnSubscribeNotificationClass(System.Int32)">
            <summary>
            unsubscribe from a notification class
            </summary>
            <param name="clsid">the bacnet id of the notification class</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.SubscribeCOV(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32)">
            <summary>
            Subscribes the cov.
            </summary>
            <param name="monitoredObject">The monitored object.</param>
            <param name="lifetime">The lifetime.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.SubscribeCOVBegin(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32)">
            <summary>
            Subscribes the cov begin.
            </summary>
            <param name="monitoredObject">The monitored object.</param>
            <param name="lifetime">The lifetime [sec].</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.UnsubscribeCOV(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            If both the 'Issue Confirmed Notifications' and 'Lifetime'
            parameters are absent, then this shall indicate a cancellation request.
            </summary>
            <param name="monitoredObject"></param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.SubscribeCOVProperty(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Nullable{System.Double})">
            <summary>
            Subscribes the cov property.
            </summary>
            <param name="monitoredObject">The monitored object.</param>
            <param name="lifetime">The lifetime.</param>
            <param name="property">The property.</param>
            <param name="covIncrement">The cov increment.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.SubscribeCOVPropertyBegin(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Nullable{System.Double})">
            <summary>
            Subscribes the cov property.
            </summary>
            <param name="monitoredObject">The monitored object.</param>
            <param name="lifetime">The lifetime.</param>
            <param name="property">The property.</param>
            <param name="covIncrement">The cov increment.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.UnsubscribeCOVProperty(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier)">
            <summary>
            Unsubscribes the cov property.
            </summary>
            <param name="monitoredObject">The monitored object.</param>
            <param name="property">The property.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.GetAlarmSummary">
            <summary>
            Gets the alarm summary.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.GetEnrollmentSummary(XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.AcknowledgmentFilterType,XAMIO.BACnet.Standard.BACnetRecipientProcess,System.Nullable{XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.EventStateFilterType},System.Nullable{XAMIO.BACnet.Standard.BACnetEventType},XAMIO.BACnet.Standard.GetEnrollmentSummaryRequest.PriorityFilterType,System.Nullable{System.UInt32})">
            <summary>
            Gets the enrollment summary.
            </summary>
            <param name="ackfilter">The ackfilter.</param>
            <param name="enrollmentFilter">The enrollment filter.</param>
            <param name="eventfilter">The eventfilter.</param>
            <param name="eventTypeFiler">The event type filer.</param>
            <param name="priorityFiler">The priority filer.</param>
            <param name="notificatonClassFilter">The notificaton class filter.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.GetEventInformation(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Gets the event information.
            </summary>
            <param name="lastReceived"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService.AcknowledgeAlarm(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetTimeStamp,System.String,XAMIO.BACnet.Standard.BACnetTimeStamp)">
            <summary>
            Acknowledges the alarm.
            </summary>
            <param name="processIdentifier">The process identifier.</param>
            <param name="eventObj">The event object.</param>
            <param name="eventState">State of the event.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="source">The source.</param>
            <param name="ackTime">The ack time.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.COVNotificationEventArgs">
            <summary>
            COV Notification Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.COVNotificationEventArgs.SubscriberProcessIdentifier">
            <summary>
            Gets or sets the subscriber process identifier.
            </summary>
            <value>
            The subscriber process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.COVNotificationEventArgs.InitiatingDeviceIdentifier">
            <summary>
            Gets or sets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.COVNotificationEventArgs.MonitoredObjectIdentifier">
            <summary>
            Gets or sets the monitored object identifier.
            </summary>
            <value>
            The monitored object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.COVNotificationEventArgs.TimeRemaining">
            <summary>
            Gets or sets the time remaining.
            </summary>
            <value>
            The time remaining.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.COVNotificationEventArgs.ListOfValues">
            <summary>
            Gets or sets the list of values.
            </summary>
            <value>
            The list of values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.COVNotificationEventArgs.#ctor(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.UInt32,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.COVNotificationEventArgs"/> class.
            </summary>
            <param name="subscriber">The subscriber.</param>
            <param name="initiator">The initiator.</param>
            <param name="monitored">The monitored.</param>
            <param name="timeremaining">The timeremaining.</param>
            <param name="listOfValues">The list of values.</param>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.EventNotificationEventArgs">
            <summary>
            Event Notification Event Args
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.ProcessIdentifier">
            <summary>
            Gets the process identifier.
            </summary>
            <value>
            The process identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.InitiatingDeviceIdentifier">
            <summary>
            Gets the initiating device identifier.
            </summary>
            <value>
            The initiating device identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.EventObjectIdentifier">
            <summary>
            Gets the event object identifier.
            </summary>
            <value>
            The event object identifier.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.TimeStamp">
            <summary>
            Gets the time stamp.
            </summary>
            <value>
            The time stamp.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.NotificationClass">
            <summary>
            Gets the notification class.
            </summary>
            <value>
            The notification class.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.Priority">
            <summary>
            Gets the priority.
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.EventType">
            <summary>
            Gets the type of the event.
            </summary>
            <value>
            The type of the event.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.EventTypeInt32">
            <summary>
            serialze event type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.MessageText">
            <summary>
            Gets the message text.
            </summary>
            <value>
            The message text.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.NotifyType">
            <summary>
            Gets the type of the notify.
            </summary>
            <value>
            The type of the notify.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.AckRequired">
            <summary>
            Gets a value indicating whether [ack required].
            </summary>
            <value>
              <c>true</c> if [ack required]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.FromState">
            <summary>
            Gets from state.
            </summary>
            <value>
            From state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.FromStateInt32">
            <summary>
            serialze event type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.ToState">
            <summary>
            Gets to state.
            </summary>
            <value>
            To state.
            </value>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.ToStateInt32">
            <summary>
            serialze event type
            </summary>
        </member>
        <member name="P:XAMIO.BACnet.Workstation.EventNotificationEventArgs.EventValues">
            <summary>
            Gets the event values.
            </summary>
            <value>
            The event values.
            </value>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.EventNotificationEventArgs.#ctor">
            <summary>
            for serialization
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.EventNotificationEventArgs.#ctor(System.UInt32,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetTimeStamp,System.UInt32,System.UInt32,System.Nullable{XAMIO.BACnet.Standard.BACnetEventType},System.String,XAMIO.BACnet.Standard.BACnetNotifyType,System.Boolean,System.Nullable{XAMIO.BACnet.Standard.BACnetEventState},XAMIO.BACnet.Standard.BACnetEventState,XAMIO.BACnet.Standard.BACnetNotificationParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.EventNotificationEventArgs"/> class.
            </summary>
            <param name="process">The process.</param>
            <param name="initiating">The initiating.</param>
            <param name="eventObj">The event object.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="notificationClass">The notification class.</param>
            <param name="priority">The priority.</param>
            <param name="eventType">Type of the event.</param>
            <param name="message">The message.</param>
            <param name="notifyType">Type of the notify.</param>
            <param name="ackRequired">if set to <c>true</c> [ack required].</param>
            <param name="fromState">From state.</param>
            <param name="toState">To state.</param>
            <param name="eventValue">The event value.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.EventNotificationEventArgs.ToString">
            <summary>
            to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.BACnetDeviceManagementService">
            <summary>
            BACnet Device Management Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.#ctor(XAMIO.BACnet.BACnetClientBase)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.BACnetAlarmAndEventService"/> class.
            </summary>
            <param name="client">The layer.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.DeviceCommunicationControl(XAMIO.BACnet.Standard.BACnetCommunicationControlAction,System.String,System.Nullable{System.Int32})">
            <summary>
            Devices the communication control.
            </summary>
            <param name="action">The action.</param>
            <param name="password">The password</param>
            <param name="duration">The duration</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.ReinitializeDevice(XAMIO.BACnet.Standard.BACnetReinitializeAction,System.String)">
            <summary>
            Reinitializes the device.
            </summary>
            <param name="action">The action.</param>
            <param name="password">The password</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.WhoIs(System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Whoes the is.
            </summary>
            <param name="low">The low.</param>
            <param name="high">The high.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.WhoHasUnconfirmed(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Whoes the has unconfirmed.
            </summary>
            <param name="ident">The ident.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.WhoHas(System.String,System.Int32,XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits)">
            <summary>
            Whoes the has.
            </summary>
            <param name="name">The name.</param>
            <param name="timeout">The timeout.</param>
            <param name="limits">The limits.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.WhoHas(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,XAMIO.BACnet.Standard.WhoHasRequest.WhoHasRequestLimits)">
            <summary>
            Whoes the has.
            </summary>
            <param name="ident">The ident.</param>
            <param name="timeout">The timeout.</param>
            <param name="limits">The limits.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetDeviceManagementService.WhoHasUnconfirmed(System.String)">
            <summary>
            Whoes the has unconfirmed.
            </summary>
            <param name="objName">Name of the object.</param>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.BACnetFileAccessService">
            <summary>
            BACnet File Access Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.#ctor(XAMIO.BACnet.Workstation.BACnetClient)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.BACnetObjectAccessService"/> class.
            </summary>
            <param name="client">The layer.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.AtomicReadFile(XAMIO.BACnet.Standard.BACnetObjectIdentifier)">
            <summary>
            Atomics the read file.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">AtomicReadFile Record Access not implemented</exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.AtomicReadFileStream(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Int32)">
            <summary>
            Atomics the read file stream.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="start">The start.</param>
            <param name="packetSize">Size of the packet.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Invalid Response  + (response == null ? null : response.GetType().Name)</exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.AtomicReadFileRecords(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Int32)">
            <summary>
            Atomics the read file records.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Invalid Response  + (response == null ? null : response.GetType().Name)</exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.AtomicWriteFile(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.String,XAMIO.BACnet.Standard.BACnetFileAccessMethod)">
            <summary>
            Atomics the write file.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="file"></param>
            <param name="accessMethod"></param>
            <exception cref="T:System.NotImplementedException">AtomicReadFile Record Access not implemented</exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.AtomicWriteFileStream(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Byte[])">
            <summary>
            Atomics the write file stream.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="start">The start.</param>
            <param name="data">The data.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Invalid Response  + (response == null ? null : response.GetType().Name)</exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetFileAccessService.AtomicWriteFileRecords(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Int32,System.Collections.Generic.List{XAMIO.BACnet.Standard.ASN1OctetString})">
            <summary>
            Atomics the write file records.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="start">The start.</param>
            <param name="records">The records.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">Invalid Response  + (response == null ? null : response.GetType().Name)</exception>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.BACnetObjectAccessService">
            <summary>
            BACnet Object Access Service
            </summary>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.#ctor(XAMIO.BACnet.Workstation.BACnetClient)">
            <summary>
            Initializes a new instance of the <see cref="T:XAMIO.BACnet.Workstation.BACnetObjectAccessService"/> class.
            </summary>
            <param name="client">The layer.</param>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.ReadProperty(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Nullable{System.Int32})">
            <summary>
            Reads the property.
            </summary>
            <param name="obj">The object.</param>
            <param name="property">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.CreateObject(XAMIO.BACnet.Standard.BACnetObjectIdentifier,System.Collections.Generic.List{XAMIO.BACnet.Standard.BACnetPropertyValue})">
            <summary>
            Creates the object.
            </summary>
            <param name="obj">The object.</param>
            <param name="values">The values.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.ReadPropertyMultiple(XAMIO.BACnet.Standard.ReadAccessSpecification)">
            <summary>
            Reads the property multiple.
            </summary>
            <param name="requestedValues">The requested values.</param>
            <returns></returns>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.ReadPropertyMultiple(System.Collections.Generic.List{XAMIO.BACnet.Standard.ReadAccessSpecification})">
            <summary>
            Reads the property multiple.
            </summary>
            <param name="requestedValues">The requested values.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.ReadRange(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,System.Nullable{System.Int32},XAMIO.BACnet.Standard.ReadRangeRequest.ReadRangeRange)">
            <summary>
            Reads the range.
            </summary>
            <param name="obj">The object.</param>
            <param name="property">The property.</param>
            <param name="arrayIndex">Index of the array.</param>
            <param name="range">The range.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.WriteProperty(XAMIO.BACnet.Standard.BACnetObjectIdentifier,XAMIO.BACnet.Standard.BACnetPropertyIdentifier,XAMIO.BACnet.Standard.IAbstractSyntaxAndType,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Writes the property.
            </summary>
            <param name="obj">The object.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
            <param name="arrayIndex">Index of the array.</param>
            <param name="priority">The priority.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:XAMIO.BACnet.Workstation.BACnetObjectAccessService.WritePropertyMultiple(System.Collections.Generic.List{XAMIO.BACnet.Standard.WriteAccessSpecification})">
            <summary>
            Writes the property multiple.
            </summary>
            <param name="spec">The spec.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:XAMIO.BACnet.Workstation.IBACnetWorkstationService">
            <summary>
            BACnet Workstation Service Interface
            </summary>
        </member>
        <member name="M:XAMBACnet.TypeExtensions.Xml.XMLSerializer.Serialize``1(``0)">
            <summary>
            serialize this object to a XML string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:XAMBACnet.TypeExtensions.Xml.XMLSerializer.Deserialize``1(System.String)">
            <summary>
            Deserialize a XML string to a object of type T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="str"></param>
            <returns></returns>
        </member>
    </members>
</doc>
